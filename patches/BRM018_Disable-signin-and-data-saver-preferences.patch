From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Tue, 12 Jun 2018 14:23:07 +0200
Subject: Disable signin and data saver preferences

Never show the data saver promo snackbar
---
 chrome/android/java/res/xml/main_preferences.xml   |  9 -----
 .../chromium/chrome/browser/ChromeActivity.java    |  6 ++--
 .../browser/preferences/MainPreferences.java       | 39 +++++++++++-----------
 3 files changed, 24 insertions(+), 30 deletions(-)

diff --git a/chrome/android/java/res/xml/main_preferences.xml b/chrome/android/java/res/xml/main_preferences.xml
--- a/chrome/android/java/res/xml/main_preferences.xml
+++ b/chrome/android/java/res/xml/main_preferences.xml
@@ -10,10 +10,6 @@
         android:key="account_section"
         android:order="0"
         android:title="@string/prefs_section_account"/>
-    <org.chromium.chrome.browser.preferences.SignInPreference
-        android:key="sign_in"
-        android:order="1"
-        android:title="@string/sign_in_to_chrome"/>
     <org.chromium.chrome.browser.preferences.ChromeBasePreference
         android:fragment="org.chromium.chrome.browser.preferences.SyncAndServicesPreferences"
         android:key="sync_and_services"
@@ -85,11 +81,6 @@
         android:order="15"
         android:title="@string/prefs_languages"/>
     <org.chromium.chrome.browser.preferences.ChromeBasePreference
-        android:fragment="org.chromium.chrome.browser.preferences.datareduction.DataReductionPreferences"
-        android:key="data_reduction"
-        android:order="16"
-        android:title="@string/data_reduction_title"/>
-    <org.chromium.chrome.browser.preferences.ChromeBasePreference
         android:fragment="org.chromium.chrome.browser.preferences.download.DownloadPreferences"
         android:key="downloads"
         android:order="17"
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeActivity.java
@@ -118,7 +118,7 @@ import org.chromium.chrome.browser.printing.TabPrinter;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.share.ShareMenuActionHandler;
 import org.chromium.chrome.browser.snackbar.BottomContainer;
-import org.chromium.chrome.browser.snackbar.DataReductionPromoSnackbarController;
+//import org.chromium.chrome.browser.snackbar.DataReductionPromoSnackbarController;
 import org.chromium.chrome.browser.snackbar.SnackbarManager;
 import org.chromium.chrome.browser.snackbar.SnackbarManager.SnackbarManageable;
 import org.chromium.chrome.browser.sync.ProfileSyncService;
@@ -263,7 +263,7 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
     protected ReaderModeManager mReaderModeManager;
     private SnackbarManager mSnackbarManager;
     private ModalDialogManager mModalDialogManager;
-    private DataReductionPromoSnackbarController mDataReductionPromoSnackbarController;
+    //private DataReductionPromoSnackbarController mDataReductionPromoSnackbarController;
     private AppMenuPropertiesDelegate mAppMenuPropertiesDelegate;
     private AppMenuHandler mAppMenuHandler;
     private ToolbarManager mToolbarManager;
@@ -666,6 +666,7 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         mTabModelSelectorTabObserver = new TabModelSelectorTabObserver(mTabModelSelector) {
             @Override
             public void didFirstVisuallyNonEmptyPaint(Tab tab) {
+/*
                 // Only alert about data savings once the first paint has happened. It
                 // doesn't make sense to show a snackbar about savings when nothing has been
                 // displayed yet.
@@ -679,6 +680,7 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
                             DataReductionProxySettings.getInstance()
                                     .getTotalHttpContentLengthSaved());
                 }
+*/
             }
 
             @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java b/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/preferences/MainPreferences.java
@@ -17,9 +17,9 @@ import org.chromium.base.VisibleForTesting;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.ChromeFeatureList;
 import org.chromium.chrome.browser.contextual_suggestions.ContextualSuggestionsEnabledStateUtils;
-import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
+//import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
 import org.chromium.chrome.browser.partnercustomizations.HomepageManager;
-import org.chromium.chrome.browser.preferences.datareduction.DataReductionPreferences;
+//import org.chromium.chrome.browser.preferences.datareduction.DataReductionPreferences;
 import org.chromium.chrome.browser.search_engines.TemplateUrl;
 import org.chromium.chrome.browser.search_engines.TemplateUrlService;
 import org.chromium.chrome.browser.signin.SigninManager;
@@ -34,13 +34,11 @@ import java.util.Map;
 public class MainPreferences extends PreferenceFragment
         implements SigninManager.SignInStateObserver, TemplateUrlService.LoadListener {
     public static final String PREF_ACCOUNT_SECTION = "account_section";
-    public static final String PREF_SIGN_IN = "sign_in";
     public static final String PREF_SYNC_AND_SERVICES = "sync_and_services";
     public static final String PREF_SEARCH_ENGINE = "search_engine";
     public static final String PREF_SAVED_PASSWORDS = "saved_passwords";
     public static final String PREF_CONTEXTUAL_SUGGESTIONS = "contextual_suggestions";
     public static final String PREF_HOMEPAGE = "homepage";
-    public static final String PREF_DATA_REDUCTION = "data_reduction";
     public static final String PREF_NOTIFICATIONS = "notifications";
     public static final String PREF_LANGUAGES = "languages";
     public static final String PREF_DOWNLOADS = "downloads";
@@ -52,7 +50,6 @@ public class MainPreferences extends PreferenceFragment
 
     private final ManagedPreferenceDelegate mManagedPreferenceDelegate;
     private final Map<String, Preference> mAllPreferences = new HashMap<>();
-    private SignInPreference mSignInPreference;
 
     public MainPreferences() {
         setHasOptionsMenu(true);
@@ -68,25 +65,29 @@ public class MainPreferences extends PreferenceFragment
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mSignInPreference.onPreferenceFragmentDestroyed();
+        //mSignInPreference.onPreferenceFragmentDestroyed();
     }
 
     @Override
     public void onStart() {
         super.onStart();
+/*
         if (SigninManager.get().isSigninSupported()) {
             SigninManager.get().addSignInStateObserver(this);
             mSignInPreference.registerForUpdates();
         }
+*/
     }
 
     @Override
     public void onStop() {
         super.onStop();
+/*
         if (SigninManager.get().isSigninSupported()) {
             SigninManager.get().removeSignInStateObserver(this);
             mSignInPreference.unregisterForUpdates();
         }
+*/
     }
 
     @Override
@@ -99,16 +100,16 @@ public class MainPreferences extends PreferenceFragment
         PreferenceUtils.addPreferencesFromResource(this, R.xml.main_preferences);
         cachePreferences();
 
-        if (ChromeFeatureList.isEnabled(ChromeFeatureList.UNIFIED_CONSENT)) {
+/*        if (ChromeFeatureList.isEnabled(ChromeFeatureList.UNIFIED_CONSENT)) {
             mSignInPreference.setOnStateChangedCallback(this::onSignInPreferenceStateChanged);
-        } else {
+        } else */{
             getPreferenceScreen().removePreference(findPreference(PREF_ACCOUNT_SECTION));
             getPreferenceScreen().removePreference(findPreference(PREF_SYNC_AND_SERVICES));
         }
 
         setManagedPreferenceDelegateForPreference(PREF_SEARCH_ENGINE);
         setManagedPreferenceDelegateForPreference(PREF_SAVED_PASSWORDS);
-        setManagedPreferenceDelegateForPreference(PREF_DATA_REDUCTION);
+        //setManagedPreferenceDelegateForPreference(PREF_DATA_REDUCTION);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             // If we are on Android O+ the Notifications preference should lead to the Android
@@ -164,7 +165,7 @@ public class MainPreferences extends PreferenceFragment
             Preference preference = getPreferenceScreen().getPreference(index);
             mAllPreferences.put(preference.getKey(), preference);
         }
-        mSignInPreference = (SignInPreference) mAllPreferences.get(PREF_SIGN_IN);
+        //mSignInPreference = (SignInPreference) mAllPreferences.get(PREF_SIGN_IN);
     }
 
     private void setManagedPreferenceDelegateForPreference(String key) {
@@ -173,12 +174,6 @@ public class MainPreferences extends PreferenceFragment
     }
 
     private void updatePreferences() {
-        if (SigninManager.get().isSigninSupported()) {
-            addPreferenceIfAbsent(PREF_SIGN_IN);
-        } else {
-            removePreferenceIfPresent(PREF_SIGN_IN);
-        }
-
         updateSearchEnginePreference();
 
         if (HomepageManager.shouldShowHomepageSetting()) {
@@ -201,9 +196,11 @@ public class MainPreferences extends PreferenceFragment
             removePreferenceIfPresent(PREF_CONTEXTUAL_SUGGESTIONS);
         }
 
+/*
         ChromeBasePreference dataReduction =
                 (ChromeBasePreference) findPreference(PREF_DATA_REDUCTION);
         dataReduction.setSummary(DataReductionPreferences.generateSummary(getResources()));
+*/
     }
 
     private Preference addPreferenceIfAbsent(String key) {
@@ -254,11 +251,11 @@ public class MainPreferences extends PreferenceFragment
 
     private void onSignInPreferenceStateChanged() {
         // Remove "Account" section header if the personalized sign-in promo is shown.
-        if (mSignInPreference.getState() == SignInPreference.State.PERSONALIZED_PROMO) {
+//        if (mSignInPreference.getState() == SignInPreference.State.PERSONALIZED_PROMO) {
             removePreferenceIfPresent(PREF_ACCOUNT_SECTION);
-        } else {
+/*        } else {
             addPreferenceIfAbsent(PREF_ACCOUNT_SECTION);
-        }
+        }*/
     }
 
     // TemplateUrlService.LoadListener implementation.
@@ -280,9 +277,11 @@ public class MainPreferences extends PreferenceFragment
                 if (PREF_SAVED_PASSWORDS.equals(preference.getKey())) {
                     return PrefServiceBridge.getInstance().isRememberPasswordsManaged();
                 }
+/*
                 if (PREF_DATA_REDUCTION.equals(preference.getKey())) {
                     return DataReductionProxySettings.getInstance().isDataReductionProxyManaged();
                 }
+*/
                 if (PREF_SEARCH_ENGINE.equals(preference.getKey())) {
                     return TemplateUrlService.getInstance().isDefaultSearchManaged();
                 }
@@ -296,11 +295,13 @@ public class MainPreferences extends PreferenceFragment
                     return prefs.isRememberPasswordsManaged()
                             && !prefs.isRememberPasswordsEnabled();
                 }
+/*
                 if (PREF_DATA_REDUCTION.equals(preference.getKey())) {
                     DataReductionProxySettings settings = DataReductionProxySettings.getInstance();
                     return settings.isDataReductionProxyManaged()
                             && !settings.isDataReductionProxyEnabled();
                 }
+*/
                 if (PREF_SEARCH_ENGINE.equals(preference.getKey())) {
                     return TemplateUrlService.getInstance().isDefaultSearchManaged();
                 }
-- 
2.11.0

