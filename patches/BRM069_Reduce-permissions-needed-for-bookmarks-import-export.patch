From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Sat, 10 Nov 2018 16:09:26 +0100
Subject: Reduce permissions needed for bookmarks import/export

Completely remove contacts picker permission from the file dialog
---
 chrome/android/java/AndroidManifest.xml              |  1 -
 chrome/browser/android/bookmarks/bookmark_bridge.cc  | 20 +++++++++++++++++---
 .../src/org/chromium/ui/base/SelectFileDialog.java   | 12 ++++++++----
 3 files changed, 25 insertions(+), 8 deletions(-)

diff --git a/chrome/android/java/AndroidManifest.xml b/chrome/android/java/AndroidManifest.xml
--- a/chrome/android/java/AndroidManifest.xml
+++ b/chrome/android/java/AndroidManifest.xml
@@ -35,7 +35,6 @@ by a child template that "extends" this file.
     {% endif %}
     <uses-permission-sdk-23 android:name="android.permission.BLUETOOTH"/>
     <uses-permission-sdk-23 android:name="android.permission.BLUETOOTH_ADMIN"/>
-    <uses-permission-sdk-23 android:name="android.permission.READ_CONTACTS"/>
     <uses-permission-sdk-23 android:name="android.permission.REORDER_TASKS"/>
     <uses-permission-sdk-23 android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>
 
diff --git a/chrome/browser/android/bookmarks/bookmark_bridge.cc b/chrome/browser/android/bookmarks/bookmark_bridge.cc
--- a/chrome/browser/android/bookmarks/bookmark_bridge.cc
+++ b/chrome/browser/android/bookmarks/bookmark_bridge.cc
@@ -552,14 +552,23 @@ void BookmarkBridge::ImportBookmarks(JNIEnv* env,
   select_file_dialog_ = ui::SelectFileDialog::Create(
     this, std::make_unique<ChromeSelectFilePolicy>(nullptr));
 
-  //NOTE: extension and description are not used on Android
+  //NOTE: extension and description are not used on Android, thus not set
   ui::SelectFileDialog::FileTypeInfo file_type_info;
+
+#if defined(OS_ANDROID)
+  static const std::vector<base::string16> v_accept_types = { base::UTF8ToUTF16("text/html") };
+
+  // Android needs the original MIME types and an additional capture value.
+  std::pair<std::vector<base::string16>, bool> accept_types =
+      std::make_pair(v_accept_types, /* use_media_capture */ false);
+#else
   file_type_info.extensions.resize(1);
   file_type_info.extensions[0].push_back(FILE_PATH_LITERAL("html"));
   file_type_info.extensions[0].push_back(FILE_PATH_LITERAL("htm"));
   file_type_info.extension_description_overrides.push_back(base::ASCIIToUTF16("Netscape Bookmark"));
   file_type_info.allowed_paths =
-      ui::SelectFileDialog::FileTypeInfo::NATIVE_OR_DRIVE_PATH;
+      ui::SelectFileDialog::FileTypeInfo::ANY_PATH;
+#endif
 
   select_file_dialog_->SelectFile(
         ui::SelectFileDialog::SELECT_OPEN_FILE,
@@ -569,7 +578,12 @@ void BookmarkBridge::ImportBookmarks(JNIEnv* env,
         0,
         base::FilePath::StringType(),
         window,
-        NULL);
+#if defined(OS_ANDROID)
+        &accept_types
+#else
+        NULL
+#endif
+);
 
   //NOTE: this should be called after the actual import
   Java_BookmarkBridge_bookmarksImported(env, obj);
diff --git a/ui/android/java/src/org/chromium/ui/base/SelectFileDialog.java b/ui/android/java/src/org/chromium/ui/base/SelectFileDialog.java
--- a/ui/android/java/src/org/chromium/ui/base/SelectFileDialog.java
+++ b/ui/android/java/src/org/chromium/ui/base/SelectFileDialog.java
@@ -52,6 +52,7 @@ public class SelectFileDialog
     private static final String IMAGE_TYPE = "image/";
     private static final String VIDEO_TYPE = "video/";
     private static final String AUDIO_TYPE = "audio/";
+    private static final String HTML_TYPE = "text/html";
     private static final String ALL_IMAGE_TYPES = IMAGE_TYPE + "*";
     private static final String ALL_VIDEO_TYPES = VIDEO_TYPE + "*";
     private static final String ALL_AUDIO_TYPES = AUDIO_TYPE + "*";
@@ -159,7 +160,7 @@ public class SelectFileDialog
             if (!window.hasPermission(Manifest.permission.READ_CONTACTS)) {
                 missingPermissions.add(Manifest.permission.READ_CONTACTS);
             }
-        } else if (shouldUsePhotoPicker()) {
+        } else if (shouldUsePhotoPicker() || shouldShowHtmlTypes()) {
             if (!window.hasPermission(Manifest.permission.READ_EXTERNAL_STORAGE)) {
                 missingPermissions.add(Manifest.permission.READ_EXTERNAL_STORAGE);
             }
@@ -324,9 +325,7 @@ public class SelectFileDialog
      *   3.) There is a valid Android Activity associated with the file request.
      */
     private boolean shouldUseContactsPicker() {
-        if (mFileTypes.size() != 1) return false;
-        if (!mFileTypes.get(0).equals("text/json+contacts")) return false;
-        return UiUtils.shouldShowContactsPicker() && mWindowAndroid.getActivity().get() != null;
+       return false;
     }
 
     /**
@@ -347,6 +346,7 @@ public class SelectFileDialog
             }
             if (!mimeTypes.contains(mimeType)) mimeTypes.add(mimeType);
         }
+        if (mimeTypes.size() == 0) return null;
         return mimeTypes;
     }
 
@@ -649,6 +649,10 @@ public class SelectFileDialog
         return countAcceptTypesFor(specificType) > 0;
     }
 
+    private boolean shouldShowHtmlTypes() {
+        return countAcceptTypesFor(HTML_TYPE) > 0;
+    }
+
     private boolean shouldShowImageTypes() {
         return shouldShowTypes(ALL_IMAGE_TYPES, IMAGE_TYPE);
     }
-- 
2.11.0

