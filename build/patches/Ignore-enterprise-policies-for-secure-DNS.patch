From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Thu, 24 Jun 2021 13:22:00 +0000
Subject: Ignore enterprise policies for secure DNS

---
 .../org/chromium/chrome/browser/policy/EnterpriseInfo.java  | 6 ++++--
 chrome/browser/about_flags.cc                               | 5 +++++
 chrome/browser/flag_descriptions.cc                         | 5 +++++
 chrome/browser/flag_descriptions.h                          | 3 +++
 chrome/browser/flags/android/chrome_feature_list.cc         | 4 ++++
 chrome/browser/flags/android/chrome_feature_list.h          | 1 +
 .../chromium/chrome/browser/flags/CachedFeatureFlags.java   | 1 +
 .../chromium/chrome/browser/flags/ChromeFeatureList.java    | 1 +
 8 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/policy/EnterpriseInfo.java b/chrome/android/java/src/org/chromium/chrome/browser/policy/EnterpriseInfo.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/policy/EnterpriseInfo.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/policy/EnterpriseInfo.java
@@ -24,6 +24,7 @@ import org.chromium.base.annotations.NativeMethods;
 import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.base.task.AsyncTask;
 import org.chromium.base.task.TaskTraits;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.flags.ChromeSwitches;
 
 import java.util.LinkedList;
@@ -90,8 +91,9 @@ public class EnterpriseInfo {
         ThreadUtils.assertOnUiThread();
         assert callback != null;
 
-        if (true) {
-           return;
+        if (!ChromeFeatureList.isEnabled(ChromeFeatureList.ENABLE_DEVICE_ENTERPRISE_INFO)) {
+            Log.i("EnterpriseInfo", "User disabled");
+            return;
         }
 
         // If there is already a cached result post a task to return it.
diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -4889,6 +4889,11 @@ const FeatureEntry kFeatureEntries[] = {
 #endif  // defined(OS_ANDROID)
 
 #if defined(OS_ANDROID)
+    {"enable-device-enterprise-info",
+     flag_descriptions::kEnableDeviceEnterpriseInfoName,
+     flag_descriptions::kEnableDeviceEnterpriseInfoDescription, kOsAndroid,
+     FEATURE_VALUE_TYPE(chrome::android::kEnableDeviceEnterpriseInfo)},
+
     {"download-auto-resumption-native",
      flag_descriptions::kDownloadAutoResumptionNativeName,
      flag_descriptions::kDownloadAutoResumptionNativeDescription, kOsAndroid,
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -903,6 +903,11 @@ const char kDownloadAutoResumptionNativeName[] =
 const char kDownloadAutoResumptionNativeDescription[] =
     "Enables download auto-resumption in native";
 
+const char kEnableDeviceEnterpriseInfoName[] =
+    "Enable Device Enterprise Info";
+const char kEnableDeviceEnterpriseInfoDescription[] =
+    "Enable Device Enterprise Info";
+
 const char kDownloadLaterName[] = "Enable download later";
 const char kDownloadLaterDescription[] = "Enables download later feature.";
 
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -602,6 +602,9 @@ extern const char kMemlogStackModeNative[];
 extern const char kMemlogStackModeNativeWithThreadNames[];
 extern const char kMemlogStackModePseudo[];
 
+extern const char kEnableDeviceEnterpriseInfoName[];
+extern const char kEnableDeviceEnterpriseInfoDescription[];
+
 extern const char kDownloadAutoResumptionNativeName[];
 extern const char kDownloadAutoResumptionNativeDescription[];
 
diff --git a/chrome/browser/flags/android/chrome_feature_list.cc b/chrome/browser/flags/android/chrome_feature_list.cc
--- a/chrome/browser/flags/android/chrome_feature_list.cc
+++ b/chrome/browser/flags/android/chrome_feature_list.cc
@@ -188,6 +188,7 @@ const base::Feature* kFeaturesExposedToJava[] = {
     &kContextualSearchTapDisableOverride,
     &kContextualSearchThinWebViewImplementation,
     &kContextualSearchTranslations,
+    &kEnableDeviceEnterpriseInfo,
     &kDirectActions,
     &kDownloadFileProvider,
     &kDownloadNotificationBadge,
@@ -767,6 +768,9 @@ const base::Feature kVrBrowsingFeedback{"VrBrowsingFeedback",
 const base::Feature kBookmarksExportUseSaf{"BookmarksExportUseSaf",
                                         base::FEATURE_DISABLED_BY_DEFAULT};
 
+const base::Feature kEnableDeviceEnterpriseInfo{
+    "EnableDeviceEnterpriseInfo", base::FEATURE_DISABLED_BY_DEFAULT};
+
 static jboolean JNI_ChromeFeatureList_IsEnabled(
     JNIEnv* env,
     const JavaParamRef<jstring>& jfeature_name) {
diff --git a/chrome/browser/flags/android/chrome_feature_list.h b/chrome/browser/flags/android/chrome_feature_list.h
--- a/chrome/browser/flags/android/chrome_feature_list.h
+++ b/chrome/browser/flags/android/chrome_feature_list.h
@@ -75,6 +75,7 @@ extern const base::Feature kContextualSearchSecondTap;
 extern const base::Feature kContextualSearchTapDisableOverride;
 extern const base::Feature kContextualSearchThinWebViewImplementation;
 extern const base::Feature kContextualSearchTranslations;
+extern const base::Feature kEnableDeviceEnterpriseInfo;
 extern const base::Feature kDarkenWebsitesCheckboxInThemesSetting;
 extern const base::Feature kDirectActions;
 extern const base::Feature kDontPrefetchLibraries;
diff --git a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/CachedFeatureFlags.java b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/CachedFeatureFlags.java
--- a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/CachedFeatureFlags.java
+++ b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/CachedFeatureFlags.java
@@ -58,6 +58,7 @@ public class CachedFeatureFlags {
             put(ChromeFeatureList.SERVICE_MANAGER_FOR_DOWNLOAD, true);
             put(ChromeFeatureList.SERVICE_MANAGER_FOR_BACKGROUND_PREFETCH, true);
             put(ChromeFeatureList.COMMAND_LINE_ON_NON_ROOTED, false);
+            put(ChromeFeatureList.ENABLE_DEVICE_ENTERPRISE_INFO, true);
             put(ChromeFeatureList.DOWNLOADS_AUTO_RESUMPTION_NATIVE, true);
             put(ChromeFeatureList.EARLY_LIBRARY_LOAD, false);
             put(ChromeFeatureList.PRIORITIZE_BOOTSTRAP_TASKS, true);
diff --git a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
--- a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
+++ b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
@@ -324,6 +324,7 @@ public abstract class ChromeFeatureList {
             "DecoupleSyncFromAndroidMasterSync";
     public static final String DEPRECATE_MENAGERIE_API = "DeprecateMenagerieAPI";
     public static final String DETAILED_LANGUAGE_SETTINGS = "DetailedLanguageSettings";
+    public static final String ENABLE_DEVICE_ENTERPRISE_INFO = "EnableDeviceEnterpriseInfo";
     public static final String DIRECT_ACTIONS = "DirectActions";
     public static final String DNS_OVER_HTTPS = "DnsOverHttps";
     public static final String DOWNLOAD_FILE_PROVIDER = "DownloadFileProvider";
-- 
2.17.1

