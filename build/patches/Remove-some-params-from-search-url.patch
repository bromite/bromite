From: root <root@ubuntu.cabponte>
Date: Sun, 6 Sep 2020 14:50:37 +0000
Subject: remove aqs and other parameters from search urls

---
 components/search_engines/template_url.cc | 19 -------------------
 1 file changed, 19 deletions(-)

diff --git a/components/search_engines/template_url.cc b/components/search_engines/template_url.cc
--- a/components/search_engines/template_url.cc
+++ b/components/search_engines/template_url.cc
@@ -643,13 +643,11 @@ bool TemplateURLRef::ParseParameter(size_t start,
     if (!optional)
       url->insert(start, kDefaultCount);
   } else if (parameter == "google:assistedQueryStats") {
-    replacements->push_back(Replacement(GOOGLE_ASSISTED_QUERY_STATS, start));
   } else if (parameter == "google:baseURL") {
     replacements->push_back(Replacement(GOOGLE_BASE_URL, start));
   } else if (parameter == "google:baseSuggestURL") {
     replacements->push_back(Replacement(GOOGLE_BASE_SUGGEST_URL, start));
   } else if (parameter == "google:currentPageUrl") {
-    replacements->push_back(Replacement(GOOGLE_CURRENT_PAGE_URL, start));
   } else if (parameter == "google:cursorPosition") {
     replacements->push_back(Replacement(GOOGLE_CURSOR_POSITION, start));
   } else if (parameter == "google:imageOriginalHeight") {
@@ -671,13 +669,8 @@ bool TemplateURLRef::ParseParameter(size_t start,
     replacements->push_back(Replacement(TemplateURLRef::GOOGLE_IMAGE_URL,
                                         start));
   } else if (parameter == "google:inputType") {
-    replacements->push_back(Replacement(TemplateURLRef::GOOGLE_INPUT_TYPE,
-                                        start));
   } else if (parameter == "google:omniboxFocusType") {
-    replacements->push_back(
-        Replacement(TemplateURLRef::GOOGLE_OMNIBOX_FOCUS_TYPE, start));
   } else if (parameter == "google:iOSSearchLanguage") {
-    replacements->push_back(Replacement(GOOGLE_IOS_SEARCH_LANGUAGE, start));
   } else if (parameter == "google:contextualSearchVersion") {
     replacements->push_back(
         Replacement(GOOGLE_CONTEXTUAL_SEARCH_VERSION, start));
@@ -688,27 +681,17 @@ bool TemplateURLRef::ParseParameter(size_t start,
     replacements->push_back(Replacement(GOOGLE_ORIGINAL_QUERY_FOR_SUGGESTION,
                                         start));
   } else if (parameter == "google:pageClassification") {
-    replacements->push_back(Replacement(GOOGLE_PAGE_CLASSIFICATION, start));
   } else if (parameter == "google:pathWildcard") {
     // Do nothing, we just want the path wildcard removed from the URL.
   } else if (parameter == "google:prefetchQuery") {
     replacements->push_back(Replacement(GOOGLE_PREFETCH_QUERY, start));
   } else if (parameter == "google:RLZ") {
-    replacements->push_back(Replacement(GOOGLE_RLZ, start));
   } else if (parameter == "google:searchClient") {
-    replacements->push_back(Replacement(GOOGLE_SEARCH_CLIENT, start));
   } else if (parameter == "google:searchFieldtrialParameter") {
-    replacements->push_back(Replacement(GOOGLE_SEARCH_FIELDTRIAL_GROUP, start));
   } else if (parameter == "google:searchVersion") {
-    replacements->push_back(Replacement(GOOGLE_SEARCH_VERSION, start));
   } else if (parameter == "google:sessionToken") {
-    replacements->push_back(Replacement(GOOGLE_SESSION_TOKEN, start));
   } else if (parameter == "google:sourceId") {
-#if defined(OS_ANDROID) || defined(OS_IOS)
-    url->insert(start, "sourceid=chrome-mobile&");
-#else
     url->insert(start, "sourceid=chrome&");
-#endif
   } else if (parameter == "google:suggestAPIKeyParameter") {
     url->insert(start,
                 net::EscapeQueryParamValue(google_apis::GetAPIKey(), false));
@@ -719,9 +702,7 @@ bool TemplateURLRef::ParseParameter(size_t start,
   } else if (parameter == kGoogleUnescapedSearchTermsParameter) {
     replacements->push_back(Replacement(GOOGLE_UNESCAPED_SEARCH_TERMS, start));
   } else if (parameter == "yandex:referralID") {
-    replacements->push_back(Replacement(YANDEX_REFERRAL_ID, start));
   } else if (parameter == "mailru:referralID") {
-    replacements->push_back(Replacement(MAIL_RU_REFERRAL_ID, start));
   } else if (parameter == "yandex:searchPath") {
     url->insert(start, YandexSearchPathFromDeviceFormFactor());
   } else if (parameter == "inputEncoding") {
