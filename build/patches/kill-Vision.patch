From: thermatk <thermatk@thermatk.com>
Date: Fri, 22 Jun 2018 17:04:43 +0200
Subject: kill Vision

Barcode, face and text detection APIs
---
 chrome/android/BUILD.gn                       |  2 -
 .../qrcode/scan_tab/QrCodeScanMediator.java   | 54 -------------------
 services/shape_detection/BUILD.gn             |  6 ---
 .../chromium/shape_detection/BitmapUtils.java | 12 -----
 .../FaceDetectionProviderImpl.java            | 10 +---
 .../shape_detection/InterfaceRegistrar.java   | 23 +-------
 6 files changed, 3 insertions(+), 104 deletions(-)

diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -285,8 +285,6 @@ android_library("chrome_java") {
     "$google_play_services_package:google_play_services_gcm_java",
     "$google_play_services_package:google_play_services_iid_java",
     "$google_play_services_package:google_play_services_tasks_java",
-    "$google_play_services_package:google_play_services_vision_common_java",
-    "$google_play_services_package:google_play_services_vision_java",
     "//base:base_java",
     "//base:jni_java",
     "//cc:cc_java",
diff --git a/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/qrcode/scan_tab/QrCodeScanMediator.java b/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/qrcode/scan_tab/QrCodeScanMediator.java
--- a/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/qrcode/scan_tab/QrCodeScanMediator.java
+++ b/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/qrcode/scan_tab/QrCodeScanMediator.java
@@ -17,10 +17,6 @@ import android.provider.Browser;
 import android.util.SparseArray;
 import android.webkit.URLUtil;
 
-import com.google.android.gms.vision.Frame;
-import com.google.android.gms.vision.barcode.Barcode;
-import com.google.android.gms.vision.barcode.BarcodeDetector;
-
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.base.task.AsyncTask;
 import org.chromium.chrome.R;
@@ -48,7 +44,6 @@ public class QrCodeScanMediator implements Camera.PreviewCallback {
     private final NavigationObserver mNavigationObserver;
     private final AndroidPermissionDelegate mPermissionDelegate;
 
-    private BarcodeDetector mDetector;
     private Toast mToast;
 
     /**
@@ -67,7 +62,6 @@ public class QrCodeScanMediator implements Camera.PreviewCallback {
         mNavigationObserver = observer;
 
         // Set detector to null until it gets initialized asynchronously.
-        mDetector = null;
         initBarcodeDetectorAsync();
     }
 
@@ -142,43 +136,6 @@ public class QrCodeScanMediator implements Camera.PreviewCallback {
      */
     @Override
     public void onPreviewFrame(byte[] data, Camera camera) {
-        if (mDetector == null) {
-            return;
-        }
-
-        ByteBuffer buffer = ByteBuffer.allocate(data.length);
-        buffer.put(data);
-        Frame frame =
-                new Frame.Builder()
-                        .setImageData(buffer, camera.getParameters().getPreviewSize().width,
-                                camera.getParameters().getPreviewSize().height, ImageFormat.NV21)
-                        .build();
-        SparseArray<Barcode> barcodes = mDetector.detect(frame);
-        if (!mPropertyModel.get(QrCodeScanViewProperties.IS_ON_FOREGROUND)) {
-            return;
-        }
-        if (barcodes.size() == 0) {
-            camera.setOneShotPreviewCallback(this);
-            return;
-        }
-
-        Barcode firstCode = barcodes.valueAt(0);
-        if (!URLUtil.isValidUrl(firstCode.rawValue)) {
-            String toastMessage =
-                    mContext.getString(R.string.qr_code_not_a_url_label, firstCode.rawValue);
-            if (mToast != null) {
-                mToast.cancel();
-            }
-            mToast = Toast.makeText(mContext, toastMessage, Toast.LENGTH_LONG);
-            mToast.show();
-            RecordUserAction.record("SharingQRCode.ScannedNonURL");
-            camera.setOneShotPreviewCallback(this);
-            return;
-        }
-
-        openUrl(firstCode.rawValue);
-        mNavigationObserver.onNavigation();
-        RecordUserAction.record("SharingQRCode.ScannedURL");
     }
 
     private void openUrl(String url) {
@@ -195,16 +152,5 @@ public class QrCodeScanMediator implements Camera.PreviewCallback {
     }
 
     private void initBarcodeDetectorAsync() {
-        new AsyncTask<BarcodeDetector>() {
-            @Override
-            protected BarcodeDetector doInBackground() {
-                return new BarcodeDetector.Builder(mContext).build();
-            }
-
-            @Override
-            protected void onPostExecute(BarcodeDetector detector) {
-                mDetector = detector;
-            }
-        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
     }
 }
diff --git a/services/shape_detection/BUILD.gn b/services/shape_detection/BUILD.gn
--- a/services/shape_detection/BUILD.gn
+++ b/services/shape_detection/BUILD.gn
@@ -102,14 +102,8 @@ if (is_android) {
 
   android_library("shape_detection_java") {
     sources = [
-      "android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java",
-      "android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java",
       "android/java/src/org/chromium/shape_detection/BitmapUtils.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionImpl.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java",
       "android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java",
-      "android/java/src/org/chromium/shape_detection/TextDetectionImpl.java",
     ]
 
     deps = [
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java
@@ -6,8 +6,6 @@ package org.chromium.shape_detection;
 
 import android.graphics.Bitmap;
 
-import com.google.android.gms.vision.Frame;
-
 import org.chromium.mojo_base.BigBufferUtil;
 
 import java.nio.ByteBuffer;
@@ -43,14 +41,4 @@ public class BitmapUtils {
             return bitmap;
         }
     }
-
-    public static Frame convertToFrame(org.chromium.skia.mojom.BitmapN32 bitmapData) {
-        Bitmap bitmap = convertToBitmap(bitmapData);
-        if (bitmap == null) {
-            return null;
-        }
-
-        // This constructor implies a pixel format conversion to YUV.
-        return new Frame.Builder().setBitmap(bitmap).build();
-    }
 }
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java
@@ -21,15 +21,7 @@ public class FaceDetectionProviderImpl implements FaceDetectionProvider {
     @Override
     public void createFaceDetection(
             InterfaceRequest<FaceDetection> request, FaceDetectorOptions options) {
-        final boolean isGmsCoreSupported =
-                ChromiumPlayServicesAvailability.isGooglePlayServicesAvailable(
-                        ContextUtils.getApplicationContext());
-
-        if (isGmsCoreSupported) {
-            FaceDetection.MANAGER.bind(new FaceDetectionImplGmsCore(options), request);
-        } else {
-            FaceDetection.MANAGER.bind(new FaceDetectionImpl(options), request);
-        }
+        FaceDetection.MANAGER.bind(new FaceDetectionImpl(options), request);
     }
 
     @Override
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java
@@ -8,9 +8,6 @@ import org.chromium.base.annotations.CalledByNative;
 import org.chromium.base.annotations.JNINamespace;
 import org.chromium.mojo.system.MessagePipeHandle;
 import org.chromium.mojo.system.impl.CoreImpl;
-import org.chromium.shape_detection.mojom.BarcodeDetectionProvider;
-import org.chromium.shape_detection.mojom.FaceDetectionProvider;
-import org.chromium.shape_detection.mojom.TextDetection;
 
 @JNINamespace("shape_detection")
 class InterfaceRegistrar {
@@ -22,33 +19,17 @@ class InterfaceRegistrar {
     static void bindBarcodeDetectionProvider(int nativeHandle) {
         // Immediately wrap |nativeHandle| as it cannot be allowed to leak.
         MessagePipeHandle handle = messagePipeHandleFromNative(nativeHandle);
-
-        BarcodeDetectionProvider impl = BarcodeDetectionProviderImpl.create();
-        if (impl == null) {
-            handle.close();
-            return;
-        }
-
-        BarcodeDetectionProvider.MANAGER.bind(impl, handle);
+        handle.close();
     }
 
     @CalledByNative
     static void bindFaceDetectionProvider(int nativeHandle) {
-        FaceDetectionProvider.MANAGER.bind(
-                new FaceDetectionProviderImpl(), messagePipeHandleFromNative(nativeHandle));
     }
 
     @CalledByNative
     static void bindTextDetection(int nativeHandle) {
         // Immediately wrap |nativeHandle| as it cannot be allowed to leak.
         MessagePipeHandle handle = messagePipeHandleFromNative(nativeHandle);
-
-        TextDetection impl = TextDetectionImpl.create();
-        if (impl == null) {
-            handle.close();
-            return;
-        }
-
-        TextDetection.MANAGER.bind(impl, handle);
+        handle.close();
     }
 }
-- 
2.17.1

