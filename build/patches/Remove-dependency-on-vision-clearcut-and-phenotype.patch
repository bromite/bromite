From: Wengling Chen <feiyu2817@gmail.com>
Date: Fri, 1 Nov 2019 23:10:47 +0100
Subject: Remove dependency on vision, clearcut and phenotype

---
 BUILD.gn                                      |   5 -
 chrome/android/BUILD.gn                       |  14 --
 chrome/android/chrome_java_sources.gni        |   1 -
 ...ome_public_bundle.AndroidManifest.expected |   1 -
 ...ome_chrome_bundle.AndroidManifest.expected |   1 -
 .../features/cablev2_authenticator/BUILD.gn   |   2 -
 chrome/android/java/AndroidManifest.xml       |   6 -
 chrome/browser/BUILD.gn                       |   4 -
 chrome/browser/apps/platform_apps/BUILD.gn    |   1 -
 chrome/browser/chrome_browser_main.cc         |   1 -
 .../browser/chrome_content_browser_client.cc  |  17 ---
 chrome/browser/extensions/BUILD.gn            |   2 -
 .../browser/media/cast_remoting_connector.cc  |  26 ----
 ...hrome_browser_main_extra_parts_profiles.cc |   2 -
 chrome/browser/ui/BUILD.gn                    |   1 -
 chrome/test/BUILD.gn                          |   3 -
 chrome/test/media_router/BUILD.gn             |   3 -
 components/BUILD.gn                           |   5 -
 components/media_router/browser/BUILD.gn      |   2 +
 .../media_router/browser/android/BUILD.gn     |  15 +--
 .../test/android/cast_emulator/BUILD.gn       |   1 -
 services/BUILD.gn                             |   4 -
 services/shape_detection/BUILD.gn             |   2 -
 .../shape_detection/BarcodeDetectionImpl.java | 114 +---------------
 .../BarcodeDetectionProviderImpl.java         |  31 +----
 .../FaceDetectionImplGmsCore.java             |  96 +-------------
 .../shape_detection/TextDetectionImpl.java    |  58 +-------
 third_party/android_deps/BUILD.gn             | 125 ------------------
 weblayer/BUILD.gn                             |   1 -
 weblayer/browser/java/BUILD.gn                |   4 -
 weblayer/public/java/AndroidManifest.xml      |   6 -
 31 files changed, 14 insertions(+), 540 deletions(-)

diff --git a/BUILD.gn b/BUILD.gn
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -17,7 +17,6 @@ import("//build/config/ui.gni")
 import("//build/gn_logs.gni")
 import("//build/util/generate_wrapper.gni")
 import("//chrome/browser/buildflags.gni")
-import("//chrome/browser/media/router/features.gni")
 import("//components/nacl/features.gni")
 import("//device/vr/buildflags/buildflags.gni")
 import("//extensions/buildflags/buildflags.gni")
@@ -228,10 +227,6 @@ group("gn_all") {
     ]
   }
 
-  if (enable_openscreen) {
-    deps += [ "//chrome/browser/media/router:openscreen_unittests" ]
-  }
-
   if (!is_ios && !is_fuchsia) {
     deps += [
       "//chrome/test:telemetry_perf_unittests",
diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -215,7 +215,6 @@ android_resources("chrome_app_java_resources") {
     "//components/browser_ui/widget/android:java_resources",
     "//components/find_in_page/android:java_resources",
     "//components/javascript_dialogs/android:java_resources",
-    "//components/media_router/browser/android:java_resources",
     "//components/messages/android:java_resources",
     "//components/omnibox/browser:java_resources",
     "//components/page_info/android:java_resources",
@@ -278,8 +277,6 @@ android_library("chrome_java") {
     ":usage_stats_proto_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
     "$google_play_services_package:google_play_services_fido_java",
     "$google_play_services_package:google_play_services_iid_java",
     "$google_play_services_package:google_play_services_tasks_java",
@@ -418,7 +415,6 @@ android_library("chrome_java") {
     "//components/language/android:language_bridge_java",
     "//components/location/android:location_java",
     "//components/location/android:settings_java",
-    "//components/media_router/browser/android:java",
     "//components/messages/android:factory_java",
     "//components/messages/android:java",
     "//components/messages/android:manager_java",
@@ -683,7 +679,6 @@ group("jni_headers") {
     "//chrome/browser/ui/messages/android:jni_headers",
     "//chrome/browser/util:jni_headers",
     "//chrome/browser/webauthn/android:jni_headers",
-    "//components/media_router/browser/android:jni_headers",
   ]
 }
 
@@ -782,8 +777,6 @@ junit_binary("chrome_junit_tests") {
     ":partner_location_descriptor_proto_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
     "$google_play_services_package:google_play_services_fido_java",
     "//base:base_java",
     "//base:base_java_test_support",
@@ -1027,8 +1020,6 @@ android_library("chrome_test_java") {
     ":partner_location_descriptor_proto_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
     "$google_play_services_package:google_play_services_fido_java",
     "$google_play_services_package:google_play_services_iid_java",
     "$google_play_services_package:google_play_services_tasks_java",
@@ -1172,8 +1163,6 @@ android_library("chrome_test_java") {
     "//components/infobars/core:infobar_enums_java",
     "//components/javascript_dialogs/android:java",
     "//components/location/android:location_java",
-    "//components/media_router/browser/android:java",
-    "//components/media_router/browser/android:test_support_java",
     "//components/messages/android:java",
     "//components/messages/android:javatests",
     "//components/metrics:metrics_java",
@@ -2196,7 +2185,6 @@ android_library("base_module_java") {
     "//chrome/browser/version:java",
     "//components/crash/android:java",
     "//components/embedder_support/android:application_java",
-    "//components/media_router/browser/android:cast_options_provider_java",
     "//components/minidump_uploader:minidump_uploader_java",
     "//components/module_installer/android:module_installer_java",
     "//third_party/android_deps:androidx_annotation_annotation_java",
@@ -2220,7 +2208,6 @@ android_library("base_module_java") {
     # Deps to pull services into base module.
     # TODO(crbug.com/1126301): Consider moving these to the chrome module to
     # reduce base dex size.
-    "$google_play_services_package:google_play_services_cast_framework_java",
     "//components/background_task_scheduler:background_task_scheduler_java",
     "//components/payments/content/android:service_java",
     "//third_party/android_sdk/androidx_browser:androidx_browser_java",
@@ -3349,7 +3336,6 @@ generate_jni("chrome_jni_headers") {
     "java/src/org/chromium/chrome/browser/login/ChromeHttpAuthHandler.java",
     "java/src/org/chromium/chrome/browser/media/MediaCaptureDevicesDispatcherAndroid.java",
     "java/src/org/chromium/chrome/browser/media/PictureInPictureActivity.java",
-    "java/src/org/chromium/chrome/browser/media/router/ChromeMediaRouterClient.java",
     "java/src/org/chromium/chrome/browser/metrics/BackgroundTaskMemoryMetricsEmitter.java",
     "java/src/org/chromium/chrome/browser/metrics/LaunchMetrics.java",
     "java/src/org/chromium/chrome/browser/metrics/PageLoadMetrics.java",
diff --git a/chrome/android/chrome_java_sources.gni b/chrome/android/chrome_java_sources.gni
--- a/chrome/android/chrome_java_sources.gni
+++ b/chrome/android/chrome_java_sources.gni
@@ -777,7 +777,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/media/PictureInPictureActivity.java",
   "java/src/org/chromium/chrome/browser/media/PictureInPictureController.java",
   "java/src/org/chromium/chrome/browser/media/remote/RecordCastAction.java",
-  "java/src/org/chromium/chrome/browser/media/router/ChromeMediaRouterClient.java",
   "java/src/org/chromium/chrome/browser/media/ui/ChromeMediaNotificationControllerDelegate.java",
   "java/src/org/chromium/chrome/browser/media/ui/ChromeMediaNotificationManager.java",
   "java/src/org/chromium/chrome/browser/media/ui/MediaSessionTabHelper.java",
diff --git a/chrome/android/expectations/monochrome_public_bundle.AndroidManifest.expected b/chrome/android/expectations/monochrome_public_bundle.AndroidManifest.expected
--- a/chrome/android/expectations/monochrome_public_bundle.AndroidManifest.expected
+++ b/chrome/android/expectations/monochrome_public_bundle.AndroidManifest.expected
@@ -823,7 +823,6 @@
     <meta-data android:name="android.allow_multiple_resumed_activities" android:value="true"/>
     <meta-data android:name="android.content.APP_RESTRICTIONS" android:resource="@xml/app_restrictions"/>
     <meta-data android:name="com.android.webview.WebViewLibrary" android:value="libmonochrome.so"/>
-    <meta-data android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME" android:value="org.chromium.components.media_router.caf.CastOptionsProvider"/>
     <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version"/>
     <meta-data android:name="com.google.ar.core" android:value="optional"/>
     <meta-data android:name="com.google.ar.core.min_apk_version" android:value="200501000"/>
diff --git a/chrome/android/expectations/trichrome_chrome_bundle.AndroidManifest.expected b/chrome/android/expectations/trichrome_chrome_bundle.AndroidManifest.expected
--- a/chrome/android/expectations/trichrome_chrome_bundle.AndroidManifest.expected
+++ b/chrome/android/expectations/trichrome_chrome_bundle.AndroidManifest.expected
@@ -777,7 +777,6 @@
     </activity-alias>  # DIFF-ANCHOR: 7c349c4f
     <meta-data android:name="android.allow_multiple_resumed_activities" android:value="true"/>
     <meta-data android:name="android.content.APP_RESTRICTIONS" android:resource="@xml/app_restrictions"/>
-    <meta-data android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME" android:value="org.chromium.components.media_router.caf.CastOptionsProvider"/>
     <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version"/>
     <meta-data android:name="com.google.ar.core" android:value="optional"/>
     <meta-data android:name="com.google.ar.core.min_apk_version" android:value="200501000"/>
diff --git a/chrome/android/features/cablev2_authenticator/BUILD.gn b/chrome/android/features/cablev2_authenticator/BUILD.gn
--- a/chrome/android/features/cablev2_authenticator/BUILD.gn
+++ b/chrome/android/features/cablev2_authenticator/BUILD.gn
@@ -20,8 +20,6 @@ android_library("java") {
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_fido_java",
     "$google_play_services_package:google_play_services_tasks_java",
-    "$google_play_services_package:google_play_services_vision_common_java",
-    "$google_play_services_package:google_play_services_vision_java",
     "//base:base_java",
     "//base:jni_java",
     "//content/public/android:content_java",
diff --git a/chrome/android/java/AndroidManifest.xml b/chrome/android/java/AndroidManifest.xml
--- a/chrome/android/java/AndroidManifest.xml
+++ b/chrome/android/java/AndroidManifest.xml
@@ -1143,12 +1143,6 @@ by a child template that "extends" this file.
       <meta-data android:name="com.google.ar.core" android:value="optional" />
       {% endif %}
 
-      <!-- Cast support -->
-      <meta-data
-          android:name=
-          "com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-          android:value="org.chromium.components.media_router.caf.CastOptionsProvider"/>
-
       <!-- These providers are declared in the base module to give the chrome
            split preloader more time to work. -->
       <provider android:name="org.chromium.chrome.browser.util.ChromeFileProvider"
diff --git a/chrome/browser/BUILD.gn b/chrome/browser/BUILD.gn
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -1972,7 +1972,6 @@ static_library("browser") {
     "//chrome/browser/media:mojo_bindings",
     "//chrome/browser/media/feeds:mojo_bindings",
     "//chrome/browser/media/feeds:proto",
-    "//chrome/browser/media/router",
     "//chrome/browser/metrics:expired_histograms_array",
     "//chrome/browser/metrics/variations:chrome_ui_string_overrider_factory",
     "//chrome/browser/net:probe_message_proto",
@@ -3053,8 +3052,6 @@ static_library("browser") {
       "media/android/cdm/media_drm_storage_factory.h",
       "media/android/cdm/per_device_provisioning_permission.cc",
       "media/android/cdm/per_device_provisioning_permission.h",
-      "media/android/router/chrome_media_router_client.cc",
-      "media/android/router/chrome_media_router_client.h",
       "media/webrtc/screen_capture_infobar_delegate_android.cc",
       "media/webrtc/screen_capture_infobar_delegate_android.h",
       "memory_details_android.cc",
@@ -5279,7 +5276,6 @@ static_library("browser") {
     deps += [
       "//chrome/browser/ui/webui/discards:mojo_bindings",
       "//components/autofill/content/browser/webauthn",
-      "//components/media_router/browser",
       "//components/mirroring/browser",
       "//components/mirroring/mojom:host",
       "//components/mirroring/mojom:service",
diff --git a/chrome/browser/apps/platform_apps/BUILD.gn b/chrome/browser/apps/platform_apps/BUILD.gn
--- a/chrome/browser/apps/platform_apps/BUILD.gn
+++ b/chrome/browser/apps/platform_apps/BUILD.gn
@@ -54,7 +54,6 @@ source_set("platform_apps") {
     "//chrome/app:command_ids",
     "//chrome/browser:browser_process",
     "//chrome/browser/extensions",
-    "//chrome/browser/media/router/discovery",
     "//chrome/browser/sharing/proto:proto",
     "//chrome/browser/web_applications/components:components",
     "//chrome/browser/web_applications/extensions",
diff --git a/chrome/browser/chrome_browser_main.cc b/chrome/browser/chrome_browser_main.cc
--- a/chrome/browser/chrome_browser_main.cc
+++ b/chrome/browser/chrome_browser_main.cc
@@ -1077,7 +1077,6 @@ void ChromeBrowserMainParts::PreProfileInit() {
 #endif  // BUILDFLAG(ENABLE_EXTENSIONS)
 
   InstallChromeJavaScriptAppModalDialogViewFactory();
-  media_router::ChromeMediaRouterFactory::DoPlatformInit();
 }
 
 void ChromeBrowserMainParts::PostProfileInit() {
diff --git a/chrome/browser/chrome_content_browser_client.cc b/chrome/browser/chrome_content_browser_client.cc
--- a/chrome/browser/chrome_content_browser_client.cc
+++ b/chrome/browser/chrome_content_browser_client.cc
@@ -74,7 +74,6 @@
 #include "chrome/browser/lifetime/browser_shutdown.h"
 #include "chrome/browser/lookalikes/lookalike_url_navigation_throttle.h"
 #include "chrome/browser/media/audio_service_util.h"
-#include "chrome/browser/media/router/media_router_feature.h"
 #include "chrome/browser/media/webrtc/audio_debug_recordings_handler.h"
 #include "chrome/browser/media/webrtc/media_capture_devices_dispatcher.h"
 #include "chrome/browser/media/webrtc/webrtc_logging_controller.h"
@@ -231,8 +230,6 @@
 #include "components/keep_alive_registry/keep_alive_types.h"
 #include "components/keep_alive_registry/scoped_keep_alive.h"
 #include "components/language/core/browser/pref_names.h"
-#include "components/media_router/browser/presentation/presentation_service_delegate_impl.h"
-#include "components/media_router/browser/presentation/receiver_presentation_service_delegate_impl.h"
 #include "components/metrics/client_info.h"
 #include "components/metrics_services_manager/metrics_services_manager.h"
 #include "components/net_log/chrome_net_log.h"
@@ -3948,26 +3945,12 @@ void ChromeContentBrowserClient::OpenURL(
 content::ControllerPresentationServiceDelegate*
 ChromeContentBrowserClient::GetControllerPresentationServiceDelegate(
     content::WebContents* web_contents) {
-  if (media_router::MediaRouterEnabled(web_contents->GetBrowserContext())) {
-    return media_router::PresentationServiceDelegateImpl::
-        GetOrCreateForWebContents(web_contents);
-  }
   return nullptr;
 }
 
 content::ReceiverPresentationServiceDelegate*
 ChromeContentBrowserClient::GetReceiverPresentationServiceDelegate(
     content::WebContents* web_contents) {
-  if (media_router::MediaRouterEnabled(web_contents->GetBrowserContext())) {
-    // ReceiverPresentationServiceDelegateImpl exists only for WebContents
-    // created for offscreen presentations. The WebContents must belong to
-    // an incognito profile.
-    if (auto* impl = media_router::ReceiverPresentationServiceDelegateImpl::
-            FromWebContents(web_contents)) {
-      DCHECK(web_contents->GetBrowserContext()->IsOffTheRecord());
-      return impl;
-    }
-  }
   return nullptr;
 }
 
diff --git a/chrome/browser/extensions/BUILD.gn b/chrome/browser/extensions/BUILD.gn
--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -782,8 +782,6 @@ static_library("extensions") {
     "//chrome/browser/browsing_data:constants",
     "//chrome/browser/devtools",
     "//chrome/browser/image_decoder",
-    "//chrome/browser/media/router",
-    "//chrome/browser/media/router/discovery",
     "//chrome/browser/resource_coordinator:intervention_policy_database_proto",
     "//chrome/browser/resource_coordinator:mojo_bindings",
     "//chrome/browser/safe_browsing",
diff --git a/chrome/browser/media/cast_remoting_connector.cc b/chrome/browser/media/cast_remoting_connector.cc
--- a/chrome/browser/media/cast_remoting_connector.cc
+++ b/chrome/browser/media/cast_remoting_connector.cc
@@ -139,32 +139,6 @@ CastRemotingConnector* CastRemotingConnector::Get(
   if (!connector) {
     if (!media_router::MediaRouterEnabled(contents->GetBrowserContext()))
       return nullptr;
-    connector = new CastRemotingConnector(
-        media_router::MediaRouterFactory::GetApiForBrowserContext(
-            contents->GetBrowserContext()),
-        user_prefs::UserPrefs::Get(contents->GetBrowserContext()),
-        sessions::SessionTabHelper::IdForTab(contents),
-#if defined(TOOLKIT_VIEWS)
-        base::BindRepeating(
-            [](content::WebContents* contents,
-               PermissionResultCallback result_callback) {
-              media_router::MediaRemotingDialogView::GetPermission(
-                  contents, std::move(result_callback));
-              return media_router::MediaRemotingDialogView::IsShowing()
-                         ? base::BindOnce(
-                               &media_router::MediaRemotingDialogView::
-                                   HideDialog)
-                         : CancelPermissionRequestCallback();
-            },
-            contents)
-#else
-        base::BindRepeating([](PermissionResultCallback result_callback) {
-          std::move(result_callback).Run(true);
-          return CancelPermissionRequestCallback();
-        })
-#endif
-    );
-    contents->SetUserData(kUserDataKey, base::WrapUnique(connector));
   }
   return connector;
 }
diff --git a/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc b/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
--- a/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
+++ b/chrome/browser/profiles/chrome_browser_main_extra_parts_profiles.cc
@@ -327,8 +327,6 @@ void ChromeBrowserMainExtraPartsProfiles::
 #endif
   if (base::FeatureList::IsEnabled(media::kUseMediaHistoryStore))
     media_history::MediaHistoryKeyedServiceFactory::GetInstance();
-  media_router::ChromeLocalPresentationManagerFactory::GetInstance();
-  media_router::ChromeMediaRouterFactory::GetInstance();
 #if !defined(OS_ANDROID)
   media_router::MediaRouterUIServiceFactory::GetInstance();
 #endif
diff --git a/chrome/browser/ui/BUILD.gn b/chrome/browser/ui/BUILD.gn
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -1517,7 +1517,6 @@ static_library("ui") {
       "//chrome/browser:theme_properties",
       "//chrome/browser/browsing_data:constants",
       "//chrome/browser/cart:mojo_bindings",
-      "//chrome/browser/media/router",
       "//chrome/browser/profile_resetter:profile_reset_report_proto",
       "//chrome/browser/promo_browser_command:mojo_bindings",
       "//chrome/browser/resource_coordinator:tab_metrics_event_proto",
diff --git a/chrome/test/BUILD.gn b/chrome/test/BUILD.gn
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -1738,7 +1738,6 @@ if (!is_android) {
         "//ash/keyboard/ui:test_support",
         "//chrome/browser/chromeos:arc_test_support",
         "//chrome/browser/chromeos:test_support",
-        "//chrome/browser/media/router:test_support",
         "//chrome/browser/resources/chromeos/accessibility:browser_tests",
         "//chrome/browser/ui/ash/holding_space:browser_tests",
         "//chrome/services/file_util/public/cpp:browser_tests",
@@ -4179,7 +4178,6 @@ test("unit_tests") {
     "//chrome:child_dependencies",
     "//chrome:resources",
     "//chrome:strings",
-    "//chrome/browser/media/router:unittests",
     "//chrome/browser/notifications:unit_tests",
     "//chrome/browser/payments:unittests",
     "//chrome/browser/persisted_state_db:persisted_state_db",
@@ -6739,7 +6737,6 @@ if (!is_android) {
 
     if (is_chromeos_ash) {
       deps += [
-        "//chrome/browser/media/router:test_support",
         "//chromeos/dbus",
         "//chromeos/ui/frame:test_support",
       ]
diff --git a/chrome/test/media_router/BUILD.gn b/chrome/test/media_router/BUILD.gn
--- a/chrome/test/media_router/BUILD.gn
+++ b/chrome/test/media_router/BUILD.gn
@@ -29,7 +29,6 @@ source_set("browser_tests") {
     "//build:chromeos_buildflags",
     "//chrome/app:generated_resources",
     "//chrome/browser",
-    "//chrome/browser/media/router",
     "//chrome/browser/ui",
     "//chrome/common",
     "//chrome/test:test_support",
@@ -135,8 +134,6 @@ source_set("test_support") {
     "//extensions/browser",
   ]
   deps = [
-    "//chrome/browser/media/router",
-    "//chrome/browser/media/router:test_support",
     "//chrome/common:constants",
     "//chrome/test:test_support",
     "//chrome/test:test_support_ui",
diff --git a/components/BUILD.gn b/components/BUILD.gn
--- a/components/BUILD.gn
+++ b/components/BUILD.gn
@@ -272,8 +272,6 @@ test("components_unittests") {
       "//components/keyed_service/content:unit_tests",
       "//components/language/content/browser:unit_tests",
       "//components/link_header_util:unit_tests",
-      "//components/media_router/browser:unit_tests",
-      "//components/media_router/common:unit_tests",
       "//components/navigation_interception:unit_tests",
       "//components/network_hints/renderer:unit_tests",
       "//components/no_state_prefetch/browser:unit_tests",
@@ -366,8 +364,6 @@ test("components_unittests") {
       "//components/gcm_driver/instance_id/android:instance_id_driver_java",
       "//components/gcm_driver/instance_id/android:instance_id_driver_test_support_java",
       "//components/invalidation/impl",
-      "//components/media_router/browser/android:java",
-      "//components/media_router/browser/android:test_support_java",
       "//components/offline_items_collection/core:native_java_unittests_java",
       "//components/paint_preview/browser/android:java",
       "//components/paint_preview/player/android:unit_tests",
@@ -815,7 +811,6 @@ if (is_android) {
       "//components/content_capture/android/junit:components_content_capture_junit_tests",
       "//components/embedder_support/android:components_embedder_support_junit_tests",
       "//components/gcm_driver/android:components_gcm_driver_junit_tests",
-      "//components/media_router/browser/android:junit",
       "//components/messages/android:junit",
       "//components/messages/android/internal:junit",
       "//components/payments/content/android:junit",
diff --git a/components/media_router/browser/BUILD.gn b/components/media_router/browser/BUILD.gn
--- a/components/media_router/browser/BUILD.gn
+++ b/components/media_router/browser/BUILD.gn
@@ -2,6 +2,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+if(false) {
 source_set("browser") {
   sources = [
     "issue_manager.cc",
@@ -141,3 +142,4 @@ source_set("unit_tests") {
     sources += [ "logger_impl_unittest.cc" ]
   }
 }
+}
\ No newline at end of file
diff --git a/components/media_router/browser/android/BUILD.gn b/components/media_router/browser/android/BUILD.gn
--- a/components/media_router/browser/android/BUILD.gn
+++ b/components/media_router/browser/android/BUILD.gn
@@ -7,14 +7,13 @@ import("//build/config/android/rules.gni")
 import("//build/config/locales.gni")
 import("//tools/grit/grit_rule.gni")
 
+if(false) {
 android_library("java") {
   resources_package = "org.chromium.components.media_router"
   deps = [
     ":java_resources",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
     "//base:base_java",
     "//base:jni_java",
     "//components/browser_ui/media/android:java",
@@ -33,7 +32,6 @@ android_library("java") {
     "java/src/org/chromium/components/media_router/BrowserMediaRouter.java",
     "java/src/org/chromium/components/media_router/BrowserMediaRouterDialogController.java",
     "java/src/org/chromium/components/media_router/CastRequestIdGenerator.java",
-    "java/src/org/chromium/components/media_router/CastSessionUtil.java",
     "java/src/org/chromium/components/media_router/ClientRecord.java",
     "java/src/org/chromium/components/media_router/DiscoveryCallback.java",
     "java/src/org/chromium/components/media_router/DiscoveryDelegate.java",
@@ -72,14 +70,6 @@ android_library("java") {
   annotation_processor_deps = [ "//base/android/jni_generator:jni_processor" ]
 }
 
-android_library("cast_options_provider_java") {
-  sources = [ "java/src/org/chromium/components/media_router/caf/CastOptionsProvider.java" ]
-  deps = [
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
-  ]
-}
-
 generate_jni("jni_headers") {
   sources = [
     "java/src/org/chromium/components/media_router/BrowserMediaRouter.java",
@@ -143,8 +133,6 @@ java_library("junit") {
     ":java",
     ":test_support_java",
     "$google_play_services_package:google_play_services_basement_java",
-    "$google_play_services_package:google_play_services_cast_framework_java",
-    "$google_play_services_package:google_play_services_cast_java",
     "//base:base_java",
     "//base:base_java_test_support",
     "//base:base_junit_test_support",
@@ -194,3 +182,4 @@ java_strings_grd("java_strings_grd") {
                 android_bundle_locales_as_resources,
                 [ "values-{{source_name_part}}/android_chrome_media_router_strings.xml" ])
 }
+}
\ No newline at end of file
diff --git a/components/media_router/test/android/cast_emulator/BUILD.gn b/components/media_router/test/android/cast_emulator/BUILD.gn
--- a/components/media_router/test/android/cast_emulator/BUILD.gn
+++ b/components/media_router/test/android/cast_emulator/BUILD.gn
@@ -20,7 +20,6 @@ android_library("cast_emulator_java") {
     "src/org/chromium/components/media_router/cast_emulator/router/DummyRoutePublisher.java",
   ]
   deps = [
-    "$google_play_services_package:google_play_services_cast_java",
     "//base:base_java",
     "//third_party/android_deps:android_support_v7_appcompat_java",
     "//third_party/android_deps:androidx_mediarouter_mediarouter_java",
diff --git a/services/BUILD.gn b/services/BUILD.gn
--- a/services/BUILD.gn
+++ b/services/BUILD.gn
@@ -107,8 +107,6 @@ if (is_android) {
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
       "$google_play_services_package:google_play_services_location_java",
-      "$google_play_services_package:google_play_services_vision_common_java",
-      "$google_play_services_package:google_play_services_vision_java",
       "//base:base_java",
       "//base:base_java_test_support",
       "//base:base_junit_test_support",
@@ -139,8 +137,6 @@ if (is_android) {
     deps = [
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
-      "$google_play_services_package:google_play_services_vision_common_java",
-      "$google_play_services_package:google_play_services_vision_java",
       "//base:base_java",
       "//base:base_java_test_support",
       "//mojo/public/java:base_java",
diff --git a/services/shape_detection/BUILD.gn b/services/shape_detection/BUILD.gn
--- a/services/shape_detection/BUILD.gn
+++ b/services/shape_detection/BUILD.gn
@@ -109,8 +109,6 @@ if (is_android) {
     deps = [
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
-      "$google_play_services_package:google_play_services_vision_common_java",
-      "$google_play_services_package:google_play_services_vision_java",
       "//base:base_java",
       "//mojo/public/java:base_java",
       "//mojo/public/java:bindings_java",
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java
@@ -8,10 +8,6 @@ import android.graphics.Point;
 import android.graphics.Rect;
 import android.util.SparseArray;
 
-import com.google.android.gms.vision.Frame;
-import com.google.android.gms.vision.barcode.Barcode;
-import com.google.android.gms.vision.barcode.BarcodeDetector;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.gfx.mojom.PointF;
@@ -28,50 +24,7 @@ import org.chromium.shape_detection.mojom.BarcodeFormat;
 public class BarcodeDetectionImpl implements BarcodeDetection {
     private static final String TAG = "BarcodeDetectionImpl";
 
-    private BarcodeDetector mBarcodeDetector;
-
     public BarcodeDetectionImpl(BarcodeDetectorOptions options) {
-        int formats = Barcode.ALL_FORMATS;
-        if (options.formats != null && options.formats.length > 0) {
-            formats = 0;
-            // Keep this list in sync with the constants defined in
-            // com.google.android.gms.vision.barcode.Barcode and the list of
-            // supported formats in BarcodeDetectionProviderImpl.
-            for (int i = 0; i < options.formats.length; ++i) {
-                if (options.formats[i] == BarcodeFormat.AZTEC) {
-                    formats |= Barcode.AZTEC;
-                } else if (options.formats[i] == BarcodeFormat.CODE_128) {
-                    formats |= Barcode.CODE_128;
-                } else if (options.formats[i] == BarcodeFormat.CODE_39) {
-                    formats |= Barcode.CODE_39;
-                } else if (options.formats[i] == BarcodeFormat.CODE_93) {
-                    formats |= Barcode.CODE_93;
-                } else if (options.formats[i] == BarcodeFormat.CODABAR) {
-                    formats |= Barcode.CODABAR;
-                } else if (options.formats[i] == BarcodeFormat.DATA_MATRIX) {
-                    formats |= Barcode.DATA_MATRIX;
-                } else if (options.formats[i] == BarcodeFormat.EAN_13) {
-                    formats |= Barcode.EAN_13;
-                } else if (options.formats[i] == BarcodeFormat.EAN_8) {
-                    formats |= Barcode.EAN_8;
-                } else if (options.formats[i] == BarcodeFormat.ITF) {
-                    formats |= Barcode.ITF;
-                } else if (options.formats[i] == BarcodeFormat.PDF417) {
-                    formats |= Barcode.PDF417;
-                } else if (options.formats[i] == BarcodeFormat.QR_CODE) {
-                    formats |= Barcode.QR_CODE;
-                } else if (options.formats[i] == BarcodeFormat.UPC_A) {
-                    formats |= Barcode.UPC_A;
-                } else if (options.formats[i] == BarcodeFormat.UPC_E) {
-                    formats |= Barcode.UPC_E;
-                } else {
-                    Log.e(TAG, "Unsupported barcode format hint: " + options.formats[i]);
-                }
-            }
-        }
-        mBarcodeDetector = new BarcodeDetector.Builder(ContextUtils.getApplicationContext())
-                                   .setBarcodeFormats(formats)
-                                   .build();
     }
 
     @Override
@@ -80,47 +33,12 @@ public class BarcodeDetectionImpl implements BarcodeDetection {
         // on the device; this happens "fast", but it might have not completed,
         // bail in this case. Also, the API was disabled between and v.9.0 and
         // v.9.2, see https://developers.google.com/android/guides/releases.
-        if (!mBarcodeDetector.isOperational()) {
-            Log.e(TAG, "BarcodeDetector is not operational");
-            callback.call(new BarcodeDetectionResult[0]);
-            return;
-        }
-
-        Frame frame = BitmapUtils.convertToFrame(bitmapData);
-        if (frame == null) {
-            Log.e(TAG, "Error converting Mojom Bitmap to Frame");
-            callback.call(new BarcodeDetectionResult[0]);
-            return;
-        }
-
-        final SparseArray<Barcode> barcodes = mBarcodeDetector.detect(frame);
-
-        BarcodeDetectionResult[] barcodeArray = new BarcodeDetectionResult[barcodes.size()];
-        for (int i = 0; i < barcodes.size(); i++) {
-            barcodeArray[i] = new BarcodeDetectionResult();
-            final Barcode barcode = barcodes.valueAt(i);
-            barcodeArray[i].rawValue = barcode.rawValue;
-            final Rect rect = barcode.getBoundingBox();
-            barcodeArray[i].boundingBox = new RectF();
-            barcodeArray[i].boundingBox.x = rect.left;
-            barcodeArray[i].boundingBox.y = rect.top;
-            barcodeArray[i].boundingBox.width = rect.width();
-            barcodeArray[i].boundingBox.height = rect.height();
-            final Point[] corners = barcode.cornerPoints;
-            barcodeArray[i].cornerPoints = new PointF[corners.length];
-            for (int j = 0; j < corners.length; j++) {
-                barcodeArray[i].cornerPoints[j] = new PointF();
-                barcodeArray[i].cornerPoints[j].x = corners[j].x;
-                barcodeArray[i].cornerPoints[j].y = corners[j].y;
-            }
-            barcodeArray[i].format = toBarcodeFormat(barcode.format);
-        }
-        callback.call(barcodeArray);
+        Log.e(TAG, "BarcodeDetector is not operational");
+        callback.call(new BarcodeDetectionResult[0]);
     }
 
     @Override
     public void close() {
-        mBarcodeDetector.release();
     }
 
     @Override
@@ -129,34 +47,6 @@ public class BarcodeDetectionImpl implements BarcodeDetection {
     }
 
     private int toBarcodeFormat(int format) {
-        switch (format) {
-            case Barcode.CODE_128:
-                return BarcodeFormat.CODE_128;
-            case Barcode.CODE_39:
-                return BarcodeFormat.CODE_39;
-            case Barcode.CODE_93:
-                return BarcodeFormat.CODE_93;
-            case Barcode.CODABAR:
-                return BarcodeFormat.CODABAR;
-            case Barcode.DATA_MATRIX:
-                return BarcodeFormat.DATA_MATRIX;
-            case Barcode.EAN_13:
-                return BarcodeFormat.EAN_13;
-            case Barcode.EAN_8:
-                return BarcodeFormat.EAN_8;
-            case Barcode.ITF:
-                return BarcodeFormat.ITF;
-            case Barcode.QR_CODE:
-                return BarcodeFormat.QR_CODE;
-            case Barcode.UPC_A:
-                return BarcodeFormat.UPC_A;
-            case Barcode.UPC_E:
-                return BarcodeFormat.UPC_E;
-            case Barcode.PDF417:
-                return BarcodeFormat.PDF417;
-            case Barcode.AZTEC:
-                return BarcodeFormat.AZTEC;
-        }
         return BarcodeFormat.UNKNOWN;
     }
 }
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java
@@ -8,8 +8,6 @@ import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager.NameNotFoundException;
 
-import com.google.android.gms.common.GoogleApiAvailability;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.gms.ChromiumPlayServicesAvailability;
@@ -36,15 +34,6 @@ public class BarcodeDetectionProviderImpl implements BarcodeDetectionProvider {
 
     @Override
     public void enumerateSupportedFormats(EnumerateSupportedFormatsResponse callback) {
-        // Keep this list in sync with the constants defined in
-        // com.google.android.gms.vision.barcode.Barcode and the format hints
-        // supported by BarcodeDetectionImpl.
-        int[] supportedFormats = {BarcodeFormat.AZTEC, BarcodeFormat.CODE_128,
-                BarcodeFormat.CODE_39, BarcodeFormat.CODE_93, BarcodeFormat.CODABAR,
-                BarcodeFormat.DATA_MATRIX, BarcodeFormat.EAN_13, BarcodeFormat.EAN_8,
-                BarcodeFormat.ITF, BarcodeFormat.PDF417, BarcodeFormat.QR_CODE, BarcodeFormat.UPC_A,
-                BarcodeFormat.UPC_E};
-        callback.call(supportedFormats);
     }
 
     @Override
@@ -54,23 +43,7 @@ public class BarcodeDetectionProviderImpl implements BarcodeDetectionProvider {
     public void onConnectionError(MojoException e) {}
 
     public static BarcodeDetectionProvider create() {
-        Context ctx = ContextUtils.getApplicationContext();
-        if (!ChromiumPlayServicesAvailability.isGooglePlayServicesAvailable(ctx)) {
-            Log.w(TAG, "Google Play Services not available");
-            return null;
-        }
-        try {
-            PackageInfo playServicesPackage = ctx.getPackageManager().getPackageInfo(
-                    GoogleApiAvailability.GOOGLE_PLAY_SERVICES_PACKAGE, 0);
-            if (playServicesPackage.versionCode < 19742000) {
-                // https://crbug.com/1020746
-                Log.w(TAG, "Detection disabled (%s < 19.7.42)", playServicesPackage.versionName);
-                return null;
-            }
-        } catch (NameNotFoundException e) {
-            Log.w(TAG, "Google Play Services not available");
-            return null;
-        }
-        return new BarcodeDetectionProviderImpl();
+        Log.w(TAG, "Google Play Services not available");
+        return null;
     }
 }
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java
@@ -7,11 +7,6 @@ package org.chromium.shape_detection;
 import android.graphics.PointF;
 import android.util.SparseArray;
 
-import com.google.android.gms.vision.Frame;
-import com.google.android.gms.vision.face.Face;
-import com.google.android.gms.vision.face.FaceDetector;
-import com.google.android.gms.vision.face.Landmark;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.gfx.mojom.RectF;
@@ -36,107 +31,20 @@ public class FaceDetectionImplGmsCore implements FaceDetection {
     private static final int MAX_EULER_Z = 15;
     private final int mMaxFaces;
     private final boolean mFastMode;
-    private final FaceDetector mFaceDetector;
 
     FaceDetectionImplGmsCore(FaceDetectorOptions options) {
-        FaceDetector.Builder builder =
-                new FaceDetector.Builder(ContextUtils.getApplicationContext());
         mMaxFaces = Math.min(options.maxDetectedFaces, MAX_FACES);
         mFastMode = options.fastMode;
-
-        try {
-            builder.setMode(mFastMode ? FaceDetector.FAST_MODE : FaceDetector.ACCURATE_MODE);
-            builder.setLandmarkType(FaceDetector.ALL_LANDMARKS);
-            if (mMaxFaces == 1) {
-                builder.setProminentFaceOnly(true);
-            }
-        } catch (IllegalArgumentException e) {
-            Log.e(TAG, "Unexpected exception " + e);
-            assert false;
-        }
-
-        mFaceDetector = builder.build();
     }
 
     @Override
     public void detect(org.chromium.skia.mojom.BitmapN32 bitmapData, DetectResponse callback) {
-        // The vision library will be downloaded the first time the API is used
-        // on the device; this happens "fast", but it might have not completed,
-        // bail in this case.
-        if (!mFaceDetector.isOperational()) {
-            Log.e(TAG, "FaceDetector is not operational");
-
-            // Fallback to Android's FaceDetectionImpl.
-            FaceDetectorOptions options = new FaceDetectorOptions();
-            options.fastMode = mFastMode;
-            options.maxDetectedFaces = mMaxFaces;
-            FaceDetectionImpl detector = new FaceDetectionImpl(options);
-            detector.detect(bitmapData, callback);
-            return;
-        }
-
-        Frame frame = BitmapUtils.convertToFrame(bitmapData);
-        if (frame == null) {
-            Log.e(TAG, "Error converting Mojom Bitmap to Frame");
-            callback.call(new FaceDetectionResult[0]);
-            return;
-        }
-
-        final SparseArray<Face> faces = mFaceDetector.detect(frame);
-
-        FaceDetectionResult[] faceArray = new FaceDetectionResult[faces.size()];
-        for (int i = 0; i < faces.size(); i++) {
-            faceArray[i] = new FaceDetectionResult();
-            final Face face = faces.valueAt(i);
-
-            final PointF corner = face.getPosition();
-            faceArray[i].boundingBox = new RectF();
-            faceArray[i].boundingBox.x = corner.x;
-            faceArray[i].boundingBox.y = corner.y;
-            faceArray[i].boundingBox.width = face.getWidth();
-            faceArray[i].boundingBox.height = face.getHeight();
-
-            final List<Landmark> landmarks = face.getLandmarks();
-            ArrayList<org.chromium.shape_detection.mojom.Landmark> mojoLandmarks =
-                    new ArrayList<org.chromium.shape_detection.mojom.Landmark>(landmarks.size());
-
-            for (int j = 0; j < landmarks.size(); j++) {
-                final Landmark landmark = landmarks.get(j);
-                final int landmarkType = landmark.getType();
-                if (landmarkType != Landmark.LEFT_EYE && landmarkType != Landmark.RIGHT_EYE
-                        && landmarkType != Landmark.BOTTOM_MOUTH
-                        && landmarkType != Landmark.NOSE_BASE) {
-                    continue;
-                }
-
-                org.chromium.shape_detection.mojom.Landmark mojoLandmark =
-                        new org.chromium.shape_detection.mojom.Landmark();
-                mojoLandmark.locations = new org.chromium.gfx.mojom.PointF[1];
-                mojoLandmark.locations[0] = new org.chromium.gfx.mojom.PointF();
-                mojoLandmark.locations[0].x = landmark.getPosition().x;
-                mojoLandmark.locations[0].y = landmark.getPosition().y;
-
-                if (landmarkType == Landmark.LEFT_EYE) {
-                    mojoLandmark.type = LandmarkType.EYE;
-                } else if (landmarkType == Landmark.RIGHT_EYE) {
-                    mojoLandmark.type = LandmarkType.EYE;
-                } else if (landmarkType == Landmark.BOTTOM_MOUTH) {
-                    mojoLandmark.type = LandmarkType.MOUTH;
-                } else {
-                    assert landmarkType == Landmark.NOSE_BASE;
-                    mojoLandmark.type = LandmarkType.NOSE;
-                }
-                mojoLandmarks.add(mojoLandmark);
-            }
-            faceArray[i].landmarks = mojoLandmarks.toArray(
-                    new org.chromium.shape_detection.mojom.Landmark[mojoLandmarks.size()]);
-        }
-        callback.call(faceArray);
+        Log.e(TAG, "FaceDetector is not operational");
+        callback.call(new FaceDetectionResult[0]);
     }
 
     @Override
     public void close() {
-        mFaceDetector.release();
     }
 
     @Override
diff --git a/services/shape_detection/android/java/src/org/chromium/shape_detection/TextDetectionImpl.java b/services/shape_detection/android/java/src/org/chromium/shape_detection/TextDetectionImpl.java
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/TextDetectionImpl.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/TextDetectionImpl.java
@@ -8,15 +8,10 @@ import android.graphics.Point;
 import android.graphics.Rect;
 import android.util.SparseArray;
 
-import com.google.android.gms.vision.Frame;
-import com.google.android.gms.vision.text.TextBlock;
-import com.google.android.gms.vision.text.TextRecognizer;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.gfx.mojom.PointF;
 import org.chromium.gfx.mojom.RectF;
-import org.chromium.gms.ChromiumPlayServicesAvailability;
 import org.chromium.mojo.system.MojoException;
 import org.chromium.shape_detection.mojom.TextDetection;
 import org.chromium.shape_detection.mojom.TextDetectionResult;
@@ -27,58 +22,17 @@ import org.chromium.shape_detection.mojom.TextDetectionResult;
 public class TextDetectionImpl implements TextDetection {
     private static final String TAG = "TextDetectionImpl";
 
-    private TextRecognizer mTextRecognizer;
-
     public TextDetectionImpl() {
-        mTextRecognizer = new TextRecognizer.Builder(ContextUtils.getApplicationContext()).build();
     }
 
     @Override
     public void detect(org.chromium.skia.mojom.BitmapN32 bitmapData, DetectResponse callback) {
-        // The vision library will be downloaded the first time the API is used
-        // on the device; this happens "fast", but it might have not completed,
-        // bail in this case. Also, the API was disabled between and v.9.0 and
-        // v.9.2, see https://developers.google.com/android/guides/releases.
-        if (!mTextRecognizer.isOperational()) {
-            Log.e(TAG, "TextDetector is not operational");
-            callback.call(new TextDetectionResult[0]);
-            return;
-        }
-
-        Frame frame = BitmapUtils.convertToFrame(bitmapData);
-        if (frame == null) {
-            Log.e(TAG, "Error converting Mojom Bitmap to Frame");
-            callback.call(new TextDetectionResult[0]);
-            return;
-        }
-
-        final SparseArray<TextBlock> textBlocks = mTextRecognizer.detect(frame);
-
-        TextDetectionResult[] detectedTextArray = new TextDetectionResult[textBlocks.size()];
-        for (int i = 0; i < textBlocks.size(); i++) {
-            detectedTextArray[i] = new TextDetectionResult();
-            final TextBlock textBlock = textBlocks.valueAt(i);
-            detectedTextArray[i].rawValue = textBlock.getValue();
-            final Rect rect = textBlock.getBoundingBox();
-            detectedTextArray[i].boundingBox = new RectF();
-            detectedTextArray[i].boundingBox.x = rect.left;
-            detectedTextArray[i].boundingBox.y = rect.top;
-            detectedTextArray[i].boundingBox.width = rect.width();
-            detectedTextArray[i].boundingBox.height = rect.height();
-            final Point[] corners = textBlock.getCornerPoints();
-            detectedTextArray[i].cornerPoints = new PointF[corners.length];
-            for (int j = 0; j < corners.length; j++) {
-                detectedTextArray[i].cornerPoints[j] = new PointF();
-                detectedTextArray[i].cornerPoints[j].x = corners[j].x;
-                detectedTextArray[i].cornerPoints[j].y = corners[j].y;
-            }
-        }
-        callback.call(detectedTextArray);
+        Log.e(TAG, "TextDetector is not operational");
+        callback.call(new TextDetectionResult[0]);
     }
 
     @Override
     public void close() {
-        mTextRecognizer.release();
     }
 
     @Override
@@ -87,11 +41,7 @@ public class TextDetectionImpl implements TextDetection {
     }
 
     public static TextDetection create() {
-        if (!ChromiumPlayServicesAvailability.isGooglePlayServicesAvailable(
-                    ContextUtils.getApplicationContext())) {
-            Log.e(TAG, "Google Play Services not available");
-            return null;
-        }
-        return new TextDetectionImpl();
+        Log.e(TAG, "Google Play Services not available");
+        return null;
     }
 }
diff --git a/third_party/android_deps/BUILD.gn b/third_party/android_deps/BUILD.gn
--- a/third_party/android_deps/BUILD.gn
+++ b/third_party/android_deps/BUILD.gn
@@ -1191,45 +1191,6 @@ android_aar_prebuilt("google_play_services_basement_java") {
       "//build/android/bytecode:fragment_activity_replacer"
 }
 
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_cast_java") {
-  aar_path = "libs/com_google_android_gms_play_services_cast/play-services-cast-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_cast/com_google_android_gms_play_services_cast.info"
-  deps = [
-    ":androidx_core_core_java",
-    ":androidx_mediarouter_mediarouter_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_flags_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_cast_framework_java") {
-  aar_path = "libs/com_google_android_gms_play_services_cast_framework/play-services-cast-framework-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_cast_framework/com_google_android_gms_play_services_cast_framework.info"
-  deps = [
-    ":androidx_appcompat_appcompat_java",
-    ":androidx_collection_collection_java",
-    ":androidx_core_core_java",
-    ":androidx_fragment_fragment_java",
-    ":androidx_media_media_java",
-    ":androidx_mediarouter_mediarouter_java",
-    ":androidx_recyclerview_recyclerview_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_cast_java",
-  ]
-
-  # Removing all resources from cast framework as they are unused bloat.
-  # Can only safely remove them when R8 will strip the path that accesses them.
-  strip_resources = !is_java_debug
-}
-
 # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
 android_aar_prebuilt("google_play_services_fido_java") {
   aar_path = "libs/com_google_android_gms_play_services_fido/play-services-fido-18.1.0.aar"
@@ -1318,36 +1279,6 @@ android_aar_prebuilt("google_play_services_tasks_java") {
   strip_drawables = true
 }
 
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_vision_java") {
-  aar_path = "libs/com_google_android_gms_play_services_vision/play-services-vision-18.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_vision/com_google_android_gms_play_services_vision.info"
-  deps = [
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_vision_common_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_vision_common_java") {
-  aar_path = "libs/com_google_android_gms_play_services_vision_common/play-services-vision-common-18.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_vision_common/com_google_android_gms_play_services_vision_common.info"
-  deps = [
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_clearcut_java",
-    ":google_play_services_flags_java",
-    ":google_play_services_phenotype_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
 # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
 android_aar_prebuilt("com_google_android_material_material_java") {
   aar_path =
@@ -2305,62 +2236,6 @@ java_prebuilt("com_github_kevinstern_software_and_algorithms_java") {
   visibility = [ ":*" ]
 }
 
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_clearcut_java") {
-  aar_path = "libs/com_google_android_gms_play_services_clearcut/play-services-clearcut-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_clearcut/com_google_android_gms_play_services_clearcut.info"
-
-  # To remove visibility constraint, add this dependency to
-  # //third_party/android_deps/build.gradle.
-  visibility = [ ":*" ]
-  deps = [
-    ":androidx_core_core_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_phenotype_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_flags_java") {
-  aar_path = "libs/com_google_android_gms_play_services_flags/play-services-flags-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_flags/com_google_android_gms_play_services_flags.info"
-
-  # To remove visibility constraint, add this dependency to
-  # //third_party/android_deps/build.gradle.
-  visibility = [ ":*" ]
-  deps = [
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_phenotype_java") {
-  aar_path = "libs/com_google_android_gms_play_services_phenotype/play-services-phenotype-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_phenotype/com_google_android_gms_play_services_phenotype.info"
-
-  # To remove visibility constraint, add this dependency to
-  # //third_party/android_deps/build.gradle.
-  visibility = [ ":*" ]
-  deps = [
-    ":androidx_core_core_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
 # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
 android_aar_prebuilt("google_play_services_places_placereport_java") {
   aar_path = "libs/com_google_android_gms_play_services_places_placereport/play-services-places-placereport-17.0.0.aar"
diff --git a/weblayer/BUILD.gn b/weblayer/BUILD.gn
--- a/weblayer/BUILD.gn
+++ b/weblayer/BUILD.gn
@@ -639,7 +639,6 @@ source_set("weblayer_lib_base") {
       "//components/infobars/content",
       "//components/javascript_dialogs",
       "//components/location/android:settings",
-      "//components/media_router/browser",
       "//components/metrics",
       "//components/minidump_uploader",
       "//components/navigation_interception",
diff --git a/weblayer/browser/java/BUILD.gn b/weblayer/browser/java/BUILD.gn
--- a/weblayer/browser/java/BUILD.gn
+++ b/weblayer/browser/java/BUILD.gn
@@ -232,8 +232,6 @@ android_library("java") {
     "//components/infobars/core:infobar_enums_java",
     "//components/javascript_dialogs/android:java",
     "//components/location/android:settings_java",
-    "//components/media_router/browser/android:cast_options_provider_java",
-    "//components/media_router/browser/android:java",
     "//components/metrics:metrics_java",
     "//components/minidump_uploader:minidump_uploader_java",
     "//components/navigation_interception/android:navigation_interception_java",
@@ -321,8 +319,6 @@ android_library("test_java") {
     "//base:jni_java",
     "//components/infobars/android:java",
     "//components/location/android:location_java",
-    "//components/media_router/browser/android:java",
-    "//components/media_router/browser/android:test_support_java",
     "//components/permissions/android:java",
     "//content/public/test/android:content_java_test_support",
     "//net/android:net_java",
diff --git a/weblayer/public/java/AndroidManifest.xml b/weblayer/public/java/AndroidManifest.xml
--- a/weblayer/public/java/AndroidManifest.xml
+++ b/weblayer/public/java/AndroidManifest.xml
@@ -104,12 +104,6 @@
             android:isolatedProcess="true"
             android:process=":decoder_service" />
 
-        <!-- Cast support -->
-        <!-- TODO(crbug.com/1148410): remove this. -->
-        <meta-data
-            android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-            android:value="org.chromium.components.media_router.caf.CastOptionsProvider"/>
-
         <!-- GooglePay payment app support -->
         <meta-data
             android:name="com.google.android.gms.wallet.api.enabled"
-- 
2.17.1

