From: uazo <uazo@users.noreply.github.com>
Date: Mon, 17 May 2021 12:28:11 +0000
Subject: Add support for prefs addon

---
 .../chrome/browser/settings/MainSettings.java |  7 +++
 chrome/android/proguard/main.flags            |  7 +++
 .../browser_ui/settings/SettingsUtils.java    | 45 +++++++++++++++++++
 3 files changed, 59 insertions(+)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
@@ -112,6 +112,8 @@ public class MainSettings extends PreferenceFragmentCompat
     private void createPreferences() {
         SettingsUtils.addPreferencesFromResource(this, R.xml.main_preferences);
 
+        createBromitePreferences();
+
         cachePreferences();
 
         updatePasswordsPreference();
@@ -257,4 +259,9 @@ public class MainSettings extends PreferenceFragmentCompat
             }
         };
     }
+
+    private void createBromitePreferences() {
+        SettingsUtils.inflatePrefsAddon(this, "main_preferences_addon_",
+            R.xml.class.getFields());
+    }
 }
diff --git a/chrome/android/proguard/main.flags b/chrome/android/proguard/main.flags
--- a/chrome/android/proguard/main.flags
+++ b/chrome/android/proguard/main.flags
@@ -63,3 +63,10 @@
 -keep,allowobfuscation public class ** extends org.chromium.chrome.browser.base.SplitCompat*$Impl {
   public <init>();
 }
+
+# Keep fields name for all R.xml
+# used in SettingsUtils.java
+# components/browser_ui/settings/android/java/src/org/chromium/components/browser_ui/settings
+-keepclassmembers class **.R$xml* {
+    public static <fields>;
+}
diff --git a/components/browser_ui/settings/android/java/src/org/chromium/components/browser_ui/settings/SettingsUtils.java b/components/browser_ui/settings/android/java/src/org/chromium/components/browser_ui/settings/SettingsUtils.java
--- a/components/browser_ui/settings/android/java/src/org/chromium/components/browser_ui/settings/SettingsUtils.java
+++ b/components/browser_ui/settings/android/java/src/org/chromium/components/browser_ui/settings/SettingsUtils.java
@@ -24,6 +24,12 @@ import androidx.preference.PreferenceFragmentCompat;
 
 import org.chromium.base.ApiCompatibilityUtils;
 
+import org.chromium.base.Log;
+import androidx.preference.PreferenceScreen;
+import androidx.preference.PreferenceManager;
+import android.content.res.Resources;
+import java.lang.reflect.Field;
+
 /**
  * A helper class for Settings.
  */
@@ -126,4 +132,43 @@ public class SettingsUtils {
         ImageView imageButton = (ImageView) button;
         return imageButton.getDrawable() == parentMenu.getOverflowIcon();
     }
+
+    public static PreferenceScreen inflatePrefsAddon(PreferenceFragmentCompat preferenceFragment,
+                                                     String name,
+                                                     Field[] fields) {
+        Resources resources = preferenceFragment.getResources();
+
+        for(int count=0; count < fields.length; count++) {
+            String assetName = fields[count].getName();
+            if (assetName.startsWith(name)) {
+                int resId = 0;
+                try {
+                    resId = fields[count].getInt(null);
+                } catch (IllegalAccessException e) {}
+
+                if (resId != 0) {
+                    try {
+                        return SettingsUtils.inflatePreferencesFromResource(preferenceFragment, resId);
+                    } catch (Throwable e) {
+                        Log.e("settingsutils", "Error inflating from resource", e);
+                    }
+                }
+            }
+        }
+        return null;
+    }
+
+    public static PreferenceScreen inflatePreferencesFromResource(
+            PreferenceFragmentCompat preferenceFragment, @XmlRes int preferencesResId) {
+        StrictMode.ThreadPolicy oldPolicy = StrictMode.allowThreadDiskReads();
+        try {
+            PreferenceManager preferenceManager = preferenceFragment.getPreferenceManager();
+            final PreferenceScreen xmlRoot = preferenceManager.inflateFromResource(
+                preferenceFragment.getContext(),
+                preferencesResId, preferenceFragment.getPreferenceScreen());
+            return xmlRoot;
+        } finally {
+            StrictMode.setThreadPolicy(oldPolicy);
+        }
+    }
 }
-- 
2.17.1

