From: uazo <uazo@users.noreply.github.com>
Date: Tue, 5 Oct 2021 08:38:52 +0000
Subject: Site setting for images

---
 .../browser_ui/site_settings/android/BUILD.gn |  5 +++++
 .../res/xml/site_settings_preferences.xml     |  4 ++++
 .../ContentSettingsResources.java             |  4 ++++
 .../site_settings/SingleCategorySettings.java |  4 ++++
 .../site_settings/SingleWebsiteSettings.java  | 22 +++++++++++++++++++
 .../site_settings/SiteSettingsCategory.java   |  9 ++++++--
 .../site_settings/SiteSettingsUtil.java       |  1 +
 .../browser_ui/site_settings/Website.java     |  6 +++++
 .../WebsitePermissionsFetcher.java            |  1 +
 .../android/website_preference_bridge.cc      |  1 +
 .../strings/android/site_settings.grdp        |  6 +++++
 .../core/browser/content_settings_registry.cc |  3 ++-
 .../core/browser/content_settings_utils.cc    |  9 ++------
 .../android/page_info_controller_android.cc   |  4 ++++
 components/page_info/page_info.cc             |  7 ++++--
 components/page_info/page_info_ui.cc          |  1 +
 16 files changed, 75 insertions(+), 12 deletions(-)

diff --git a/components/browser_ui/site_settings/android/BUILD.gn b/components/browser_ui/site_settings/android/BUILD.gn
--- a/components/browser_ui/site_settings/android/BUILD.gn
+++ b/components/browser_ui/site_settings/android/BUILD.gn
@@ -112,6 +112,7 @@ android_resources("java_resources") {
   sources = [
     "java/res/drawable-hdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-hdpi/permission_background_sync.png",
+    "java/res/drawable-hdpi/permission_images.png",
     "java/res/drawable-hdpi/permission_javascript.png",
     "java/res/drawable-hdpi/permission_popups.png",
     "java/res/drawable-hdpi/permission_protected_media.png",
@@ -119,6 +120,7 @@ android_resources("java_resources") {
     "java/res/drawable-hdpi/web_asset.png",
     "java/res/drawable-mdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-mdpi/permission_background_sync.png",
+    "java/res/drawable-mdpi/permission_images.png",
     "java/res/drawable-mdpi/permission_javascript.png",
     "java/res/drawable-mdpi/permission_popups.png",
     "java/res/drawable-mdpi/permission_protected_media.png",
@@ -126,6 +128,7 @@ android_resources("java_resources") {
     "java/res/drawable-mdpi/web_asset.png",
     "java/res/drawable-xhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xhdpi/permission_background_sync.png",
+    "java/res/drawable-xhdpi/permission_images.png",
     "java/res/drawable-xhdpi/permission_javascript.png",
     "java/res/drawable-xhdpi/permission_popups.png",
     "java/res/drawable-xhdpi/permission_protected_media.png",
@@ -133,6 +136,7 @@ android_resources("java_resources") {
     "java/res/drawable-xhdpi/web_asset.png",
     "java/res/drawable-xxhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xxhdpi/permission_background_sync.png",
+    "java/res/drawable-xxhdpi/permission_images.png",
     "java/res/drawable-xxhdpi/permission_javascript.png",
     "java/res/drawable-xxhdpi/permission_popups.png",
     "java/res/drawable-xxhdpi/permission_protected_media.png",
@@ -140,6 +144,7 @@ android_resources("java_resources") {
     "java/res/drawable-xxhdpi/web_asset.png",
     "java/res/drawable-xxxhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xxxhdpi/permission_background_sync.png",
+    "java/res/drawable-xxxhdpi/permission_images.png",
     "java/res/drawable-xxxhdpi/permission_javascript.png",
     "java/res/drawable-xxxhdpi/permission_popups.png",
     "java/res/drawable-xxxhdpi/permission_protected_media.png",
diff --git a/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml b/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
--- a/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
+++ b/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
@@ -41,6 +41,10 @@
     <org.chromium.components.browser_ui.settings.ChromeBasePreference
         android:fragment="org.chromium.components.browser_ui.site_settings.SingleCategorySettings"
         android:key="javascript" />
+    <!-- Images -->
+    <org.chromium.components.browser_ui.settings.ChromeBasePreference
+        android:key="images"
+        android:fragment="org.chromium.components.browser_ui.site_settings.SingleCategorySettings" />
     <!-- Timezone Override -->
     <org.chromium.components.browser_ui.settings.ChromeBasePreference
         android:key="timezone_override"
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
@@ -126,6 +126,10 @@ public class ContentSettingsResources {
                 return new ResourceItem(R.drawable.settings_bluetooth, 0, 0,
                         ContentSettingValues.ASK, ContentSettingValues.BLOCK, 0, 0);
 
+            case ContentSettingsType.IMAGES:
+                return new ResourceItem(R.drawable.permission_images, 0, R.string.images_permission_title,
+                        ContentSettingValues.ALLOW, ContentSettingValues.BLOCK, 0, 0);
+
             case ContentSettingsType.BLUETOOTH_GUARD:
                 return new ResourceItem(R.drawable.settings_bluetooth, 0,
                         R.string.website_settings_bluetooth, ContentSettingValues.ASK,
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
@@ -548,6 +548,8 @@ public class SingleCategorySettings extends SiteSettingsPreferenceFragment
                                browserContextHandle, ContentSettingsType.SOUND)
                     ? R.string.website_settings_add_site_description_sound_block
                     : R.string.website_settings_add_site_description_sound_allow;
+        } else if (mCategory.showSites(SiteSettingsCategory.Type.IMAGES)) {
+            resource = R.string.website_settings_add_site_description_images;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.COOKIES)) {
             if (mRequiresFourStateSetting) {
                 resource = cookieSettingsExceptionShouldBlock()
@@ -656,6 +658,8 @@ public class SingleCategorySettings extends SiteSettingsPreferenceFragment
             exception = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.JAVASCRIPT)) {
             exception = true;
+        } else if (mCategory.showSites(SiteSettingsCategory.Type.IMAGES)) {
+            exception = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.COOKIES)) {
             exception = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.BACKGROUND_SYNC)
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
@@ -120,6 +120,8 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
                 return "autoplay_permission_list";
             case ContentSettingsType.IDLE_DETECTION:
                 return "idle_detection_permission_list";
+            case ContentSettingsType.IMAGES:
+                return "images_permission_list";
             case ContentSettingsType.JAVASCRIPT:
                 return "javascript_permission_list";
             case ContentSettingsType.POPUPS:
@@ -492,6 +494,8 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
                 setUpJavascriptPreference(preference);
             } else if (type == ContentSettingsType.COOKIES) {
                 setUpCookiesPreference(preference);
+            } else if (type == ContentSettingsType.IMAGES) {
+                setUpImagesPreference(preference);
             } else if (type == ContentSettingsType.GEOLOCATION) {
                 setUpLocationPreference(preference);
             } else if (type == ContentSettingsType.NOTIFICATIONS) {
@@ -1057,6 +1061,24 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
         setupContentSettingsPreference(preference, permission, false /* isEmbargoed */);
     }
 
+    private void setUpImagesPreference(Preference preference) {
+        BrowserContextHandle browserContextHandle =
+                getSiteSettingsDelegate().getBrowserContextHandle();
+        @ContentSettingValues
+        @Nullable
+        Integer currentValue =
+                mSite.getContentSetting(browserContextHandle, ContentSettingsType.IMAGES);
+        // Always show the Images permission
+        if (currentValue == null) {
+            currentValue = WebsitePreferenceBridge.isCategoryEnabled(
+                                   browserContextHandle, ContentSettingsType.IMAGES)
+                    ? ContentSettingValues.ALLOW
+                    : ContentSettingValues.BLOCK;
+        }
+        // Not possible to embargo IMAGES.
+        setupContentSettingsPreference(preference, currentValue, false /* isEmbargoed */);
+    }
+
     private String getDSECategorySummary(@ContentSettingValues int value) {
         return value == ContentSettingValues.ALLOW
                 ? getString(R.string.website_settings_permissions_allowed_dse)
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
@@ -42,7 +42,7 @@ public class SiteSettingsCategory {
             Type.CLIPBOARD, Type.COOKIES, Type.IDLE_DETECTION, Type.DEVICE_LOCATION,
             Type.JAVASCRIPT, Type.MICROPHONE, Type.NFC, Type.NOTIFICATIONS, Type.POPUPS,
             Type.PROTECTED_MEDIA, Type.SENSORS, Type.SOUND, Type.USB, Type.VIRTUAL_REALITY,
-            Type.USE_STORAGE, Type.TIMEZONE_OVERRIDE, Type.AUTOPLAY})
+            Type.USE_STORAGE, Type.TIMEZONE_OVERRIDE, Type.AUTOPLAY, Type.IMAGES})
     @Retention(RetentionPolicy.SOURCE)
     public @interface Type {
         // All updates here must also be reflected in {@link #preferenceKey(int)
@@ -72,10 +72,11 @@ public class SiteSettingsCategory {
         int USE_STORAGE = 22;
         int TIMEZONE_OVERRIDE = 23;
         int AUTOPLAY = 24;
+        int IMAGES = 25;
         /**
          * Number of handled categories used for calculating array sizes.
          */
-        int NUM_ENTRIES = 25;
+        int NUM_ENTRIES = 26;
     }
 
     private final BrowserContextHandle mBrowserContextHandle;
@@ -173,6 +174,8 @@ public class SiteSettingsCategory {
                 return ContentSettingsType.GEOLOCATION;
             case Type.IDLE_DETECTION:
                 return ContentSettingsType.IDLE_DETECTION;
+            case Type.IMAGES:
+                return ContentSettingsType.IMAGES;
             case Type.JAVASCRIPT:
                 return ContentSettingsType.JAVASCRIPT;
             case Type.MICROPHONE:
@@ -250,6 +253,8 @@ public class SiteSettingsCategory {
                 return "idle_detection";
             case Type.JAVASCRIPT:
                 return "javascript";
+            case Type.IMAGES:
+                return "images";
             case Type.MICROPHONE:
                 return "microphone";
             case Type.NFC:
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
@@ -21,6 +21,7 @@ public class SiteSettingsUtil {
             ContentSettingsType.MEDIASTREAM_MIC,
             ContentSettingsType.NOTIFICATIONS,
             ContentSettingsType.JAVASCRIPT,
+            ContentSettingsType.IMAGES,
             ContentSettingsType.POPUPS,
             ContentSettingsType.ADS,
             ContentSettingsType.BACKGROUND_SYNC,
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
@@ -200,6 +200,12 @@ public final class Website implements Serializable {
                         getAddress().getOrigin(), value, "");
                 setContentSettingException(type, exception);
             }
+        } else if (type == ContentSettingsType.IMAGES) {
+            if (exception == null) {
+                exception = new ContentSettingException(
+                        ContentSettingsType.IMAGES, getAddress().getHost(), value, "");
+                setContentSettingException(type, exception);
+            }
         } else if (type == ContentSettingsType.JAVASCRIPT) {
             // It is possible to set the permission without having an existing exception,
             // because we show the javascript permission in Site Settings if javascript
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePermissionsFetcher.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePermissionsFetcher.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePermissionsFetcher.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/WebsitePermissionsFetcher.java
@@ -62,6 +62,7 @@ public class WebsitePermissionsFetcher {
             case ContentSettingsType.BLUETOOTH_SCANNING:
             case ContentSettingsType.AUTOPLAY:
             case ContentSettingsType.COOKIES:
+            case ContentSettingsType.IMAGES:
             case ContentSettingsType.JAVASCRIPT:
             case ContentSettingsType.JAVASCRIPT_JIT:
             case ContentSettingsType.POPUPS:
diff --git a/components/browser_ui/site_settings/android/website_preference_bridge.cc b/components/browser_ui/site_settings/android/website_preference_bridge.cc
--- a/components/browser_ui/site_settings/android/website_preference_bridge.cc
+++ b/components/browser_ui/site_settings/android/website_preference_bridge.cc
@@ -821,6 +821,7 @@ static void JNI_WebsitePreferenceBridge_SetContentSettingEnabled(
       case ContentSettingsType::ADS:
       case ContentSettingsType::BACKGROUND_SYNC:
       case ContentSettingsType::COOKIES:
+      case ContentSettingsType::IMAGES:
       case ContentSettingsType::JAVASCRIPT:
       case ContentSettingsType::POPUPS:
       case ContentSettingsType::SENSORS:
diff --git a/components/browser_ui/strings/android/site_settings.grdp b/components/browser_ui/strings/android/site_settings.grdp
--- a/components/browser_ui/strings/android/site_settings.grdp
+++ b/components/browser_ui/strings/android/site_settings.grdp
@@ -42,6 +42,9 @@
   <message name="IDS_WEBSITE_SETTINGS_IDLE_DETECTION" desc="Title of the permission to detect user activity [CHAR_LIMIT=32]">
     Your device use
   </message>
+  <message name="IDS_IMAGES_PERMISSION_TITLE" desc="Title of the permission to show images [CHAR-LIMIT=32]">
+    Images
+  </message>
   <message name="IDS_JAVASCRIPT_PERMISSION_TITLE" desc="Title of the permission to run javascript [CHAR_LIMIT=32]">
     JavaScript
   </message>
@@ -182,6 +185,9 @@
   <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_TOAST" desc="The toast shown when a new site has been added to the exception list.">
     Site <ph name="SITE_NAME">%1$s<ex>google.com</ex></ph> added
   </message>
+  <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_DESCRIPTION_IMAGES" desc="The description for the allow Images on website dialog.">
+    Allow images on websites you specify while blocking them for the rest of the web
+  </message>
   <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_SITE_URL" desc="The label for the input field where the user can type a website URL.">
     Site URL
   </message>
diff --git a/components/content_settings/core/browser/content_settings_registry.cc b/components/content_settings/core/browser/content_settings_registry.cc
--- a/components/content_settings/core/browser/content_settings_registry.cc
+++ b/components/content_settings/core/browser/content_settings_registry.cc
@@ -143,7 +143,8 @@ void ContentSettingsRegistry::Init() {
                               kExtensionScheme),
            ValidSettings(CONTENT_SETTING_ALLOW, CONTENT_SETTING_BLOCK),
            WebsiteSettingsInfo::SINGLE_ORIGIN_WITH_EMBEDDED_EXCEPTIONS_SCOPE,
-           WebsiteSettingsRegistry::DESKTOP,
+           WebsiteSettingsRegistry::DESKTOP |
+               WebsiteSettingsRegistry::PLATFORM_ANDROID,
            ContentSettingsInfo::INHERIT_IN_INCOGNITO,
            ContentSettingsInfo::PERSISTENT,
            ContentSettingsInfo::EXCEPTIONS_ON_SECURE_AND_INSECURE_ORIGINS);
diff --git a/components/content_settings/core/browser/content_settings_utils.cc b/components/content_settings/core/browser/content_settings_utils.cc
--- a/components/content_settings/core/browser/content_settings_utils.cc
+++ b/components/content_settings/core/browser/content_settings_utils.cc
@@ -126,13 +126,8 @@ void GetRendererContentSettingRules(const HostContentSettingsMap* map,
 
                              &(rules->mixed_content_rules));
 #else
-  // Android doesn't use image content settings, so ALLOW rule is added for
-  // all origins.
-  rules->image_rules.push_back(ContentSettingPatternSource(
-      ContentSettingsPattern::Wildcard(), ContentSettingsPattern::Wildcard(),
-      base::Value::FromUniquePtrValue(
-          ContentSettingToValue(CONTENT_SETTING_ALLOW)),
-      std::string(), map->IsOffTheRecord()));
+  map->GetSettingsForOneType(ContentSettingsType::IMAGES,
+                             &(rules->image_rules));
   // In Android active mixed content is hard blocked, with no option to allow
   // it.
   rules->mixed_content_rules.push_back(ContentSettingPatternSource(
diff --git a/components/page_info/android/page_info_controller_android.cc b/components/page_info/android/page_info_controller_android.cc
--- a/components/page_info/android/page_info_controller_android.cc
+++ b/components/page_info/android/page_info_controller_android.cc
@@ -214,6 +214,10 @@ absl::optional<ContentSetting> PageInfoControllerAndroid::GetSettingToDisplay(
     // audio since last navigation.
     if (web_contents_->WasEverAudible())
       return permission.default_setting;
+  } else if (permission.type == ContentSettingsType::IMAGES) {
+    // The images content setting should show up if it is blocked globally
+    // to give users an easy way to create exceptions.
+    return permission.default_setting;
   }
 
   // TODO(crbug.com/1077766): Also return permissions that are non
diff --git a/components/page_info/page_info.cc b/components/page_info/page_info.cc
--- a/components/page_info/page_info.cc
+++ b/components/page_info/page_info.cc
@@ -89,9 +89,7 @@ ContentSettingsType kPermissionType[] = {
     ContentSettingsType::SENSORS,
     ContentSettingsType::NOTIFICATIONS,
     ContentSettingsType::JAVASCRIPT,
-#if !defined(OS_ANDROID)
     ContentSettingsType::IMAGES,
-#endif
     ContentSettingsType::POPUPS,
     ContentSettingsType::WINDOW_PLACEMENT,
     ContentSettingsType::ADS,
@@ -146,6 +144,11 @@ bool ShouldShowPermission(const PageInfo::PermissionInfo& info,
      return true;
   }
 
+  // Always show images when it has a site-specific override
+  if (info.type == ContentSettingsType::IMAGES) {
+     return true;
+  }
+
   if (info.type == ContentSettingsType::SOUND) {
     // The sound content setting should always show up when the tab has played
     // audio.
diff --git a/components/page_info/page_info_ui.cc b/components/page_info/page_info_ui.cc
--- a/components/page_info/page_info_ui.cc
+++ b/components/page_info/page_info_ui.cc
@@ -208,6 +208,7 @@ base::span<const PageInfoUI::PermissionUIInfo> GetContentSettingsUIInfo() {
      IDS_SITE_SETTINGS_TYPE_HID_DEVICES_MID_SENTENCE},
     {ContentSettingsType::IMAGES, IDS_SITE_SETTINGS_TYPE_IMAGES,
      IDS_SITE_SETTINGS_TYPE_IMAGES_MID_SENTENCE},
+    {ContentSettingsType::IMAGES, IDS_PAGE_INFO_TYPE_IMAGES}, // needed
     {ContentSettingsType::SERIAL_GUARD, IDS_SITE_SETTINGS_TYPE_SERIAL_PORTS,
      IDS_SITE_SETTINGS_TYPE_SERIAL_PORTS_MID_SENTENCE},
     {ContentSettingsType::WINDOW_PLACEMENT,
-- 
2.17.1

