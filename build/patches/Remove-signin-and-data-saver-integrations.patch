From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Tue, 12 Jun 2018 14:23:07 +0200
Subject: Remove signin and data saver integrations

Prevents authorization prompt for Play services on reboot
Remove recent tabs signin
Disable data saver
Never show the data saver promo snackbar
Disable unused permissions from manifest
Disable sync adaptive and invalidation services from manifest
More permissions removal from manifest
Disable promos displayed in bookmarks manager
Remove personalized signin promo view from
bookmarks, never reach signin thresholds.

Fix building with debug symbols:

ld.lld: error: undefined symbol: notifier::NotifierOptions::NotifierOptions()
>>> referenced by invalidation_service_util.cc:17 (../../components/invalidation/impl/invalidation_service_util.cc:17)
>>>               impl/invalidation_service_util.o:(invalidation::ParseNotifierOptions(base::CommandLine const&)) in archive obj/components/invalidation/impl/libimpl.a
---
 chrome/android/BUILD.gn                       |   1 -
 chrome/android/chrome_java_sources.gni        |  40 ----
 .../PriceTrackingUtilities.java               |   5 +-
 .../browser/feed/FeedSurfaceCoordinator.java  |   5 +-
 .../browser/feed/FeedSurfaceMediator.java     | 103 +---------
 chrome/android/java/AndroidManifest.xml       |   8 -
 .../android/java/res/xml/main_preferences.xml |  27 +--
 .../java/res/xml/privacy_preferences.xml      |   4 -
 .../org/chromium/chrome/browser/AppHooks.java |   8 -
 .../chrome/browser/ChromeTabbedActivity.java  |  14 --
 .../chrome/browser/app/ChromeActivity.java    |  75 --------
 .../AutofillAssistantPreferenceFragment.java  |  12 --
 .../bookmarks/BookmarkItemsAdapter.java       |  50 +----
 .../bookmarks/BookmarkPromoHeader.java        | 180 +-----------------
 .../ClearBrowsingDataFragmentBasic.java       |   5 +-
 .../contextualsearch/ContextualSearchUma.java |   5 -
 .../browser/customtabs/CustomTabActivity.java |   3 -
 .../DataReductionPreferenceFragment.java      |  24 +--
 .../browser/firstrun/FirstRunActivity.java    |  38 ----
 .../firstrun/FirstRunFlowSequencer.java       |  29 +--
 .../firstrun/LightweightFirstRunActivity.java |   6 +-
 .../firstrun/ToSAndUMAFirstRunFragment.java   |  11 --
 .../history/HistoryContentManager.java        |  10 +-
 .../init/ChromeBrowserInitializer.java        |   2 -
 .../init/ProcessInitializationHandler.java    |   4 -
 .../chrome/browser/ntp/RecentTabsManager.java |  69 +------
 .../browser/ntp/RecentTabsRowAdapter.java     |   6 -
 .../browser/omaha/RequestGenerator.java       |   3 -
 .../PasswordManagerLauncher.java              |  15 +-
 .../settings/PasswordEntryViewer.java         |   5 +-
 .../settings/PasswordSettings.java            |  29 +--
 .../privacy/settings/PrivacySettings.java     |  30 ---
 .../chrome/browser/settings/MainSettings.java | 135 +------------
 .../browser/settings/SettingsActivity.java    |   5 +-
 .../browser/share/ShareDelegateImpl.java      |   3 +-
 .../share/ShareRegistrationCoordinator.java   |   3 +-
 .../SharedClipboardShareActivity.java         |   3 -
 .../tabbed_mode/TabbedRootUiCoordinator.java  |  22 +--
 .../tasks/ReturnToChromeExperimentsUtil.java  |   9 +-
 chrome/browser/BUILD.gn                       |  10 -
 .../identity_services_provider_android.cc     |   9 -
 .../services/IdentityServicesProvider.java    |  14 --
 ...onfirmImportSyncDataDialogCoordinator.java |   7 +-
 .../ui/ConfirmSyncDataStateMachine.java       |  16 +-
 .../signin/ui/SignOutDialogFragment.java      |  13 --
 .../signin/ui/SigninPromoController.java      |  15 +-
 .../AccountPickerDelegateImpl.java            |  18 --
 chrome/browser/sync/sync_service_factory.cc   |  12 +-
 .../strings/android_chrome_strings.grd        |  12 --
 .../signin/SystemAccountManagerDelegate.java  |  35 +---
 .../net/HttpNegotiateAuthenticator.java       |  88 +--------
 .../chromoting/base/OAuthTokenFetcher.java    |   2 -
 52 files changed, 48 insertions(+), 1209 deletions(-)

diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -3822,7 +3822,6 @@ generate_jni("chrome_jni_headers") {
     "java/src/org/chromium/chrome/browser/infobar/SavePasswordInfoBar.java",
     "java/src/org/chromium/chrome/browser/infobar/SearchGeolocationDisclosureInfoBar.java",
     "java/src/org/chromium/chrome/browser/infobar/SurveyInfoBar.java",
-    "java/src/org/chromium/chrome/browser/infobar/SyncErrorInfoBar.java",
     "java/src/org/chromium/chrome/browser/infobar/TranslateCompactInfoBar.java",
     "java/src/org/chromium/chrome/browser/infobar/UpdatePasswordInfoBar.java",
     "java/src/org/chromium/chrome/browser/init/NativeStartupBridge.java",
diff --git a/chrome/android/chrome_java_sources.gni b/chrome/android/chrome_java_sources.gni
--- a/chrome/android/chrome_java_sources.gni
+++ b/chrome/android/chrome_java_sources.gni
@@ -614,15 +614,12 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/firstrun/FirstRunPage.java",
   "java/src/org/chromium/chrome/browser/firstrun/FirstRunPageDelegate.java",
   "java/src/org/chromium/chrome/browser/firstrun/FirstRunPagerAdapter.java",
-  "java/src/org/chromium/chrome/browser/firstrun/FirstRunSignInProcessor.java",
   "java/src/org/chromium/chrome/browser/firstrun/FirstRunUtils.java",
   "java/src/org/chromium/chrome/browser/firstrun/FirstRunView.java",
-  "java/src/org/chromium/chrome/browser/firstrun/ForcedSigninProcessor.java",
   "java/src/org/chromium/chrome/browser/firstrun/FreIntentCreator.java",
   "java/src/org/chromium/chrome/browser/firstrun/LightweightFirstRunActivity.java",
   "java/src/org/chromium/chrome/browser/firstrun/PolicyLoadListener.java",
   "java/src/org/chromium/chrome/browser/firstrun/SkipTosDialogPolicyListener.java",
-  "java/src/org/chromium/chrome/browser/firstrun/SyncConsentFirstRunFragment.java",
   "java/src/org/chromium/chrome/browser/firstrun/TabbedModeFirstRunActivity.java",
   "java/src/org/chromium/chrome/browser/firstrun/ToSAndUMAFirstRunFragment.java",
   "java/src/org/chromium/chrome/browser/firstrun/TosAndUmaFirstRunFragmentWithEnterpriseSupport.java",
@@ -715,7 +712,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/infobar/SubPanelListener.java",
   "java/src/org/chromium/chrome/browser/infobar/SurveyInfoBar.java",
   "java/src/org/chromium/chrome/browser/infobar/SurveyInfoBarDelegate.java",
-  "java/src/org/chromium/chrome/browser/infobar/SyncErrorInfoBar.java",
   "java/src/org/chromium/chrome/browser/infobar/TextViewEllipsizerSafe.java",
   "java/src/org/chromium/chrome/browser/infobar/TranslateCompactInfoBar.java",
   "java/src/org/chromium/chrome/browser/infobar/UpdatePasswordInfoBar.java",
@@ -830,7 +826,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/ntp/RevampedIncognitoDescriptionView.java",
   "java/src/org/chromium/chrome/browser/ntp/SnapScrollHelper.java",
   "java/src/org/chromium/chrome/browser/ntp/TitleUtil.java",
-  "java/src/org/chromium/chrome/browser/ntp/cards/SignInPromo.java",
   "java/src/org/chromium/chrome/browser/ntp/cards/promo/enhanced_protection/EnhancedProtectionPromoController.java",
   "java/src/org/chromium/chrome/browser/ntp/cards/promo/enhanced_protection/EnhancedProtectionPromoUtils.java",
   "java/src/org/chromium/chrome/browser/ntp/search/SearchBoxChipDelegate.java",
@@ -913,8 +908,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/partnerbookmarks/PartnerBookmarksShim.java",
   "java/src/org/chromium/chrome/browser/partnercustomizations/PartnerBrowserCustomizations.java",
   "java/src/org/chromium/chrome/browser/password_manager/AccountChooserDialog.java",
-  "java/src/org/chromium/chrome/browser/password_manager/AutoSigninFirstRunDialog.java",
-  "java/src/org/chromium/chrome/browser/password_manager/AutoSigninSnackbarController.java",
   "java/src/org/chromium/chrome/browser/password_manager/Credential.java",
   "java/src/org/chromium/chrome/browser/password_manager/CredentialLeakDialogBridge.java",
   "java/src/org/chromium/chrome/browser/password_manager/GooglePasswordManagerUIProvider.java",
@@ -1056,16 +1049,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardMetrics.java",
   "java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardShareActivity.java",
   "java/src/org/chromium/chrome/browser/sharing/sms_fetcher/SmsFetcherMessageHandler.java",
-  "java/src/org/chromium/chrome/browser/signin/SigninBridge.java",
-  "java/src/org/chromium/chrome/browser/signin/SigninChecker.java",
-  "java/src/org/chromium/chrome/browser/signin/SigninCheckerProvider.java",
-  "java/src/org/chromium/chrome/browser/signin/SigninFirstRunFragment.java",
-  "java/src/org/chromium/chrome/browser/signin/SigninManagerImpl.java",
-  "java/src/org/chromium/chrome/browser/signin/SyncConsentActivity.java",
-  "java/src/org/chromium/chrome/browser/signin/SyncConsentActivityLauncherImpl.java",
-  "java/src/org/chromium/chrome/browser/signin/SyncConsentFragment.java",
-  "java/src/org/chromium/chrome/browser/signin/SyncConsentFragmentBase.java",
-  "java/src/org/chromium/chrome/browser/signin/SyncPromoView.java",
   "java/src/org/chromium/chrome/browser/site_settings/ChromeSiteSettingsDelegate.java",
   "java/src/org/chromium/chrome/browser/site_settings/CookieControlsServiceBridge.java",
   "java/src/org/chromium/chrome/browser/site_settings/ManageSpaceActivity.java",
@@ -1102,29 +1085,6 @@ chrome_java_sources = [
   "java/src/org/chromium/chrome/browser/survey/ChromeSurveyController.java",
   "java/src/org/chromium/chrome/browser/survey/SurveyController.java",
   "java/src/org/chromium/chrome/browser/survey/SurveyHttpClientBridge.java",
-  "java/src/org/chromium/chrome/browser/sync/AndroidSyncSettings.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncContentResolverDelegate.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncController.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncErrorNotifier.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncService.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncServiceImpl.java",
-  "java/src/org/chromium/chrome/browser/sync/SyncUserDataWiper.java",
-  "java/src/org/chromium/chrome/browser/sync/TrustedVaultClient.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/AccountManagementFragment.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/ClearDataProgressDialog.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/GoogleServicesSettings.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/ManageSyncSettings.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/SignInPreference.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/SyncErrorCardPreference.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/SyncPromoPreference.java",
-  "java/src/org/chromium/chrome/browser/sync/settings/SyncSettingsUtils.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/PassphraseActivity.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/PassphraseCreationDialogFragment.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/PassphraseDialogFragment.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/PassphraseTypeDialogFragment.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/SyncErrorMessage.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/SyncErrorPromptUtils.java",
-  "java/src/org/chromium/chrome/browser/sync/ui/SyncTrustedVaultProxyActivity.java",
   "java/src/org/chromium/chrome/browser/tab/AccessibilityVisibilityHandler.java",
   "java/src/org/chromium/chrome/browser/tab/AuthenticatorNavigationInterceptorTabHelper.java",
   "java/src/org/chromium/chrome/browser/tab/AutofillSessionLifetimeController.java",
diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/PriceTrackingUtilities.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/PriceTrackingUtilities.java
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/PriceTrackingUtilities.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/PriceTrackingUtilities.java
@@ -14,7 +14,6 @@ import org.chromium.chrome.browser.price_tracking.PriceDropNotificationManager;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
 import org.chromium.chrome.browser.signin.services.UnifiedConsentServiceBridge;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tabmodel.TabModel;
 import org.chromium.components.signin.identitymanager.ConsentLevel;
 import org.chromium.components.sync.ModelType;
@@ -188,9 +187,7 @@ public class PriceTrackingUtilities {
     }
 
     private static boolean isOpenTabsSyncEnabled() {
-        SyncService syncService = SyncService.get();
-        return syncService != null && syncService.isSyncRequested()
-                && syncService.getActiveDataTypes().contains(ModelType.SESSIONS);
+        return false;
     }
 
     private static boolean isAnonymizedUrlDataCollectionEnabled() {
diff --git a/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceCoordinator.java b/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceCoordinator.java
--- a/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceCoordinator.java
+++ b/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceCoordinator.java
@@ -953,10 +953,7 @@ public class FeedSurfaceCoordinator implements FeedSurfaceProvider, FeedBubbleDe
 
     @Override
     public boolean isSignedIn() {
-        return IdentityServicesProvider.get()
-                .getSigninManager(Profile.getLastUsedRegularProfile())
-                .getIdentityManager()
-                .hasPrimaryAccount(ConsentLevel.SYNC);
+        return false;
     }
 
     @Override
diff --git a/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceMediator.java b/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceMediator.java
--- a/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceMediator.java
+++ b/chrome/android/feed/core/java/src/org/chromium/chrome/browser/feed/FeedSurfaceMediator.java
@@ -42,7 +42,6 @@ import org.chromium.chrome.browser.native_page.NativePageNavigationDelegate;
 import org.chromium.chrome.browser.ntp.NewTabPageLaunchOrigin;
 import org.chromium.chrome.browser.ntp.NewTabPageLayout;
 import org.chromium.chrome.browser.ntp.SnapScrollHelper;
-import org.chromium.chrome.browser.ntp.cards.SignInPromo;
 import org.chromium.chrome.browser.ntp.cards.promo.enhanced_protection.EnhancedProtectionPromoController.EnhancedProtectionPromoStateListener;
 import org.chromium.chrome.browser.ntp.snippets.OnSectionHeaderSelectedListener;
 import org.chromium.chrome.browser.ntp.snippets.SectionHeaderListProperties;
@@ -53,10 +52,6 @@ import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.chrome.browser.preferences.PrefChangeRegistrar;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.search_engines.TemplateUrlServiceFactory;
-import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.services.SigninManager;
-import org.chromium.chrome.browser.signin.ui.PersonalizedSigninPromoView;
-import org.chromium.chrome.browser.signin.ui.SigninPromoController;
 import org.chromium.chrome.browser.suggestions.SuggestionsMetrics;
 import org.chromium.chrome.browser.xsurface.FeedLaunchReliabilityLogger;
 import org.chromium.chrome.features.start_surface.StartSurfaceConfiguration;
@@ -201,7 +196,6 @@ public class FeedSurfaceMediator
     /**
      * The {@link SignInPromo} for the Feed.
      * TODO(huayinz): Update content and visibility through a ModelChangeProcessor.
-     */
     private class FeedSignInPromo extends SignInPromo {
         FeedSignInPromo(SigninManager signinManager) {
             super(signinManager);
@@ -222,7 +216,7 @@ public class FeedSurfaceMediator
             maybeUpdateSignInPromo();
         }
 
-        /** Update the content displayed in {@link PersonalizedSigninPromoView}. */
+        ** Update the content displayed in {@link PersonalizedSigninPromoView}. *
         private void maybeUpdateSignInPromo() {
             // Only call #setupPromoViewFromCache() if SignInPromo is visible to avoid potentially
             // blocking the UI thread for several seconds if the accounts cache is not populated
@@ -244,7 +238,7 @@ public class FeedSurfaceMediator
             super.onDismissPromo();
             mCoordinator.updateHeaderViews(false, null);
         }
-    }
+    } */
 
     @VisibleForTesting
     static void setPrefForTest(PrefChangeRegistrar prefChangeRegistrar, PrefService prefService) {
@@ -259,7 +253,6 @@ public class FeedSurfaceMediator
     private final Context mContext;
     private final @Nullable SnapScrollHelper mSnapScrollHelper;
     private final PrefChangeRegistrar mPrefChangeRegistrar;
-    private final SigninManager mSigninManager;
     private final PropertyModel mSectionHeaderModel;
 
     private final NativePageNavigationDelegate mPageNavigationDelegate;
@@ -268,7 +261,6 @@ public class FeedSurfaceMediator
     private final ObserverList<ScrollListener> mScrollListeners = new ObserverList<>();
     private ContentChangedListener mStreamContentChangedListener;
     private MemoryPressureCallback mMemoryPressureCallback;
-    private @Nullable SignInPromo mSignInPromo;
     private RecyclerViewAnimationFinishDetector mRecyclerViewAnimationFinishDetector =
             new RecyclerViewAnimationFinishDetector();
     private @Nullable View mEnhancedProtectionPromo;
@@ -320,8 +312,6 @@ public class FeedSurfaceMediator
         mCoordinator = coordinator;
         mContext = context;
         mSnapScrollHelper = snapScrollHelper;
-        mSigninManager = IdentityServicesProvider.get().getSigninManager(
-                Profile.getLastUsedRegularProfile());
         mPageNavigationDelegate = pageNavigationDelegate;
 
         if (sTestPrefChangeRegistar != null) {
@@ -481,7 +471,6 @@ public class FeedSurfaceMediator
             mFeedMenuModel = buildMenuItems();
 
             mCoordinator.initializeBubbleTriggering();
-            mSigninManager.getIdentityManager().addObserver(this);
 
             mSectionHeaderModel.set(
                     SectionHeaderListProperties.MENU_MODEL_LIST_KEY, mFeedMenuModel);
@@ -533,8 +522,6 @@ public class FeedSurfaceMediator
         };
         mCoordinator.getRecyclerView().addOnScrollListener(mStreamScrollListener);
 
-        initStreamHeaderViews();
-
         mMemoryPressureCallback =
                 pressure -> mCoordinator.getRecyclerView().getRecycledViewPool().clear();
         MemoryPressureListener.addCallback(mMemoryPressureCallback);
@@ -700,47 +687,6 @@ public class FeedSurfaceMediator
         }
     }
 
-    private void initStreamHeaderViews() {
-        boolean signInPromoVisible = createSignInPromoIfNeeded();
-        mEnhancedProtectionPromo = null;
-        if (!signInPromoVisible) {
-            mEnhancedProtectionPromo = createEnhancedProtectionPromoIfNeeded();
-        }
-        // We are not going to show two promos at the same time.
-        mCoordinator.updateHeaderViews(signInPromoVisible, mEnhancedProtectionPromo);
-    }
-
-    /**
-     * Create and setup the SignInPromo if necessary.
-     * @return Whether the SignPromo should be visible.
-     */
-    private boolean createSignInPromoIfNeeded() {
-        SigninPromoController.resetNTPSyncPromoLimitsIfHiddenForTooLong();
-        if (!SignInPromo.shouldCreatePromo()
-                || !SigninPromoController.canShowSyncPromo(
-                        SigninAccessPoint.NTP_CONTENT_SUGGESTIONS)) {
-            return false;
-        }
-        if (mSignInPromo == null) {
-            mSignInPromo = new FeedSignInPromo(mSigninManager);
-            mSignInPromo.setCanShowPersonalizedSuggestions(isSuggestionsVisible());
-        }
-        return mSignInPromo.isVisible();
-    }
-
-    private View createEnhancedProtectionPromoIfNeeded() {
-        if (mCoordinator.getEnhancedProtectionPromoController() == null) return null;
-
-        View enhancedProtectionPromoView =
-                mCoordinator.getEnhancedProtectionPromoController().getPromoView();
-        if (enhancedProtectionPromoView != null) {
-            mCoordinator.getEnhancedProtectionPromoController()
-                    .setEnhancedProtectionPromoStateListener(this);
-            updatePromoCardPadding(enhancedProtectionPromoView);
-        }
-        return enhancedProtectionPromoView;
-    }
-
     private void updatePromoCardPadding(View promoCard) {
         MarginLayoutParams layoutParams = promoCard.getLayoutParams() == null
                 ? new MarginLayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT)
@@ -763,11 +709,6 @@ public class FeedSurfaceMediator
         MemoryPressureListener.removeCallback(mMemoryPressureCallback);
         mMemoryPressureCallback = null;
 
-        if (mSignInPromo != null) {
-            mSignInPromo.destroy();
-            mSignInPromo = null;
-        }
-
         unbindStream();
         for (Stream s : mTabToStreamMap.values()) {
             s.removeOnContentChangedListener(mStreamContentChangedListener);
@@ -778,7 +719,6 @@ public class FeedSurfaceMediator
 
         mPrefChangeRegistrar.removeObserver(Pref.ARTICLES_LIST_VISIBLE);
         TemplateUrlServiceFactory.get().removeObserver(this);
-        mSigninManager.getIdentityManager().removeObserver(this);
 
         PropertyListModel<PropertyModel, PropertyKey> headerList =
                 mSectionHeaderModel.get(SectionHeaderListProperties.SECTION_HEADERS_KEY);
@@ -863,9 +803,6 @@ public class FeedSurfaceMediator
         // Update toggleswitch item, which is last item in list.
         mSectionHeaderModel.set(SectionHeaderListProperties.MENU_MODEL_LIST_KEY, buildMenuItems());
 
-        if (mSignInPromo != null) {
-            mSignInPromo.setCanShowPersonalizedSuggestions(suggestionsVisible);
-        }
         if (mEnhancedProtectionPromo != null) {
             updatePromoCardPadding(mEnhancedProtectionPromo);
         }
@@ -898,7 +835,7 @@ public class FeedSurfaceMediator
     }
 
     private boolean isSignedIn() {
-        return mSigninManager.getIdentityManager().hasPrimaryAccount(ConsentLevel.SYNC);
+        return false;
     }
 
     /**
@@ -946,35 +883,6 @@ public class FeedSurfaceMediator
 
     private ModelList buildMenuItems() {
         ModelList itemList = new ModelList();
-        int iconId = 0;
-        if (isSignedIn()) {
-            if (ChromeFeatureList.isEnabled(ChromeFeatureList.WEB_FEED)) {
-                itemList.add(buildMenuListItem(
-                        R.string.ntp_manage_feed, R.id.ntp_feed_header_menu_item_manage, iconId));
-            } else {
-                itemList.add(buildMenuListItem(R.string.ntp_manage_my_activity,
-                        R.id.ntp_feed_header_menu_item_activity, iconId));
-                itemList.add(buildMenuListItem(R.string.ntp_manage_interests,
-                        R.id.ntp_feed_header_menu_item_interest, iconId));
-                if (FeedServiceBridge.isAutoplayEnabled()) {
-                    itemList.add(buildMenuListItem(R.string.ntp_manage_autoplay,
-                            R.id.ntp_feed_header_menu_item_autoplay, iconId));
-                }
-                if (ChromeFeatureList.isEnabled(ChromeFeatureList.INTEREST_FEED_V2_HEARTS)) {
-                    itemList.add(buildMenuListItem(R.string.ntp_manage_reactions,
-                            R.id.ntp_feed_header_menu_item_reactions, iconId));
-                }
-            }
-        } else if (FeedServiceBridge.isAutoplayEnabled()) {
-            // Show manage autoplay if not signed in.
-            itemList.add(buildMenuListItem(
-                    R.string.ntp_manage_autoplay, R.id.ntp_feed_header_menu_item_autoplay, iconId));
-        }
-        itemList.add(buildMenuListItem(
-                R.string.learn_more, R.id.ntp_feed_header_menu_item_learn, iconId));
-        itemList.add(getMenuToggleSwitch(
-                mSectionHeaderModel.get(SectionHeaderListProperties.IS_SECTION_ENABLED_KEY),
-                iconId));
         return itemList;
     }
 
@@ -1176,11 +1084,6 @@ public class FeedSurfaceMediator
         updateSectionHeader();
     }
 
-    @VisibleForTesting
-    public SignInPromo getSignInPromoForTesting() {
-        return mSignInPromo;
-    }
-
     public void manualRefresh(Callback<Boolean> callback) {
         if (mCurrentStream != null) {
             mCurrentStream.triggerRefresh(callback);
diff --git a/chrome/android/java/AndroidManifest.xml b/chrome/android/java/AndroidManifest.xml
--- a/chrome/android/java/AndroidManifest.xml
+++ b/chrome/android/java/AndroidManifest.xml
@@ -67,24 +67,18 @@ by a child template that "extends" this file.
     <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
     <uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" />
     <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
-    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>
     <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS"/>
     <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>
     <uses-permission android:name="android.permission.NFC"/>
     <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS"/>
-    <uses-permission android:name="android.permission.READ_SYNC_STATS"/>
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
     <uses-permission android:name="android.permission.RECORD_AUDIO"/>
-    <uses-permission android:name="android.permission.USE_CREDENTIALS"/>
     <uses-permission-sdk-23 android:name="android.permission.USE_BIOMETRIC"/>
     <uses-permission-sdk-23 android:name="android.permission.USE_FINGERPRINT"/>
     <uses-permission android:name="android.permission.VIBRATE"/>
     <uses-permission android:name="android.permission.WAKE_LOCK"/>
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
     {% set enable_vr = enable_vr|default(0) %}
     {% if enable_vr == "true" %}
     <!-- Indicates use of Android's VR-mode, available only on Android N+. -->
@@ -124,8 +118,6 @@ by a child template that "extends" this file.
     <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
     <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT"/>
 
-    <uses-permission android:name="com.google.android.apps.now.CURRENT_ACCOUNT_ACCESS" />
-
     {% block extra_uses_permissions %}
     {% endblock %}
 
diff --git a/chrome/android/java/res/xml/main_preferences.xml b/chrome/android/java/res/xml/main_preferences.xml
--- a/chrome/android/java/res/xml/main_preferences.xml
+++ b/chrome/android/java/res/xml/main_preferences.xml
@@ -7,29 +7,11 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:orderingFromXml="false">
 
-    <org.chromium.chrome.browser.sync.settings.SyncPromoPreference
-        android:key="sync_promo"
-        android:order="0"/>
     <PreferenceCategory
         android:key="account_and_google_services_section"
         android:order="1"
-        android:title="@string/prefs_section_account_and_google_services"/>
-    <org.chromium.chrome.browser.sync.settings.SignInPreference
-        android:key="sign_in"
-        android:order="2"
-        android:title="@string/sign_in_to_chrome"/>
-    <org.chromium.components.browser_ui.settings.ChromeBasePreference
-        android:key="manage_sync"
-        android:order="3"
-        android:layout="@layout/account_management_account_row"
-        android:title="@string/sync_category_title"/>
-    <org.chromium.components.browser_ui.settings.ChromeBasePreference
-        android:key="google_services"
-        android:order="4"
-        android:layout="@layout/account_management_account_row"
-        android:title="@string/prefs_google_services"
-        android:icon="@drawable/ic_google_services_48dp"
-        android:fragment="org.chromium.chrome.browser.sync.settings.GoogleServicesSettings"/>
+        android:title="@string/prefs_section_account_and_google_services"
+        app:isPreferenceVisible="false" />
 
     <PreferenceCategory
         android:key="basics_section"
@@ -99,11 +81,6 @@
         android:key="languages"
         android:order="19"
         android:title="@string/language_settings"/>
-    <org.chromium.components.browser_ui.settings.ChromeBasePreference
-        android:fragment="org.chromium.chrome.browser.datareduction.settings.DataReductionPreferenceFragment"
-        android:key="data_reduction"
-        android:order="20"
-        android:title="@string/data_reduction_title_lite_mode"/>
     <org.chromium.components.browser_ui.settings.ChromeBasePreference
         android:fragment="org.chromium.chrome.browser.download.settings.DownloadSettings"
         android:key="downloads"
diff --git a/chrome/android/java/res/xml/privacy_preferences.xml b/chrome/android/java/res/xml/privacy_preferences.xml
--- a/chrome/android/java/res/xml/privacy_preferences.xml
+++ b/chrome/android/java/res/xml/privacy_preferences.xml
@@ -45,8 +45,4 @@
         android:key="privacy_sandbox"
         android:title="@string/prefs_privacy_sandbox"
         android:fragment="org.chromium.chrome.browser.privacy_sandbox.PrivacySandboxSettingsFragment"/>
-    <org.chromium.components.browser_ui.settings.TextMessagePreference
-        android:key="sync_and_services_link"
-        android:summary="@string/privacy_sync_and_services_link_legacy"
-        app:allowDividerBelow="false"/>
 </PreferenceScreen>
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java b/chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/AppHooks.java
@@ -36,7 +36,6 @@ import org.chromium.chrome.browser.policy.PolicyAuditor;
 import org.chromium.chrome.browser.rlz.RevenueStats;
 import org.chromium.chrome.browser.signin.ui.GoogleActivityController;
 import org.chromium.chrome.browser.survey.SurveyController;
-import org.chromium.chrome.browser.sync.TrustedVaultClient;
 import org.chromium.chrome.browser.tab.Tab;
 import org.chromium.chrome.browser.usage_stats.DigitalWellbeingClient;
 import org.chromium.chrome.browser.webapps.GooglePlayWebApkInstallDelegate;
@@ -288,13 +287,6 @@ public abstract class AppHooks {
         return ConnectionResult.SERVICE_VERSION_UPDATE_REQUIRED;
     }
 
-    /**
-     * Returns a new {@link TrustedVaultClient.Backend} instance.
-     */
-    public TrustedVaultClient.Backend createSyncTrustedVaultClientBackend() {
-        return new TrustedVaultClient.EmptyBackend();
-    }
-
     /**
      * Returns a new {@link SurfaceRenderer} if the xsurface implementation is included in the
      * apk. Otherwise null is returned.
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeTabbedActivity.java
@@ -87,7 +87,6 @@ import org.chromium.chrome.browser.download.DownloadOpenSource;
 import org.chromium.chrome.browser.download.DownloadUtils;
 import org.chromium.chrome.browser.feature_engagement.TrackerFactory;
 import org.chromium.chrome.browser.feed.FeedSurfaceTracker;
-import org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor;
 import org.chromium.chrome.browser.flags.ActivityType;
 import org.chromium.chrome.browser.flags.CachedFeatureFlags;
 import org.chromium.chrome.browser.flags.ChromeFeatureList;
@@ -103,7 +102,6 @@ import org.chromium.chrome.browser.incognito.IncognitoTabLauncher;
 import org.chromium.chrome.browser.incognito.IncognitoTabSnapshotController;
 import org.chromium.chrome.browser.incognito.IncognitoUtils;
 import org.chromium.chrome.browser.infobar.DataReductionPromoInfoBar;
-import org.chromium.chrome.browser.infobar.SyncErrorInfoBar;
 import org.chromium.chrome.browser.layouts.LayoutStateProvider;
 import org.chromium.chrome.browser.lifecycle.ActivityLifecycleDispatcher;
 import org.chromium.chrome.browser.locale.LocaleManager;
@@ -645,9 +643,6 @@ public class ChromeTabbedActivity extends ChromeActivity<ChromeActivityComponent
     }
 
     private void refreshSignIn() {
-        try (TraceEvent e = TraceEvent.scoped("ChromeTabbedActivity.refreshSignIn")) {
-            FirstRunSignInProcessor.start(this);
-        }
     }
 
     private void setupCompositorContentPreNativeForPhone() {
@@ -1811,15 +1806,6 @@ public class ChromeTabbedActivity extends ChromeActivity<ChromeActivityComponent
                 if (!navigation.hasCommitted() || !navigation.isInPrimaryMainFrame()) {
                     return;
                 }
-                DataReductionPromoInfoBar.maybeLaunchPromoInfoBar(ChromeTabbedActivity.this,
-                        tab.getWebContents(), navigation.getUrl(), tab.isShowingErrorPage(),
-                        navigation.isFragmentNavigation(), navigation.httpStatusCode());
-                if (SyncErrorPromptUtils.isMessageUiEnabled()) {
-                    SyncErrorMessage.maybeShowMessageUi(
-                            getWindowAndroid(), ChromeTabbedActivity.this);
-                } else {
-                    SyncErrorInfoBar.maybeLaunchSyncErrorInfoBar(tab.getWebContents());
-                }
                 SendTabToSelfAndroidBridge.updateActiveWebContents(tab.getWebContents());
             }
         };
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
@@ -108,7 +108,6 @@ import org.chromium.chrome.browser.download.DownloadUtils;
 import org.chromium.chrome.browser.download.items.OfflineContentAggregatorNotificationBridgeUiFactory;
 import org.chromium.chrome.browser.feature_engagement.TrackerFactory;
 import org.chromium.chrome.browser.feedback.HelpAndFeedbackLauncherImpl;
-import org.chromium.chrome.browser.firstrun.ForcedSigninProcessor;
 import org.chromium.chrome.browser.flags.ActivityType;
 import org.chromium.chrome.browser.flags.CachedFeatureFlags;
 import org.chromium.chrome.browser.flags.ChromeFeatureList;
@@ -155,7 +154,6 @@ import org.chromium.chrome.browser.share.ShareDelegate;
 import org.chromium.chrome.browser.share.ShareDelegateImpl;
 import org.chromium.chrome.browser.share.ShareDelegateSupplier;
 import org.chromium.chrome.browser.share.ShareRegistrationCoordinator;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tab.AccessibilityVisibilityHandler;
 import org.chromium.chrome.browser.tab.RequestDesktopUtils;
 import org.chromium.chrome.browser.tab.Tab;
@@ -214,8 +212,6 @@ import org.chromium.components.page_info.PageInfoController.OpenedFromSource;
 import org.chromium.components.policy.CombinedPolicyProvider;
 import org.chromium.components.policy.CombinedPolicyProvider.PolicyChangeListener;
 import org.chromium.components.profile_metrics.BrowserProfileType;
-import org.chromium.components.sync.ModelType;
-import org.chromium.components.sync.PassphraseType;
 import org.chromium.components.user_prefs.UserPrefs;
 import org.chromium.components.webapk.lib.client.WebApkValidator;
 import org.chromium.components.webapps.AddToHomescreenCoordinator;
@@ -307,9 +303,6 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
     private boolean mRemoveWindowBackgroundDone;
     protected AccessibilityVisibilityHandler mAccessibilityVisibilityHandler;
 
-    // Observes when sync becomes ready to create the mContextReporter.
-    private SyncService.SyncStateChangedListener mSyncStateChangedListener;
-
     // The PictureInPictureController is initialized lazily https://crbug.com/729738.
     private PictureInPictureController mPictureInPictureController;
 
@@ -1067,60 +1060,6 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         return StatusBarColorController.UNDEFINED_STATUS_BAR_COLOR;
     }
 
-    private void createContextReporterIfNeeded() {
-        if (!mStarted) return; // Sync state reporting should work only in started state.
-        if (mContextReporter != null || getActivityTab() == null) return;
-
-        final SyncService syncService = SyncService.get();
-
-        if (syncService != null && syncService.isSyncingUrlsWithKeystorePassphrase()) {
-            ContextReporter.SelectionReporter controller =
-                    getContextualSearchManager() != null ? new ContextReporter.SelectionReporter() {
-                        @Override
-                        public void enable(Callback<GSAContextDisplaySelection> callback) {
-                            getContextualSearchManager().enableContextReporting(callback);
-                        }
-
-                        @Override
-                        public void disable() {
-                            getContextualSearchManager().disableContextReporting();
-                        }
-                    } : null;
-            mContextReporter = AppHooks.get().createGsaHelper().getContextReporter(
-                    getActivityTabProvider(), mTabModelSelectorSupplier, controller);
-
-            if (mSyncStateChangedListener != null) {
-                syncService.removeSyncStateChangedListener(mSyncStateChangedListener);
-                mSyncStateChangedListener = null;
-            }
-
-            return;
-        } else {
-            reportSyncStatus(syncService);
-        }
-
-        if (mSyncStateChangedListener == null && syncService != null) {
-            mSyncStateChangedListener = () -> createContextReporterIfNeeded();
-            syncService.addSyncStateChangedListener(mSyncStateChangedListener);
-        }
-    }
-
-    /**
-     * Records an appropriate status via UMA given the current sync status.
-     */
-    private static void reportSyncStatus(@Nullable SyncService syncService) {
-        if (syncService == null || !syncService.isEngineInitialized()) {
-            ContextReporter.reportStatus(ContextReporter.STATUS_SYNC_NOT_INITIALIZED);
-        } else if (!syncService.getActiveDataTypes().contains(ModelType.TYPED_URLS)) {
-            ContextReporter.reportStatus(ContextReporter.STATUS_SYNC_NOT_SYNCING_URLS);
-        } else if (syncService.getPassphraseType() != PassphraseType.KEYSTORE_PASSPHRASE
-                && syncService.getPassphraseType() != PassphraseType.TRUSTED_VAULT_PASSPHRASE) {
-            ContextReporter.reportStatus(ContextReporter.STATUS_SYNC_NOT_KEYSTORE_PASSPHRASE);
-        } else {
-            ContextReporter.reportStatus(ContextReporter.STATUS_SYNC_OTHER);
-        }
-    }
-
     @Override
     public void onResumeWithNative() {
         super.onResumeWithNative();
@@ -1223,14 +1162,6 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
         if (GSAState.getInstance(this).isGsaAvailable() && !SysUtils.isLowEndDevice()) {
             if (mGSAAccountChangeListener != null) mGSAAccountChangeListener.disconnect();
         }
-        if (mSyncStateChangedListener != null) {
-            SyncService syncService = SyncService.get();
-            if (syncService != null) {
-                syncService.removeSyncStateChangedListener(mSyncStateChangedListener);
-            }
-            mSyncStateChangedListener = null;
-        }
-        if (mContextReporter != null) mContextReporter.disable();
 
         super.onStopWithNative();
     }
@@ -1325,11 +1256,6 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
             FontSizePrefs.getInstance().recordUserFontPrefOnStartup();
         });
 
-        DeferredStartupHandler.getInstance().addDeferredTask(() -> {
-            if (isActivityFinishingOrDestroyed()) return;
-            ForcedSigninProcessor.checkCanSignIn(ChromeActivity.this);
-        });
-
         // GSA connection is not needed on low-end devices because Icing is disabled.
         if (!SysUtils.isLowEndDevice()) {
             if (isActivityFinishingOrDestroyed()) return;
@@ -1344,7 +1270,6 @@ public abstract class ChromeActivity<C extends ChromeActivityComponent>
                             GSAAccountChangeListener.create(AppHooks.get().createGsaHelper());
                 }
                 mGSAAccountChangeListener.connect();
-                createContextReporterIfNeeded();
             });
         }
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/autofill_assistant/AutofillAssistantPreferenceFragment.java b/chrome/android/java/src/org/chromium/chrome/browser/autofill_assistant/AutofillAssistantPreferenceFragment.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/autofill_assistant/AutofillAssistantPreferenceFragment.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/autofill_assistant/AutofillAssistantPreferenceFragment.java
@@ -19,7 +19,6 @@ import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.signin.services.UnifiedConsentServiceBridge;
-import org.chromium.chrome.browser.sync.settings.GoogleServicesSettings;
 import org.chromium.components.browser_ui.settings.ChromeSwitchPreference;
 import org.chromium.components.browser_ui.settings.SettingsLauncher;
 import org.chromium.components.browser_ui.settings.SettingsUtils;
@@ -51,7 +50,6 @@ public class AutofillAssistantPreferenceFragment extends PreferenceFragmentCompa
     private ChromeSwitchPreference mAutofillAssistantPreference;
     private ChromeSwitchPreference mProactiveHelpPreference;
     private ChromeSwitchPreference mAssistantVoiceSearchEnabledPref;
-    private Preference mGoogleServicesSettingsLink;
 
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
@@ -89,15 +87,6 @@ public class AutofillAssistantPreferenceFragment extends PreferenceFragmentCompa
             mProactiveHelpPreference.setVisible(false);
         }
 
-        mGoogleServicesSettingsLink = findPreference(PREF_GOOGLE_SERVICES_SETTINGS_LINK);
-        NoUnderlineClickableSpan linkSpan = new NoUnderlineClickableSpan(getResources(), view -> {
-            SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
-            settingsLauncher.launchSettingsActivity(requireContext(), GoogleServicesSettings.class);
-        });
-        mGoogleServicesSettingsLink.setSummary(
-                SpanApplier.applySpans(getString(R.string.prefs_proactive_help_sync_link),
-                        new SpanApplier.SpanInfo("<link>", "</link>", linkSpan)));
-
         PreferenceCategory assistantVoiceSearchCategory =
                 findPreference(PREF_ASSISTANT_VOICE_SEARCH_CATEGORY);
         mAssistantVoiceSearchEnabledPref =
@@ -165,7 +154,6 @@ public class AutofillAssistantPreferenceFragment extends PreferenceFragmentCompa
         }
         mProactiveHelpPreference.setEnabled(proactive_toggle_enabled);
         mProactiveHelpPreference.setChecked(proactive_toggle_enabled && proactive_help_on);
-        mGoogleServicesSettingsLink.setVisible(show_disclaimer);
 
         mAssistantVoiceSearchEnabledPref.setChecked(mSharedPreferencesManager.readBoolean(
                 ChromePreferenceKeys.ASSISTANT_VOICE_SEARCH_ENABLED, /* default= */ false));
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
@@ -27,8 +27,6 @@ import org.chromium.chrome.browser.feature_engagement.TrackerFactory;
 import org.chromium.chrome.browser.power_bookmarks.PowerBookmarkMeta;
 import org.chromium.chrome.browser.power_bookmarks.PowerBookmarkType;
 import org.chromium.chrome.browser.profiles.Profile;
-import org.chromium.chrome.browser.signin.ui.PersonalizedSigninPromoView;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.components.bookmarks.BookmarkId;
 import org.chromium.components.bookmarks.BookmarkType;
 import org.chromium.components.browser_ui.util.GlobalDiscardableReferencePool;
@@ -48,7 +46,7 @@ import java.util.List;
  * BaseAdapter for {@link RecyclerView}. It manages bookmarks to list there.
  */
 class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
-        implements BookmarkUIObserver, SyncService.SyncStateChangedListener {
+        implements BookmarkUIObserver {
     private static final int MAXIMUM_NUMBER_OF_SEARCH_RESULTS = 500;
     private static final String EMPTY_QUERY = null;
 
@@ -60,10 +58,8 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
     @ViewType
     private int mPromoHeaderType = ViewType.INVALID;
     private BookmarkDelegate mDelegate;
-    private BookmarkPromoHeader mPromoHeaderManager;
     private String mSearchText;
     private BookmarkId mCurrentFolder;
-    private SyncService mSyncService;
 
     // Keep track of the currently highlighted bookmark - used for "show in folder" action.
     private BookmarkId mHighlightedBookmark;
@@ -116,8 +112,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
 
     BookmarkItemsAdapter(Context context) {
         super(context);
-        mSyncService = SyncService.get();
-        mSyncService.addSyncStateChangedListener(this);
 
         mImageFetcher =
                 ImageFetcherFactory.createImageFetcher(ImageFetcherConfig.IN_MEMORY_WITH_DISK_CACHE,
@@ -213,9 +207,9 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
             case ViewType.PERSONALIZED_SIGNIN_PROMO:
                 // fall through
             case ViewType.PERSONALIZED_SYNC_PROMO:
-                return mPromoHeaderManager.createPersonalizedSigninAndSyncPromoHolder(parent);
+                return null;
             case ViewType.SYNC_PROMO:
-                return mPromoHeaderManager.createSyncPromoHolder(parent);
+                return null;
             case ViewType.SECTION_HEADER:
                 return createSectionHeaderViewHolder(parent, viewType);
             case ViewType.FOLDER:
@@ -243,10 +237,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
     public void onBindViewHolder(ViewHolder holder, int position) {
         if (holder.getItemViewType() == ViewType.PERSONALIZED_SIGNIN_PROMO
                 || holder.getItemViewType() == ViewType.PERSONALIZED_SYNC_PROMO) {
-            PersonalizedSigninPromoView view =
-                    (PersonalizedSigninPromoView) holder.itemView.findViewById(
-                            R.id.signin_promo_view_container);
-            mPromoHeaderManager.setUpSyncPromoView(view);
         } else if (holder.getItemViewType() == ViewType.SECTION_HEADER) {
             bindSectionHeaderViewHolder(holder.itemView, getItemByPosition(position));
         } else if (BookmarkListEntry.isBookmarkEntry(holder.getItemViewType())) {
@@ -304,7 +294,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
             case ViewType.PERSONALIZED_SIGNIN_PROMO:
                 // fall through
             case ViewType.PERSONALIZED_SYNC_PROMO:
-                mPromoHeaderManager.detachPersonalizePromoView();
                 break;
             default:
                 // Other view holders don't have special recycling code.
@@ -330,7 +319,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
             updateHeader(!topLevelFoldersShowing());
         };
 
-        mPromoHeaderManager = new BookmarkPromoHeader(mContext, promoHeaderChangeAction);
         populateTopLevelFoldersList();
 
         mElements = new ArrayList<>();
@@ -345,8 +333,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
         mDelegate.getModel().removeObserver(mBookmarkModelObserver);
         mDelegate.getSelectionDelegate().removeObserver(this);
         mDelegate = null;
-        mPromoHeaderManager.destroy();
-        mSyncService.removeSyncStateChangedListener(this);
     }
 
     @Override
@@ -437,18 +423,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
         setOrder(mElements);
     }
 
-    // SyncStateChangedListener implementation.
-    @Override
-    public void syncStateChanged() {
-        // If mDelegate is null, we will set the top level folders upon its initialization
-        // (see onBookmarkDelegateInitialized method above).
-        if (mDelegate == null) {
-            return;
-        }
-        mTopLevelFolders.clear();
-        populateTopLevelFoldersList();
-    }
-
     /**
      * Updates mPromoHeaderType. Makes sure that the 0th index of mElements is consistent with the
      * promo header. This 0th index is null iff there is a promo header.
@@ -468,23 +442,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
             return;
         } else if (currentUIState == BookmarkUIState.STATE_SEARCHING) {
             mPromoHeaderType = ViewType.INVALID;
-        } else {
-            switch (mPromoHeaderManager.getPromoState()) {
-                case BookmarkPromoHeader.PromoState.PROMO_NONE:
-                    mPromoHeaderType = ViewType.INVALID;
-                    break;
-                case BookmarkPromoHeader.PromoState.PROMO_SIGNIN_PERSONALIZED:
-                    mPromoHeaderType = ViewType.PERSONALIZED_SIGNIN_PROMO;
-                    break;
-                case BookmarkPromoHeader.PromoState.PROMO_SYNC_PERSONALIZED:
-                    mPromoHeaderType = ViewType.PERSONALIZED_SYNC_PROMO;
-                    break;
-                case BookmarkPromoHeader.PromoState.PROMO_SYNC:
-                    mPromoHeaderType = ViewType.SYNC_PROMO;
-                    break;
-                default:
-                    assert false : "Unexpected value for promo state!";
-            }
         }
 
         boolean willShowPromo = hasPromoHeader();
@@ -607,7 +564,6 @@ class BookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkListEntry>
 
     @VisibleForTesting
     void simulateSignInForTests() {
-        syncStateChanged();
         onFolderStateSet(mCurrentFolder);
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
@@ -19,20 +19,6 @@ import org.chromium.chrome.R;
 import org.chromium.chrome.browser.preferences.ChromePreferenceKeys;
 import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
 import org.chromium.chrome.browser.profiles.Profile;
-import org.chromium.chrome.browser.signin.SyncConsentActivityLauncherImpl;
-import org.chromium.chrome.browser.signin.SyncPromoView;
-import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.services.ProfileDataCache;
-import org.chromium.chrome.browser.signin.services.SigninManager;
-import org.chromium.chrome.browser.signin.services.SigninManager.SignInStateObserver;
-import org.chromium.chrome.browser.signin.ui.PersonalizedSigninPromoView;
-import org.chromium.chrome.browser.signin.ui.SigninPromoController;
-import org.chromium.chrome.browser.sync.SyncService;
-import org.chromium.components.signin.AccountManagerFacade;
-import org.chromium.components.signin.AccountManagerFacadeProvider;
-import org.chromium.components.signin.AccountsChangeObserver;
-import org.chromium.components.signin.identitymanager.ConsentLevel;
-import org.chromium.components.signin.metrics.SigninAccessPoint;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -41,8 +27,7 @@ import java.lang.annotation.RetentionPolicy;
  * Class that manages all the logic and UI behind the signin promo header in the bookmark
  * content UI. The header is shown only on certain situations, (e.g., not signed in).
  */
-class BookmarkPromoHeader implements SyncService.SyncStateChangedListener, SignInStateObserver,
-                                     ProfileDataCache.Observer, AccountsChangeObserver {
+class BookmarkPromoHeader {
     /**
      * Specifies the various states in which the Bookmarks promo can be.
      */
@@ -62,14 +47,9 @@ class BookmarkPromoHeader implements SyncService.SyncStateChangedListener, SignI
     private static @Nullable @PromoState Integer sPromoStateForTests;
 
     private final Context mContext;
-    private final SigninManager mSignInManager;
-    private final AccountManagerFacade mAccountManagerFacade;
     private final Runnable mPromoHeaderChangeAction;
 
-    private @Nullable ProfileDataCache mProfileDataCache;
-    private final @Nullable SigninPromoController mSigninPromoController;
     private @PromoState int mPromoState = PromoState.PROMO_NONE;
-    private final @Nullable SyncService mSyncService;
 
     /**
      * Initializes the class. Note that this will start listening to signin related events and
@@ -78,42 +58,12 @@ class BookmarkPromoHeader implements SyncService.SyncStateChangedListener, SignI
     BookmarkPromoHeader(Context context, Runnable promoHeaderChangeAction) {
         mContext = context;
         mPromoHeaderChangeAction = promoHeaderChangeAction;
-
-        mSyncService = SyncService.get();
-        if (mSyncService != null) mSyncService.addSyncStateChangedListener(this);
-
-        mSignInManager = IdentityServicesProvider.get().getSigninManager(
-                Profile.getLastUsedRegularProfile());
-        mSignInManager.addSignInStateObserver(this);
-
-        mAccountManagerFacade = AccountManagerFacadeProvider.getInstance();
-
-        if (SigninPromoController.canShowSyncPromo(SigninAccessPoint.BOOKMARK_MANAGER)) {
-            mProfileDataCache = ProfileDataCache.createWithDefaultImageSizeAndNoBadge(mContext);
-            mProfileDataCache.addObserver(this);
-            mSigninPromoController = new SigninPromoController(
-                    SigninAccessPoint.BOOKMARK_MANAGER, SyncConsentActivityLauncherImpl.get());
-            mAccountManagerFacade.addObserver(this);
-        } else {
-            mProfileDataCache = null;
-            mSigninPromoController = null;
-        }
-        updatePromoState();
     }
 
     /**
      * Clean ups the class. Must be called once done using this class.
      */
     void destroy() {
-        if (mSyncService != null) mSyncService.removeSyncStateChangedListener(this);
-
-        if (mSigninPromoController != null) {
-            mAccountManagerFacade.removeObserver(this);
-            mProfileDataCache.removeObserver(this);
-            mSigninPromoController.onPromoDestroyed();
-        }
-
-        mSignInManager.removeSignInStateObserver(this);
     }
 
     /**
@@ -124,58 +74,11 @@ class BookmarkPromoHeader implements SyncService.SyncStateChangedListener, SignI
         return mPromoState;
     }
 
-    /**
-     * @return Personalized signin promo header {@link ViewHolder} instance that can be used with
-     *         {@link RecyclerView}.
-     */
-    ViewHolder createPersonalizedSigninAndSyncPromoHolder(ViewGroup parent) {
-        View view = LayoutInflater.from(mContext).inflate(
-                R.layout.personalized_signin_promo_view_bookmarks, parent, false);
-
-        // ViewHolder is abstract and it cannot be instantiated directly.
-        return new ViewHolder(view) {};
-    }
-
-    /**
-     * @return Sync promo header {@link ViewHolder} instance that can be used with
-     *         {@link RecyclerView}.
-     */
-    ViewHolder createSyncPromoHolder(ViewGroup parent) {
-        SyncPromoView view = SyncPromoView.create(parent, SigninAccessPoint.BOOKMARK_MANAGER);
-
-        // ViewHolder is abstract and it cannot be instantiated directly.
-        return new ViewHolder(view) {};
-    }
-
-    /**
-     * Sets up the sync promo view.
-     */
-    void setUpSyncPromoView(PersonalizedSigninPromoView view) {
-        mSigninPromoController.setUpSyncPromoView(
-                mProfileDataCache, view, this::setPersonalizedSigninPromoDeclined);
-    }
-
-    /**
-     * Detaches the previously configured {@link PersonalizedSigninPromoView}.
-     */
-    void detachPersonalizePromoView() {
-        if (mSigninPromoController != null) mSigninPromoController.detach();
-    }
-
-    /**
-     * Saves that the personalized signin promo was declined and updates the UI.
-     */
-    private void setPersonalizedSigninPromoDeclined() {
-        mPromoState = calculatePromoState();
-        triggerPromoUpdate();
-    }
-
     /**
      * @return Whether the personalized signin promo should be shown to user.
      */
     private boolean shouldShowBookmarkSigninPromo() {
-        return mSignInManager.isSignInAllowed()
-                && SigninPromoController.canShowSyncPromo(SigninAccessPoint.BOOKMARK_MANAGER);
+        return false;
     }
 
     private @PromoState int calculatePromoState() {
@@ -183,89 +86,10 @@ class BookmarkPromoHeader implements SyncService.SyncStateChangedListener, SignI
             return sPromoStateForTests;
         }
 
-        if (mSyncService == null) {
-            // |mSyncService| will remain null until the next browser startup, so no sense in
-            // offering any promo.
-            return PromoState.PROMO_NONE;
-        }
-
-        if (!mSyncService.isSyncAllowedByPlatform()) {
-            return PromoState.PROMO_NONE;
-        }
-
-        if (!mSignInManager.getIdentityManager().hasPrimaryAccount(ConsentLevel.SYNC)) {
-            if (!shouldShowBookmarkSigninPromo()) {
-                return PromoState.PROMO_NONE;
-            }
-
-            return mSignInManager.getIdentityManager().hasPrimaryAccount(ConsentLevel.SIGNIN)
-                    ? PromoState.PROMO_SYNC_PERSONALIZED
-                    : PromoState.PROMO_SIGNIN_PERSONALIZED;
-        }
-
-        boolean impressionLimitNotReached =
-                SharedPreferencesManager.getInstance().readInt(
-                        ChromePreferenceKeys.SIGNIN_AND_SYNC_PROMO_SHOW_COUNT)
-                < MAX_SIGNIN_AND_SYNC_PROMO_SHOW_COUNT;
-        if (!mSyncService.isSyncRequested() && impressionLimitNotReached) {
-            return PromoState.PROMO_SYNC;
-        }
         return PromoState.PROMO_NONE;
     }
 
-    private void updatePromoState() {
-        final @PromoState int newState = calculatePromoState();
-        if (newState == mPromoState) return;
-
-        // PROMO_SYNC state and it's impression counts is not tracked by SigninPromoController.
-        final boolean hasSyncPromoStateChangedtoShown =
-                (mPromoState == PromoState.PROMO_NONE || mPromoState == PromoState.PROMO_SYNC)
-                && (newState == PromoState.PROMO_SIGNIN_PERSONALIZED
-                        || newState == PromoState.PROMO_SYNC_PERSONALIZED);
-        if (mSigninPromoController != null && hasSyncPromoStateChangedtoShown) {
-            mSigninPromoController.increasePromoShowCount();
-        }
-        if (newState == PromoState.PROMO_SYNC) {
-            SharedPreferencesManager.getInstance().incrementInt(
-                    ChromePreferenceKeys.SIGNIN_AND_SYNC_PROMO_SHOW_COUNT);
-        }
-        mPromoState = newState;
-    }
-
-    // SyncService.SyncStateChangedListener implementation.
-    @Override
-    public void syncStateChanged() {
-        updatePromoState();
-        triggerPromoUpdate();
-    }
-
-    // SignInStateObserver implementation.
-    @Override
-    public void onSignedIn() {
-        updatePromoState();
-        triggerPromoUpdate();
-    }
-
-    @Override
-    public void onSignedOut() {
-        updatePromoState();
-        triggerPromoUpdate();
-    }
-
-    // ProfileDataCache.Observer implementation.
-    @Override
-    public void onProfileDataUpdated(String accountEmail) {
-        triggerPromoUpdate();
-    }
-
-    // AccountsChangeObserver implementation.
-    @Override
-    public void onAccountsChanged() {
-        triggerPromoUpdate();
-    }
-
     private void triggerPromoUpdate() {
-        detachPersonalizePromoView();
         mPromoHeaderChangeAction.run();
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragmentBasic.java b/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragmentBasic.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragmentBasic.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/browsing_data/ClearBrowsingDataFragmentBasic.java
@@ -24,7 +24,6 @@ import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.search_engines.TemplateUrlServiceFactory;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tab.TabLaunchType;
 import org.chromium.chrome.browser.tabmodel.document.TabDelegate;
 import org.chromium.components.browser_ui.settings.ClickableSpansTextMessagePreference;
@@ -207,9 +206,7 @@ public class ClearBrowsingDataFragmentBasic extends ClearBrowsingDataFragment {
     }
 
     private boolean isHistorySyncEnabled() {
-        SyncService syncService = SyncService.get();
-        return syncService != null && syncService.isSyncRequested()
-                && syncService.getActiveDataTypes().contains(ModelType.HISTORY_DELETE_DIRECTIVES);
+        return false;
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/contextualsearch/ContextualSearchUma.java b/chrome/android/java/src/org/chromium/chrome/browser/contextualsearch/ContextualSearchUma.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/contextualsearch/ContextualSearchUma.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/contextualsearch/ContextualSearchUma.java
@@ -16,7 +16,6 @@ import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.chrome.browser.compositor.bottombar.OverlayPanel.PanelState;
 import org.chromium.chrome.browser.compositor.bottombar.OverlayPanel.StateChangeReason;
 import org.chromium.chrome.browser.contextualsearch.ResolvedSearchTerm.CardTag;
-import org.chromium.chrome.browser.sync.SyncService;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
@@ -882,10 +881,6 @@ public class ContextualSearchUma {
     public static void logTapResultsSeen(boolean wasPanelSeen) {
         RecordHistogram.recordBooleanHistogram(
                 "Search.ContextualSearch.Tap.ResultsSeen", wasPanelSeen);
-        if (SyncService.get() != null && SyncService.get().isSyncRequested()) {
-            RecordHistogram.recordBooleanHistogram(
-                    "Search.ContextualSearch.Tap.SyncEnabled.ResultsSeen", wasPanelSeen);
-        }
     }
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabActivity.java
@@ -35,7 +35,6 @@ import org.chromium.chrome.browser.browserservices.intents.BrowserServicesIntent
 import org.chromium.chrome.browser.browserservices.intents.BrowserServicesIntentDataProvider.CustomTabsUiType;
 import org.chromium.chrome.browser.customtabs.content.CustomTabActivityTabProvider;
 import org.chromium.chrome.browser.customtabs.features.CustomTabNavigationBarController;
-import org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor;
 import org.chromium.chrome.browser.flags.AllCachedFieldTrialParameters;
 import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.fonts.FontPreloader;
@@ -142,8 +141,6 @@ public class CustomTabActivity extends BaseCustomTabActivity {
 
     @Override
     public void finishNativeInitialization() {
-        if (!mIntentDataProvider.isInfoPage()) FirstRunSignInProcessor.start(this);
-
         mConnection.showSignInToastIfNecessary(mSession, getIntent());
 
         new CustomTabTrustedCdnPublisherUrlVisibility(
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/datareduction/settings/DataReductionPreferenceFragment.java b/chrome/android/java/src/org/chromium/chrome/browser/datareduction/settings/DataReductionPreferenceFragment.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/datareduction/settings/DataReductionPreferenceFragment.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/datareduction/settings/DataReductionPreferenceFragment.java
@@ -56,10 +56,10 @@ public class DataReductionPreferenceFragment extends PreferenceFragmentCompat {
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         SettingsUtils.addPreferencesFromResource(this, R.xml.data_reduction_preferences);
         getActivity().setTitle(R.string.data_reduction_title_lite_mode);
-        boolean isEnabled = DataReductionProxySettings.getInstance().isDataReductionProxyEnabled();
-        mIsEnabled = !isEnabled;
-        mWasEnabledAtCreation = isEnabled;
-        updatePreferences(isEnabled);
+
+        mIsEnabled = false;
+        mWasEnabledAtCreation = false;
+        updatePreferences(false);
 
         setHasOptionsMenu(true);
 
@@ -175,21 +175,7 @@ public class DataReductionPreferenceFragment extends PreferenceFragmentCompat {
      * Returns summary string.
      */
     public static String generateSummary(Resources resources) {
-        if (DataReductionProxySettings.getInstance().isDataReductionProxyEnabled()) {
-            ContentLengths length = DataReductionProxySettings.getInstance().getContentLengths();
-
-            // If received is less than show chart threshold than don't show summary.
-            if (ConversionUtils.bytesToKilobytes(length.getReceived())
-                    < DataReductionProxySettings.DATA_REDUCTION_SHOW_CHART_KB_THRESHOLD) {
-                return "";
-            }
-
-            String percent = generatePercentSavings(length);
-            return resources.getString(
-                    R.string.data_reduction_menu_item_summary_lite_mode, percent);
-        } else {
-            return (String) resources.getText(R.string.text_off);
-        }
+        return (String) resources.getText(R.string.text_off);
     }
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunActivity.java
@@ -29,14 +29,10 @@ import org.chromium.base.supplier.BooleanSupplier;
 import org.chromium.base.supplier.Supplier;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.customtabs.CustomTabActivity;
-import org.chromium.chrome.browser.datareduction.DataReductionPromoUtils;
-import org.chromium.chrome.browser.datareduction.DataReductionProxyUma;
 import org.chromium.chrome.browser.fonts.FontPreloader;
 import org.chromium.chrome.browser.lifecycle.NativeInitObserver;
 import org.chromium.chrome.browser.metrics.UmaUtils;
-import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
 import org.chromium.chrome.browser.search_engines.TemplateUrlServiceFactory;
-import org.chromium.chrome.browser.signin.SigninFirstRunFragment;
 import org.chromium.chrome.browser.signin.services.FREMobileIdentityConsistencyFieldTrial;
 import org.chromium.components.browser_ui.modaldialog.AppModalPresenter;
 import org.chromium.ui.base.LocalizationUtils;
@@ -164,7 +160,6 @@ public class FirstRunActivity extends FirstRunActivityBase implements FirstRunPa
     private void createPageSequence() {
         FREMobileIdentityConsistencyFieldTrial.createFirstRunTrial();
         if (FREMobileIdentityConsistencyFieldTrial.isEnabled()) {
-            mPages.add(new FirstRunPage<>(SigninFirstRunFragment.class, () -> true));
         } else {
             BooleanSupplier showWelcomePage = () -> !FirstRunStatus.shouldSkipWelcomePage();
             // TODO(crbug.com/1111490): Revisit during post-MVP.
@@ -210,20 +205,6 @@ public class FirstRunActivity extends FirstRunActivityBase implements FirstRunPa
         BooleanSupplier showSyncConsent = () -> mFreProperties.getBoolean(SHOW_SYNC_CONSENT_PAGE);
 
         boolean notifyAdapter = false;
-        // An optional sign-in page.
-        if (FREMobileIdentityConsistencyFieldTrial.isEnabled() && showSyncConsent.getAsBoolean()) {
-            mPages.add(new FirstRunPage<>(SyncConsentFirstRunFragment.class, showSyncConsent));
-            mFreProgressStates.add(MobileFreProgress.SYNC_CONSENT_SHOWN);
-            notifyAdapter = true;
-        }
-
-        // An optional Data Saver page.
-        if (showDataReductionPromo.getAsBoolean()) {
-            mPages.add(new FirstRunPage<>(
-                    DataReductionProxyFirstRunFragment.class, showDataReductionPromo));
-            mFreProgressStates.add(MobileFreProgress.DATA_SAVER_SHOWN);
-            notifyAdapter = true;
-        }
 
         // An optional page to select a default search engine.
         if (showSearchEnginePromo.getAsBoolean()) {
@@ -233,13 +214,6 @@ public class FirstRunActivity extends FirstRunActivityBase implements FirstRunPa
             notifyAdapter = true;
         }
 
-        // An optional sign-in page.
-        if (!FREMobileIdentityConsistencyFieldTrial.isEnabled() && showSyncConsent.getAsBoolean()) {
-            mPages.add(new FirstRunPage<>(SyncConsentFirstRunFragment.class, showSyncConsent));
-            mFreProgressStates.add(MobileFreProgress.SYNC_CONSENT_SHOWN);
-            notifyAdapter = true;
-        }
-
         if (notifyAdapter && mPagerAdapter != null) {
             mPagerAdapter.notifyDataSetChanged();
         }
@@ -514,18 +488,6 @@ public class FirstRunActivity extends FirstRunActivityBase implements FirstRunPa
         FirstRunFlowSequencer.markFlowAsCompleted(
                 mResultSignInAccountName, mResultShowSignInSettings);
 
-        if (DataReductionPromoUtils.getDisplayedFreOrSecondRunPromo()) {
-            if (DataReductionProxySettings.getInstance().isDataReductionProxyEnabled()) {
-                DataReductionProxyUma
-                        .dataReductionProxyUIAction(DataReductionProxyUma.ACTION_FRE_ENABLED);
-                DataReductionPromoUtils.saveFrePromoOptOut(false);
-            } else {
-                DataReductionProxyUma
-                        .dataReductionProxyUIAction(DataReductionProxyUma.ACTION_FRE_DISABLED);
-                DataReductionPromoUtils.saveFrePromoOptOut(true);
-            }
-        }
-
         if (sObserver != null) sObserver.onUpdateCachedEngineName(this);
 
         launchPendingIntentAndFinish();
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunFlowSequencer.java b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunFlowSequencer.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunFlowSequencer.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/FirstRunFlowSequencer.java
@@ -60,23 +60,7 @@ public abstract class FirstRunFlowSequencer  {
     public static class FirstRunFlowSequencerDelegate {
         /** @return true if the sync consent promo page should be shown. */
         boolean shouldShowSyncConsentPage(Activity activity, List<Account> accounts) {
-            // We show the sync consent page if sync is allowed, and not signed in, and
-            // - "skip the first use hints" is not set, or
-            // - "skip the first use hints" is set, but there is at least one account.
-            final IdentityManager identityManager =
-                    IdentityServicesProvider.get().getIdentityManager(
-                            Profile.getLastUsedRegularProfile());
-            final boolean isSignedInWithSync = identityManager.hasPrimaryAccount(ConsentLevel.SYNC);
-            final boolean shouldShowSyncConsentPreMICe = isSyncAllowed() && !isSignedInWithSync
-                    && (!shouldSkipFirstUseHints(activity) || !accounts.isEmpty());
-
-            if (FREMobileIdentityConsistencyFieldTrial.isEnabled()) {
-                final boolean isSignedInWithoutSync =
-                        identityManager.hasPrimaryAccount(ConsentLevel.SIGNIN);
-                return shouldShowSyncConsentPreMICe && isSignedInWithoutSync;
-            } else {
-                return shouldShowSyncConsentPreMICe;
-            }
+            return false;
         }
 
         /** @return true if the Data Reduction promo page should be shown. */
@@ -172,7 +156,6 @@ public abstract class FirstRunFlowSequencer  {
 
     @VisibleForTesting
     protected void setFirstRunFlowSignInComplete() {
-        FirstRunSignInProcessor.setFirstRunFlowSignInComplete(true);
     }
 
     @VisibleForTesting
@@ -183,13 +166,6 @@ public abstract class FirstRunFlowSequencer  {
     }
 
     void processFreEnvironmentPreNative() {
-        Bundle freProperties = new Bundle();
-        freProperties.putInt(SyncConsentFirstRunFragment.CHILD_ACCOUNT_STATUS, mChildAccountStatus);
-
-        onFlowIsKnown(freProperties);
-        if (ChildAccountStatus.isChild(mChildAccountStatus)) {
-            setFirstRunFlowSignInComplete();
-        }
     }
 
     /**
@@ -217,9 +193,6 @@ public abstract class FirstRunFlowSequencer  {
         if (!FirstRunUtils.isFirstRunEulaAccepted()) {
             FirstRunUtils.setEulaAccepted();
         }
-
-        // Mark the FRE flow as complete and set the sign-in flow preferences if necessary.
-        FirstRunSignInProcessor.finalizeFirstRunFlowState(signInAccountName, showSignInSettings);
     }
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/LightweightFirstRunActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/LightweightFirstRunActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/LightweightFirstRunActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/LightweightFirstRunActivity.java
@@ -86,11 +86,7 @@ public class LightweightFirstRunActivity
                     return;
                 }
 
-                @ChildAccountStatus.Status
-                int childAccountStatus =
-                        freProperties.getInt(SyncConsentFirstRunFragment.CHILD_ACCOUNT_STATUS,
-                                ChildAccountStatus.NOT_CHILD);
-                initializeViews(ChildAccountStatus.isChild(childAccountStatus));
+                initializeViews(false);
             }
         };
         mFirstRunFlowSequencer.start();
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/ToSAndUMAFirstRunFragment.java b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/ToSAndUMAFirstRunFragment.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/firstrun/ToSAndUMAFirstRunFragment.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/firstrun/ToSAndUMAFirstRunFragment.java
@@ -26,7 +26,6 @@ import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.privacy.settings.PrivacyPreferencesManagerImpl;
 import org.chromium.chrome.browser.version.ChromeVersionInfo;
-import org.chromium.components.signin.ChildAccountStatus;
 import org.chromium.ui.text.NoUnderlineClickableSpan;
 import org.chromium.ui.text.SpanApplier;
 import org.chromium.ui.text.SpanApplier.SpanInfo;
@@ -105,19 +104,9 @@ public class ToSAndUMAFirstRunFragment extends Fragment implements FirstRunFragm
 
         final CharSequence tosText;
         Bundle freProperties = getPageDelegate().getProperties();
-        @ChildAccountStatus.Status
-        int childAccountStatus = freProperties.getInt(
-                SyncConsentFirstRunFragment.CHILD_ACCOUNT_STATUS, ChildAccountStatus.NOT_CHILD);
-        if (childAccountStatus == ChildAccountStatus.REGULAR_CHILD) {
-            tosText = SpanApplier.applySpans(getString(R.string.fre_tos_and_privacy_child_account),
-                    new SpanInfo("<LINK1>", "</LINK1>", clickableGoogleTermsSpan),
-                    new SpanInfo("<LINK2>", "</LINK2>", clickableChromeAdditionalTermsSpan),
-                    new SpanInfo("<LINK3>", "</LINK3>", clickableFamilyLinkPrivacySpan));
-        } else {
             tosText = SpanApplier.applySpans(getString(R.string.fre_tos),
                     new SpanInfo("<LINK1>", "</LINK1>", clickableGoogleTermsSpan),
                     new SpanInfo("<LINK2>", "</LINK2>", clickableChromeAdditionalTermsSpan));
-        }
         mTosAndPrivacy.setText(tosText);
 
         // If this page should be skipped, it can be one of the following cases:
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/history/HistoryContentManager.java b/chrome/android/java/src/org/chromium/chrome/browser/history/HistoryContentManager.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/history/HistoryContentManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/history/HistoryContentManager.java
@@ -207,11 +207,6 @@ public class HistoryContentManager implements SignInStateObserver, PrefObserver
         mHistoryAdapter.generateHeaderItems();
         mHistoryAdapter.generateFooterItems();
 
-        // Listen to changes in sign in state.
-        IdentityServicesProvider.get()
-                .getSigninManager(Profile.getLastUsedRegularProfile())
-                .addSignInStateObserver(this);
-
         // Create PrefChangeRegistrar to receive notifications on preference changes.
         mPrefChangeRegistrar = new PrefChangeRegistrar();
         mPrefChangeRegistrar.addObserver(Pref.ALLOW_DELETING_BROWSER_HISTORY, this);
@@ -245,9 +240,6 @@ public class HistoryContentManager implements SignInStateObserver, PrefObserver
         mHistoryAdapter.onDestroyed();
         mLargeIconBridge.destroy();
         mLargeIconBridge = null;
-        IdentityServicesProvider.get()
-                .getSigninManager(Profile.getLastUsedRegularProfile())
-                .removeSignInStateObserver(this);
         mPrefChangeRegistrar.destroy();
     }
 
@@ -500,4 +492,4 @@ public class HistoryContentManager implements SignInStateObserver, PrefObserver
     public static void setScrollToLoadDisabledForTesting(boolean isScrollToLoadDisabled) {
         sIsScrollToLoadDisabledForTests = isScrollToLoadDisabled;
     }
-}
\ No newline at end of file
+}
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java b/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
@@ -34,7 +34,6 @@ import org.chromium.chrome.browser.crash.LogcatExtractionRunnable;
 import org.chromium.chrome.browser.download.DownloadManagerService;
 import org.chromium.chrome.browser.flags.ChromeSwitches;
 import org.chromium.chrome.browser.language.GlobalAppLocaleController;
-import org.chromium.chrome.browser.signin.SigninCheckerProvider;
 import org.chromium.chrome.browser.webapps.ChromeWebApkHost;
 import org.chromium.components.background_task_scheduler.BackgroundTaskSchedulerFactory;
 import org.chromium.components.crash.browser.ChildProcessCrashObserver;
@@ -338,7 +337,6 @@ public class ChromeBrowserInitializer {
             LibraryPrefetcher.asyncPrefetchLibrariesToMemory();
             getBrowserStartupController().startBrowserProcessesSync(
                     LibraryProcessType.PROCESS_BROWSER, /*singleProcess=*/false);
-            SigninCheckerProvider.get();
         } finally {
             TraceEvent.end("ChromeBrowserInitializer.startChromeBrowserProcessesSync");
         }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/init/ProcessInitializationHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/init/ProcessInitializationHandler.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/init/ProcessInitializationHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/init/ProcessInitializationHandler.java
@@ -59,7 +59,6 @@ import org.chromium.chrome.browser.media.MediaViewerUtils;
 import org.chromium.chrome.browser.metrics.LaunchMetrics;
 import org.chromium.chrome.browser.metrics.PackageMetrics;
 import org.chromium.chrome.browser.metrics.WebApkUninstallUmaTracker;
-import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
 import org.chromium.chrome.browser.notifications.channels.ChannelsUpdater;
 import org.chromium.chrome.browser.offlinepages.measurements.OfflineMeasurementsBackgroundTask;
 import org.chromium.chrome.browser.omnibox.voice.AssistantVoiceSearchService;
@@ -74,7 +73,6 @@ import org.chromium.chrome.browser.quickactionsearchwidget.QuickActionSearchWidg
 import org.chromium.chrome.browser.rlz.RevenueStats;
 import org.chromium.chrome.browser.searchwidget.SearchWidgetProvider;
 import org.chromium.chrome.browser.sharing.shared_clipboard.SharedClipboardShareActivity;
-import org.chromium.chrome.browser.signin.SigninCheckerProvider;
 import org.chromium.chrome.browser.tab.state.ShoppingPersistedTabData;
 import org.chromium.chrome.browser.ui.searchactivityutils.SearchActivityPreferencesManager;
 import org.chromium.chrome.browser.util.AfterStartupTaskUtils;
@@ -219,7 +217,6 @@ public class ProcessInitializationHandler {
      * Performs the post native initialization.
      */
     protected void handlePostNativeInitialization() {
-        DataReductionProxySettings.handlePostNativeInitialization();
         ChromeActivitySessionTracker.getInstance().initializeWithNative();
         ProfileManagerUtils.removeSessionCookiesForAllProfiles();
         AppBannerManager.setAppDetailsDelegate(AppHooks.get().createAppDetailsDelegate());
@@ -368,7 +365,6 @@ public class ProcessInitializationHandler {
         deferredStartupHandler.addDeferredTask(new Runnable() {
             @Override
             public void run() {
-                SigninCheckerProvider.get().onMainActivityStart();
                 RevenueStats.getInstance();
             }
         });
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsManager.java b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsManager.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsManager.java
@@ -16,14 +16,10 @@ import org.chromium.chrome.browser.invalidation.SessionsInvalidationManager;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSession;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSessionTab;
 import org.chromium.chrome.browser.profiles.Profile;
-import org.chromium.chrome.browser.signin.SyncConsentActivityLauncherImpl;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.services.ProfileDataCache;
 import org.chromium.chrome.browser.signin.services.SigninManager;
 import org.chromium.chrome.browser.signin.services.SigninManager.SignInStateObserver;
 import org.chromium.chrome.browser.signin.ui.PersonalizedSigninPromoView;
-import org.chromium.chrome.browser.signin.ui.SigninPromoController;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tab.Tab;
 import org.chromium.chrome.browser.ui.favicon.FaviconHelper;
 import org.chromium.chrome.browser.ui.favicon.FaviconHelper.FaviconImageCallback;
@@ -42,8 +38,8 @@ import java.util.List;
 /**
  * Provides the domain logic and data for RecentTabsPage and RecentTabsRowAdapter.
  */
-public class RecentTabsManager implements SyncService.SyncStateChangedListener, SignInStateObserver,
-                                          ProfileDataCache.Observer, AccountsChangeObserver {
+public class RecentTabsManager implements SignInStateObserver,
+                                          AccountsChangeObserver {
     /**
      * Implement this to receive updates when the page contents change.
      */
@@ -78,15 +74,9 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
     private List<RecentlyClosedTab> mRecentlyClosedTabs;
     private RecentTabsPagePrefs mPrefs;
     private RecentlyClosedTabManager mRecentlyClosedTabManager;
-    private SigninManager mSignInManager;
     private UpdatedCallback mUpdatedCallback;
     private boolean mIsDestroyed;
 
-    private final ProfileDataCache mProfileDataCache;
-    private final SigninPromoController mSigninPromoController;
-    @Nullable
-    private final SyncService mSyncService;
-
     /**
      * Create an RecentTabsManager to be used with RecentTabsPage and RecentTabsRowAdapter.
      *
@@ -106,12 +96,6 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
         mRecentlyClosedTabManager = sRecentlyClosedTabManagerForTests != null
                 ? sRecentlyClosedTabManagerForTests
                 : new RecentlyClosedBridge(profile);
-        mSignInManager = IdentityServicesProvider.get().getSigninManager(mProfile);
-
-        mProfileDataCache = ProfileDataCache.createWithDefaultImageSizeAndNoBadge(context);
-        mSigninPromoController = new SigninPromoController(
-                SigninAccessPoint.RECENT_TABS, SyncConsentActivityLauncherImpl.get());
-        mSyncService = SyncService.get();
 
         mRecentlyClosedTabManager.setTabsUpdatedRunnable(() -> {
             updateRecentlyClosedTabs();
@@ -133,14 +117,6 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
      */
     public void destroy() {
         mIsDestroyed = true;
-        if (mSyncService != null) {
-            mSyncService.removeSyncStateChangedListener(this);
-        }
-
-        mSignInManager.removeSignInStateObserver(this);
-        mSignInManager = null;
-
-        mProfileDataCache.removeObserver(this);
         AccountManagerFacadeProvider.getInstance().removeObserver(this);
 
         mFaviconHelper.destroy();
@@ -169,13 +145,6 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
     }
 
     private void registerObservers() {
-        if (mSyncService != null) {
-            mSyncService.addSyncStateChangedListener(this);
-        }
-
-        mSignInManager.addSignInStateObserver(this);
-
-        mProfileDataCache.addObserver(this);
         AccountManagerFacadeProvider.getInstance().addObserver(this);
     }
 
@@ -371,26 +340,7 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
     }
 
     private @PromoState int calculatePromoState() {
-        if (!mSignInManager.getIdentityManager().hasPrimaryAccount(ConsentLevel.SYNC)) {
-            if (!mSignInManager.isSignInAllowed()) {
-                return PromoState.PROMO_NONE;
-            }
-            if (mSignInManager.getIdentityManager().hasPrimaryAccount(ConsentLevel.SIGNIN)) {
-                return PromoState.PROMO_SYNC_PERSONALIZED;
-            }
-            return PromoState.PROMO_SIGNIN_PERSONALIZED;
-        }
-
-        if (mSyncService == null) {
-            // |mSyncService| will remain null until the next browser startup, so no sense in
-            // offering any promo.
-            return PromoState.PROMO_NONE;
-        }
-
-        if (mSyncService.isSyncRequested() && !mForeignSessions.isEmpty()) {
-            return PromoState.PROMO_NONE;
-        }
-        return PromoState.PROMO_SYNC;
+        return PromoState.PROMO_NONE;
     }
 
     private void updatePromoState() {
@@ -411,7 +361,6 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
      * Sets up the sync promo view.
      */
     void setUpSyncPromoView(PersonalizedSigninPromoView view) {
-        mSigninPromoController.setUpSyncPromoView(mProfileDataCache, view, null);
     }
 
     // SignInStateObserver implementation.
@@ -431,18 +380,6 @@ public class RecentTabsManager implements SyncService.SyncStateChangedListener,
         update();
     }
 
-    // ProfileDataCache.Observer implementation.
-    @Override
-    public void onProfileDataUpdated(String accountEmail) {
-        update();
-    }
-
-    // SyncService.SyncStateChangedListener implementation.
-    @Override
-    public void syncStateChanged() {
-        update();
-    }
-
     private void postUpdate() {
         if (mUpdatedCallback != null) {
             mUpdatedCallback.onUpdated();
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ntp/RecentTabsRowAdapter.java
@@ -30,7 +30,6 @@ import org.chromium.chrome.R;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSession;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSessionTab;
 import org.chromium.chrome.browser.ntp.ForeignSessionHelper.ForeignSessionWindow;
-import org.chromium.chrome.browser.signin.SyncPromoView;
 import org.chromium.chrome.browser.ui.favicon.FaviconHelper.DefaultFaviconHelper;
 import org.chromium.chrome.browser.ui.favicon.FaviconHelper.FaviconImageCallback;
 import org.chromium.chrome.browser.ui.favicon.FaviconUtils;
@@ -445,8 +444,6 @@ public class RecentTabsRowAdapter extends BaseExpandableListAdapter {
                 convertView = layoutInflater.inflate(
                         R.layout.personalized_signin_promo_view_recent_tabs, parent, false);
             }
-            mRecentTabsManager.setUpSyncPromoView(
-                    convertView.findViewById(R.id.signin_promo_view_container));
             return convertView;
         }
     }
@@ -487,9 +484,6 @@ public class RecentTabsRowAdapter extends BaseExpandableListAdapter {
         @Override
         View getChildView(
                 int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
-            if (convertView == null) {
-                convertView = SyncPromoView.create(parent, SigninAccessPoint.RECENT_TABS);
-            }
             return convertView;
         }
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/omaha/RequestGenerator.java b/chrome/android/java/src/org/chromium/chrome/browser/omaha/RequestGenerator.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/omaha/RequestGenerator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/omaha/RequestGenerator.java
@@ -38,9 +38,6 @@ public abstract class RequestGenerator {
 
     protected RequestGenerator(Context context) {
         mApplicationContext = context.getApplicationContext();
-        UniqueIdentificationGeneratorFactory.registerGenerator(
-                SettingsSecureBasedIdentificationGenerator.GENERATOR_ID,
-                new SettingsSecureBasedIdentificationGenerator(getContext()), false);
     }
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerLauncher.java b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerLauncher.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerLauncher.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerLauncher.java
@@ -11,7 +11,6 @@ import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.components.signin.identitymanager.ConsentLevel;
 import org.chromium.components.signin.identitymanager.IdentityManager;
 import org.chromium.components.sync.ModelType;
@@ -50,18 +49,6 @@ public class PasswordManagerLauncher {
     }
 
     public static boolean isSyncingPasswordsWithoutCustomPassphrase() {
-        IdentityManager identityManager = IdentityServicesProvider.get().getIdentityManager(
-                Profile.getLastUsedRegularProfile());
-        if (!identityManager.hasPrimaryAccount(ConsentLevel.SYNC)) return false;
-
-        SyncService syncService = SyncService.get();
-        if (syncService == null
-                || !syncService.getActiveDataTypes().contains(ModelType.PASSWORDS)) {
-            return false;
-        }
-
-        if (syncService.isUsingExplicitPassphrase()) return false;
-
-        return true;
+        return false;
     }
 }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordEntryViewer.java b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordEntryViewer.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordEntryViewer.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordEntryViewer.java
@@ -39,7 +39,6 @@ import org.chromium.base.ApiCompatibilityUtils;
 import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.chrome.R;
 import org.chromium.chrome.browser.password_manager.ReauthResult;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.components.browser_ui.settings.SettingsUtils;
 import org.chromium.ui.text.SpanApplier;
 import org.chromium.ui.widget.Toast;
@@ -216,9 +215,7 @@ public class PasswordEntryViewer
     }
 
     private boolean isPasswordSyncingUser() {
-        SyncService syncService = SyncService.get();
-        return syncService != null && syncService.isSyncRequested()
-                && syncService.isEngineInitialized() && !syncService.isUsingExplicitPassphrase();
+        return false;
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordSettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/password_manager/settings/PasswordSettings.java
@@ -40,8 +40,6 @@ import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.settings.ChromeManagedPreferenceDelegate;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
-import org.chromium.chrome.browser.sync.SyncService;
-import org.chromium.chrome.browser.sync.settings.SyncSettingsUtils;
 import org.chromium.components.browser_ui.settings.ChromeBasePreference;
 import org.chromium.components.browser_ui.settings.ChromeSwitchPreference;
 import org.chromium.components.browser_ui.settings.SearchUtils;
@@ -59,8 +57,7 @@ import java.util.Locale;
  * to view saved passwords (just the username and URL), and to delete saved passwords.
  */
 public class PasswordSettings extends PreferenceFragmentCompat
-        implements PasswordManagerHandler.PasswordListObserver,
-                   Preference.OnPreferenceClickListener, SyncService.SyncStateChangedListener {
+        implements PasswordManagerHandler.PasswordListObserver, Preference.OnPreferenceClickListener {
     // Keys for name/password dictionaries.
     public static final String PASSWORD_LIST_URL = "url";
     public static final String PASSWORD_LIST_NAME = "name";
@@ -152,10 +149,6 @@ public class PasswordSettings extends PreferenceFragmentCompat
         setPreferenceScreen(getPreferenceManager().createPreferenceScreen(getStyledContext()));
         PasswordManagerHandlerProvider.getInstance().addObserver(this);
 
-        if (SyncService.get() != null) {
-            SyncService.get().addSyncStateChangedListener(this);
-        }
-
         setHasOptionsMenu(true); // Password Export might be optional but Search is always present.
 
         mManagePasswordsReferrer = getReferrerFromInstanceStateOrLaunchBundle(savedInstanceState);
@@ -186,8 +179,7 @@ public class PasswordSettings extends PreferenceFragmentCompat
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mPasswordCheck = PasswordCheckFactory.getOrCreate(new SettingsLauncherImpl());
-        mShouldShowTrustedVaultOptIn =
-                SyncService.get() != null && SyncService.get().shouldOfferTrustedVaultOptIn();
+        mShouldShowTrustedVaultOptIn = false;
     }
 
     @Override
@@ -449,9 +441,6 @@ public class PasswordSettings extends PreferenceFragmentCompat
     public void onDestroy() {
         super.onDestroy();
 
-        if (SyncService.get() != null) {
-            SyncService.get().removeSyncStateChangedListener(this);
-        }
         // The component should only be destroyed when the activity has been closed by the user
         // (e.g. by pressing on the back button) and not when the activity is temporarily destroyed
         // by the system.
@@ -563,11 +552,6 @@ public class PasswordSettings extends PreferenceFragmentCompat
         mTrustedVaultOptIn.setOrder(ORDER_TRUSTED_VAULT_OPT_IN);
         mTrustedVaultOptIn.setSummary(R.string.android_trusted_vault_opt_in_sub_label);
         mTrustedVaultOptIn.setOnPreferenceClickListener(preference -> {
-            assert SyncService.get() != null;
-            CoreAccountInfo accountInfo = SyncService.get().getAuthenticatedAccountInfo();
-            assert accountInfo != null;
-            SyncSettingsUtils.openTrustedVaultOptInDialog(
-                    this, accountInfo, REQUEST_CODE_TRUSTED_VAULT_OPT_IN);
             // Return true to notify the click was handled.
             return true;
         });
@@ -609,15 +593,6 @@ public class PasswordSettings extends PreferenceFragmentCompat
         return UserPrefs.get(Profile.getLastUsedRegularProfile());
     }
 
-    @Override
-    public void syncStateChanged() {
-        boolean shouldShowTrustedVaultOptIn = SyncService.get().shouldOfferTrustedVaultOptIn();
-        if (mShouldShowTrustedVaultOptIn != shouldShowTrustedVaultOptIn) {
-            mShouldShowTrustedVaultOptIn = shouldShowTrustedVaultOptIn;
-            rebuildPasswordLists();
-        }
-    }
-
     @VisibleForTesting
     Menu getMenuForTesting() {
         return mMenu;
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
@@ -29,8 +29,6 @@ import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.settings.ChromeManagedPreferenceDelegate;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.sync.settings.GoogleServicesSettings;
-import org.chromium.chrome.browser.sync.settings.ManageSyncSettings;
 import org.chromium.components.browser_ui.settings.ChromeSwitchPreference;
 import org.chromium.components.browser_ui.settings.ManagedPreferenceDelegate;
 import org.chromium.components.browser_ui.settings.SettingsLauncher;
@@ -51,7 +49,6 @@ public class PrivacySettings
     private static final String PREF_HTTPS_FIRST_MODE = "https_first_mode";
     private static final String PREF_SECURE_DNS = "secure_dns";
     private static final String PREF_DO_NOT_TRACK = "do_not_track";
-    private static final String PREF_SYNC_AND_SERVICES_LINK = "sync_and_services_link";
     private static final String PREF_CLEAR_BROWSING_DATA = "clear_browsing_data";
     private static final String PREF_PRIVACY_SANDBOX = "privacy_sandbox";
     private static final String PREF_PRIVACY_REVIEW = "privacy_review";
@@ -118,36 +115,9 @@ public class PrivacySettings
         Preference secureDnsPref = findPreference(PREF_SECURE_DNS);
         secureDnsPref.setVisible(SecureDnsSettings.isUiEnabled());
 
-        Preference syncAndServicesLink = findPreference(PREF_SYNC_AND_SERVICES_LINK);
-        syncAndServicesLink.setSummary(buildSyncAndServicesLink());
-
         updatePreferences();
     }
 
-    private SpannableString buildSyncAndServicesLink() {
-        SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
-        NoUnderlineClickableSpan servicesLink = new NoUnderlineClickableSpan(getResources(), v -> {
-            settingsLauncher.launchSettingsActivity(getActivity(), GoogleServicesSettings.class);
-        });
-        if (IdentityServicesProvider.get()
-                        .getIdentityManager(Profile.getLastUsedRegularProfile())
-                        .getPrimaryAccountInfo(ConsentLevel.SYNC)
-                == null) {
-            // Sync is off, show the string with one link to "Google Services".
-            return SpanApplier.applySpans(
-                    getString(R.string.privacy_sync_and_services_link_sync_off),
-                    new SpanApplier.SpanInfo("<link>", "</link>", servicesLink));
-        }
-        // Otherwise, show the string with both links to "Sync" and "Google Services".
-        NoUnderlineClickableSpan syncLink = new NoUnderlineClickableSpan(getResources(), v -> {
-            settingsLauncher.launchSettingsActivity(getActivity(), ManageSyncSettings.class,
-                    ManageSyncSettings.createArguments(false));
-        });
-        return SpanApplier.applySpans(getString(R.string.privacy_sync_and_services_link_sync_on),
-                new SpanApplier.SpanInfo("<link1>", "</link1>", syncLink),
-                new SpanApplier.SpanInfo("<link2>", "</link2>", servicesLink));
-    }
-
     private void setUpIncognitoReauthPreference() {
         IncognitoReauthSettingSwitchPreference incognitoReauthPreference =
                 (IncognitoReauthSettingSwitchPreference) findPreference(PREF_INCOGNITO_LOCK);
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
@@ -19,9 +19,7 @@ import androidx.preference.PreferenceFragmentCompat;
 
 import org.chromium.base.ContextUtils;
 import org.chromium.chrome.R;
-import org.chromium.chrome.browser.datareduction.settings.DataReductionPreferenceFragment;
 import org.chromium.chrome.browser.homepage.HomepageManager;
-import org.chromium.chrome.browser.net.spdyproxy.DataReductionProxySettings;
 import org.chromium.chrome.browser.night_mode.NightModeMetrics.ThemeSettingsEntry;
 import org.chromium.chrome.browser.night_mode.NightModeUtils;
 import org.chromium.chrome.browser.night_mode.settings.ThemeSettingsFragment;
@@ -31,15 +29,6 @@ import org.chromium.chrome.browser.password_manager.ManagePasswordsReferrer;
 import org.chromium.chrome.browser.password_manager.PasswordManagerLauncher;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.search_engines.TemplateUrlServiceFactory;
-import org.chromium.chrome.browser.signin.SyncConsentActivityLauncherImpl;
-import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.services.SigninManager;
-import org.chromium.chrome.browser.sync.SyncService;
-import org.chromium.chrome.browser.sync.settings.ManageSyncSettings;
-import org.chromium.chrome.browser.sync.settings.SignInPreference;
-import org.chromium.chrome.browser.sync.settings.SyncPromoPreference;
-import org.chromium.chrome.browser.sync.settings.SyncPromoPreference.State;
-import org.chromium.chrome.browser.sync.settings.SyncSettingsUtils;
 import org.chromium.chrome.browser.toolbar.adaptive.AdaptiveToolbarFeatures;
 import org.chromium.chrome.browser.toolbar.adaptive.AdaptiveToolbarStatePredictor;
 import org.chromium.chrome.browser.tracing.settings.DeveloperSettings;
@@ -60,14 +49,10 @@ import java.util.Map;
  * The main settings screen, shown when the user first opens Settings.
  */
 public class MainSettings extends PreferenceFragmentCompat
-        implements TemplateUrlService.LoadListener, SyncService.SyncStateChangedListener,
-                   SigninManager.SignInStateObserver {
-    public static final String PREF_SYNC_PROMO = "sync_promo";
+        implements TemplateUrlService.LoadListener {
     public static final String PREF_ACCOUNT_AND_GOOGLE_SERVICES_SECTION =
             "account_and_google_services_section";
     public static final String PREF_SIGN_IN = "sign_in";
-    public static final String PREF_MANAGE_SYNC = "manage_sync";
-    public static final String PREF_GOOGLE_SERVICES = "google_services";
     public static final String PREF_SEARCH_ENGINE = "search_engine";
     public static final String PREF_PASSWORDS = "passwords";
     public static final String PREF_HOMEPAGE = "homepage";
@@ -75,7 +60,6 @@ public class MainSettings extends PreferenceFragmentCompat
     public static final String PREF_UI_THEME = "ui_theme";
     public static final String PREF_PRIVACY = "privacy";
     public static final String PREF_SAFETY_CHECK = "safety_check";
-    public static final String PREF_DATA_REDUCTION = "data_reduction";
     public static final String PREF_NOTIFICATIONS = "notifications";
     public static final String PREF_DOWNLOADS = "downloads";
     public static final String PREF_DEVELOPER = "developer";
@@ -86,9 +70,6 @@ public class MainSettings extends PreferenceFragmentCompat
 
     private final ManagedPreferenceDelegate mManagedPreferenceDelegate;
     private final Map<String, Preference> mAllPreferences = new HashMap<>();
-    private SyncPromoPreference mSyncPromoPreference;
-    private SignInPreference mSignInPreference;
-    private ChromeBasePreference mManageSync;
     private @Nullable PasswordCheck mPasswordCheck;
 
     public MainSettings() {
@@ -119,41 +100,12 @@ public class MainSettings extends PreferenceFragmentCompat
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mSyncPromoPreference.onPreferenceFragmentDestroyed();
         // The component should only be destroyed when the activity has been closed by the user
         // (e.g. by pressing on the back button) and not when the activity is temporarily destroyed
         // by the system.
         if (getActivity().isFinishing() && mPasswordCheck != null) PasswordCheckFactory.destroy();
     }
 
-    @Override
-    public void onStart() {
-        super.onStart();
-        SigninManager signinManager = IdentityServicesProvider.get().getSigninManager(
-                Profile.getLastUsedRegularProfile());
-        if (signinManager.isSigninSupported()) {
-            signinManager.addSignInStateObserver(this);
-        }
-        SyncService syncService = SyncService.get();
-        if (syncService != null) {
-            syncService.addSyncStateChangedListener(this);
-        }
-    }
-
-    @Override
-    public void onStop() {
-        super.onStop();
-        SigninManager signinManager = IdentityServicesProvider.get().getSigninManager(
-                Profile.getLastUsedRegularProfile());
-        if (signinManager.isSigninSupported()) {
-            signinManager.removeSignInStateObserver(this);
-        }
-        SyncService syncService = SyncService.get();
-        if (syncService != null) {
-            syncService.removeSyncStateChangedListener(this);
-        }
-    }
-
     @Override
     public void onResume() {
         super.onResume();
@@ -165,12 +117,9 @@ public class MainSettings extends PreferenceFragmentCompat
 
         cachePreferences();
 
-        mSyncPromoPreference.setOnStateChangedCallback(this::onSyncPromoPreferenceStateChanged);
-
         updatePasswordsPreference();
 
         setManagedPreferenceDelegateForPreference(PREF_SEARCH_ENGINE);
-        setManagedPreferenceDelegateForPreference(PREF_DATA_REDUCTION);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             // If we are on Android O+ the Notifications preference should lead to the Android
@@ -215,9 +164,6 @@ public class MainSettings extends PreferenceFragmentCompat
             Preference preference = getPreferenceScreen().getPreference(index);
             mAllPreferences.put(preference.getKey(), preference);
         }
-        mSyncPromoPreference = (SyncPromoPreference) mAllPreferences.get(PREF_SYNC_PROMO);
-        mSignInPreference = (SignInPreference) mAllPreferences.get(PREF_SIGN_IN);
-        mManageSync = (ChromeBasePreference) findPreference(PREF_MANAGE_SYNC);
     }
 
     private void setManagedPreferenceDelegateForPreference(String key) {
@@ -226,15 +172,6 @@ public class MainSettings extends PreferenceFragmentCompat
     }
 
     private void updatePreferences() {
-        if (IdentityServicesProvider.get()
-                        .getSigninManager(Profile.getLastUsedRegularProfile())
-                        .isSigninSupported()) {
-            addPreferenceIfAbsent(PREF_SIGN_IN);
-        } else {
-            removePreferenceIfPresent(PREF_SIGN_IN);
-        }
-
-        updateManageSyncPreference();
         updateSearchEnginePreference();
 
         Preference homepagePref = addPreferenceIfAbsent(PREF_HOMEPAGE);
@@ -254,10 +191,6 @@ public class MainSettings extends PreferenceFragmentCompat
         } else {
             removePreferenceIfPresent(PREF_DEVELOPER);
         }
-
-        ChromeBasePreference dataReduction =
-                (ChromeBasePreference) findPreference(PREF_DATA_REDUCTION);
-        dataReduction.setSummary(DataReductionPreferenceFragment.generateSummary(getResources()));
     }
 
     private Preference addPreferenceIfAbsent(String key) {
@@ -271,37 +204,6 @@ public class MainSettings extends PreferenceFragmentCompat
         if (preference != null) getPreferenceScreen().removePreference(preference);
     }
 
-    private void updateManageSyncPreference() {
-        String primaryAccountName = CoreAccountInfo.getEmailFrom(
-                IdentityServicesProvider.get()
-                        .getIdentityManager(Profile.getLastUsedRegularProfile())
-                        .getPrimaryAccountInfo(ConsentLevel.SIGNIN));
-        boolean showManageSync = primaryAccountName != null;
-        mManageSync.setVisible(showManageSync);
-        if (!showManageSync) return;
-
-        boolean isSyncConsentAvailable =
-                IdentityServicesProvider.get()
-                        .getIdentityManager(Profile.getLastUsedRegularProfile())
-                        .getPrimaryAccountInfo(ConsentLevel.SYNC)
-                != null;
-        mManageSync.setIcon(SyncSettingsUtils.getSyncStatusIcon(getActivity()));
-        mManageSync.setSummary(SyncSettingsUtils.getSyncStatusSummary(getActivity()));
-        mManageSync.setOnPreferenceClickListener(pref -> {
-            Context context = getContext();
-            if (SyncService.get().isSyncDisabledByEnterprisePolicy()) {
-                SyncSettingsUtils.showSyncDisabledByAdministratorToast(context);
-            } else if (isSyncConsentAvailable) {
-                SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
-                settingsLauncher.launchSettingsActivity(context, ManageSyncSettings.class);
-            } else {
-                SyncConsentActivityLauncherImpl.get().launchActivityForPromoDefaultFlow(
-                        context, SigninAccessPoint.SETTINGS, primaryAccountName);
-            }
-            return true;
-        });
-    }
-
     private void updateSearchEnginePreference() {
         if (!TemplateUrlServiceFactory.get().isLoaded()) {
             ChromeBasePreference searchEnginePref =
@@ -333,28 +235,6 @@ public class MainSettings extends PreferenceFragmentCompat
         pref.setSummary(isOn ? R.string.text_on : R.string.text_off);
     }
 
-    // SigninManager.SignInStateObserver implementation.
-    @Override
-    public void onSignedIn() {
-        // After signing in or out of a managed account, preferences may change or become enabled
-        // or disabled.
-        new Handler().post(() -> updatePreferences());
-    }
-
-    @Override
-    public void onSignedOut() {
-        updatePreferences();
-    }
-
-    private void onSyncPromoPreferenceStateChanged() {
-        // Remove "Account" section header if the personalized sign-in promo is shown.
-        boolean isShowingPersonalizedSigninPromo =
-                mSyncPromoPreference.getState() == State.PERSONALIZED_SIGNIN_PROMO;
-        findPreference(PREF_ACCOUNT_AND_GOOGLE_SERVICES_SECTION)
-                .setVisible(!isShowingPersonalizedSigninPromo);
-        mSignInPreference.setIsShowingPersonalizedSigninPromo(isShowingPersonalizedSigninPromo);
-    }
-
     // TemplateUrlService.LoadListener implementation.
     @Override
     public void onTemplateUrlServiceLoaded() {
@@ -362,11 +242,6 @@ public class MainSettings extends PreferenceFragmentCompat
         updateSearchEnginePreference();
     }
 
-    @Override
-    public void syncStateChanged() {
-        updateManageSyncPreference();
-    }
-
     @VisibleForTesting
     public ManagedPreferenceDelegate getManagedPreferenceDelegateForTest() {
         return mManagedPreferenceDelegate;
@@ -376,9 +251,6 @@ public class MainSettings extends PreferenceFragmentCompat
         return new ChromeManagedPreferenceDelegate() {
             @Override
             public boolean isPreferenceControlledByPolicy(Preference preference) {
-                if (PREF_DATA_REDUCTION.equals(preference.getKey())) {
-                    return DataReductionProxySettings.getInstance().isDataReductionProxyManaged();
-                }
                 if (PREF_SEARCH_ENGINE.equals(preference.getKey())) {
                     return TemplateUrlServiceFactory.get().isDefaultSearchManaged();
                 }
@@ -387,11 +259,6 @@ public class MainSettings extends PreferenceFragmentCompat
 
             @Override
             public boolean isPreferenceClickDisabledByPolicy(Preference preference) {
-                if (PREF_DATA_REDUCTION.equals(preference.getKey())) {
-                    DataReductionProxySettings settings = DataReductionProxySettings.getInstance();
-                    return settings.isDataReductionProxyManaged()
-                            && !settings.isDataReductionProxyEnabled();
-                }
                 if (PREF_SEARCH_ENGINE.equals(preference.getKey())) {
                     return TemplateUrlServiceFactory.get().isDefaultSearchManaged();
                 }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/SettingsActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/SettingsActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/SettingsActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/SettingsActivity.java
@@ -50,7 +50,6 @@ import org.chromium.chrome.browser.safety_check.SafetyCheckCoordinator;
 import org.chromium.chrome.browser.safety_check.SafetyCheckSettingsFragment;
 import org.chromium.chrome.browser.safety_check.SafetyCheckUpdatesDelegateImpl;
 import org.chromium.chrome.browser.search_engines.settings.SearchEngineSettings;
-import org.chromium.chrome.browser.signin.SyncConsentActivityLauncherImpl;
 import org.chromium.chrome.browser.site_settings.ChromeSiteSettingsDelegate;
 import org.chromium.chrome.browser.ui.messages.snackbar.SnackbarManager;
 import org.chromium.chrome.browser.ui.messages.snackbar.SnackbarManager.SnackbarManageable;
@@ -289,9 +288,7 @@ public class SettingsActivity extends ChromeBaseAppCompatActivity
                     HelpAndFeedbackLauncherImpl.getInstance());
         }
         if (fragment instanceof SafetyCheckSettingsFragment) {
-            SafetyCheckCoordinator.create((SafetyCheckSettingsFragment) fragment,
-                    new SafetyCheckUpdatesDelegateImpl(this), mSettingsLauncher,
-                    SyncConsentActivityLauncherImpl.get());
+            // not supported
         }
         if (fragment instanceof PasswordCheckFragmentView) {
             PasswordCheckComponentUiFactory.create((PasswordCheckFragmentView) fragment,
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/share/ShareDelegateImpl.java b/chrome/android/java/src/org/chromium/chrome/browser/share/ShareDelegateImpl.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/share/ShareDelegateImpl.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/share/ShareDelegateImpl.java
@@ -25,7 +25,6 @@ import org.chromium.chrome.browser.send_tab_to_self.SendTabToSelfShareActivity;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.share.share_sheet.ShareSheetCoordinator;
 import org.chromium.chrome.browser.share.share_sheet.ShareSheetPropertyModelBuilder;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tab.SadTab;
 import org.chromium.chrome.browser.tab.Tab;
 import org.chromium.components.browser_ui.bottomsheet.BottomSheetController;
@@ -84,7 +83,7 @@ public class ShareDelegateImpl implements ShareDelegate {
         if (mShareStartTime == 0L) {
             mShareStartTime = System.currentTimeMillis();
         }
-        boolean isSyncEnabled = SyncService.get() != null && SyncService.get().isSyncRequested();
+        boolean isSyncEnabled = false;
         mDelegate.share(params, chromeShareExtras, mBottomSheetController, mLifecycleDispatcher,
                 mTabProvider, this::printTab, shareOrigin, isSyncEnabled, mShareStartTime,
                 isSharingHubEnabled());
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/share/ShareRegistrationCoordinator.java b/chrome/android/java/src/org/chromium/chrome/browser/share/ShareRegistrationCoordinator.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/share/ShareRegistrationCoordinator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/share/ShareRegistrationCoordinator.java
@@ -21,7 +21,6 @@ import org.chromium.base.supplier.Supplier;
 import org.chromium.chrome.browser.send_tab_to_self.SendTabToSelfShareActivity;
 import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.share.send_tab_to_self.SendTabToSelfCoordinator;
-import org.chromium.chrome.browser.sync.SyncService;
 import org.chromium.chrome.browser.tab.Tab;
 import org.chromium.components.browser_ui.bottomsheet.BottomSheetController;
 import org.chromium.content_public.browser.NavigationEntry;
@@ -207,7 +206,7 @@ public class ShareRegistrationCoordinator {
     void doSendTabToSelfShare(@NonNull Context context, @Nullable NavigationEntry entry,
             @NonNull BottomSheetController bottomSheetController) {
         if (entry == null) return;
-        boolean isSyncEnabled = SyncService.get() != null && SyncService.get().isSyncRequested();
+        boolean isSyncEnabled = false;
         bottomSheetController.requestShowContent(
                 SendTabToSelfCoordinator.createBottomSheetContent(context, entry.getUrl().getSpec(),
                         entry.getTitle(), entry.getTimestamp(), bottomSheetController,
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardShareActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardShareActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardShareActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/sharing/shared_clipboard/SharedClipboardShareActivity.java
@@ -26,7 +26,6 @@ import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.sharing.SharingAdapter;
 import org.chromium.chrome.browser.sharing.SharingServiceProxy;
 import org.chromium.chrome.browser.sharing.SharingServiceProxy.DeviceInfo;
-import org.chromium.chrome.browser.sync.AndroidSyncSettings;
 import org.chromium.components.browser_ui.settings.SettingsLauncher;
 import org.chromium.components.sync.protocol.SharingSpecificFields;
 import org.chromium.ui.widget.ButtonCompat;
@@ -77,13 +76,11 @@ public class SharedClipboardShareActivity
         mask.setOnClickListener(v -> finish());
 
         ButtonCompat chromeSettingsButton = findViewById(R.id.chrome_settings);
-        if (!AndroidSyncSettings.get().isChromeSyncEnabled()) {
             chromeSettingsButton.setVisibility(View.VISIBLE);
             chromeSettingsButton.setOnClickListener(view -> {
                 SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
                 settingsLauncher.launchSettingsActivity(ContextUtils.getApplicationContext());
             });
-        }
 
         onInitialLayoutInflationComplete();
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
@@ -42,7 +42,6 @@ import org.chromium.chrome.browser.compositor.layouts.content.TabContentManager;
 import org.chromium.chrome.browser.contextualsearch.ContextualSearchManager;
 import org.chromium.chrome.browser.continuous_search.ContinuousSearchContainerCoordinator;
 import org.chromium.chrome.browser.continuous_search.ContinuousSearchContainerCoordinator.HeightObserver;
-import org.chromium.chrome.browser.datareduction.DataReductionPromoScreen;
 import org.chromium.chrome.browser.feed.shared.FeedFeatures;
 import org.chromium.chrome.browser.feed.webfeed.WebFeedFollowIntroController;
 import org.chromium.chrome.browser.findinpage.FindToolbarObserver;
@@ -78,8 +77,6 @@ import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
 import org.chromium.chrome.browser.share.ShareDelegate;
 import org.chromium.chrome.browser.share.link_to_text.LinkToTextIPHController;
 import org.chromium.chrome.browser.share.scroll_capture.ScrollCaptureManager;
-import org.chromium.chrome.browser.signin.SyncConsentActivityLauncherImpl;
-import org.chromium.chrome.browser.signin.ui.SigninPromoUtil;
 import org.chromium.chrome.browser.status_indicator.StatusIndicatorCoordinator;
 import org.chromium.chrome.browser.subscriptions.CommerceSubscriptionsService;
 import org.chromium.chrome.browser.subscriptions.CommerceSubscriptionsServiceFactory;
@@ -887,23 +884,6 @@ public class TabbedRootUiCoordinator extends RootUiCoordinator {
     }
 
     private boolean maybeShowPromo() {
-        // Only one promo can be shown in one run to avoid nagging users too much.
-        if (SigninPromoUtil.launchSigninPromoIfNeeded(mActivity,
-                    SyncConsentActivityLauncherImpl.get(),
-                    ChromeVersionInfo.getProductMajorVersion())) {
-            return true;
-        }
-        if (DataReductionPromoScreen.launchDataReductionPromo(
-                    mActivity, mTabModelSelectorSupplier.get().isIncognitoSelected())) {
-            return true;
-        }
-        if (DefaultBrowserPromoUtils.prepareLaunchPromoIfNeeded(mActivity, mWindowAndroid)) {
-            return true;
-        }
-        if (AppLanguagePromoDialog.maybeShowPrompt(mActivity, mModalDialogManagerSupplier,
-                    () -> ApplicationLifetime.terminate(true))) {
-            return true;
-        }
-        return LanguageAskPrompt.maybeShowLanguageAskPrompt(mActivity, mModalDialogManagerSupplier);
+        return false;
     }
 }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tasks/ReturnToChromeExperimentsUtil.java b/chrome/android/java/src/org/chromium/chrome/browser/tasks/ReturnToChromeExperimentsUtil.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/tasks/ReturnToChromeExperimentsUtil.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tasks/ReturnToChromeExperimentsUtil.java
@@ -38,7 +38,6 @@ import org.chromium.chrome.browser.preferences.ChromePreferenceKeys;
 import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.segmentation_platform.SegmentationPlatformServiceFactory;
-import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
 import org.chromium.chrome.browser.tab.Tab;
 import org.chromium.chrome.browser.tab.TabLaunchType;
 import org.chromium.chrome.browser.tabmodel.TabModel;
@@ -52,7 +51,6 @@ import org.chromium.components.embedder_support.util.UrlConstants;
 import org.chromium.components.embedder_support.util.UrlUtilities;
 import org.chromium.components.optimization_guide.proto.ModelsProto.OptimizationTarget;
 import org.chromium.components.segmentation_platform.SegmentationPlatformService;
-import org.chromium.components.signin.identitymanager.ConsentLevel;
 import org.chromium.content_public.browser.LoadUrlParams;
 import org.chromium.content_public.common.ResourceRequestBody;
 import org.chromium.ui.base.DeviceFormFactor;
@@ -533,13 +531,8 @@ public final class ReturnToChromeExperimentsUtil {
      * Caches the status of whether the primary account is synced.
      */
     public static void cachePrimaryAccountSyncStatus() {
-        boolean isPrimaryAccountSync =
-                IdentityServicesProvider.get()
-                        .getSigninManager(Profile.getLastUsedRegularProfile())
-                        .getIdentityManager()
-                        .hasPrimaryAccount(ConsentLevel.SYNC);
         SharedPreferencesManager.getInstance().writeBoolean(
-                ChromePreferenceKeys.PRIMARY_ACCOUNT_SYNC, isPrimaryAccountSync);
+                ChromePreferenceKeys.PRIMARY_ACCOUNT_SYNC, false);
     }
 
     /**
diff --git a/chrome/browser/BUILD.gn b/chrome/browser/BUILD.gn
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -2889,8 +2889,6 @@ static_library("browser") {
       "android/signin/fre_mobile_identity_consistency_field_trial.h",
       "android/signin/signin_bridge.cc",
       "android/signin/signin_bridge.h",
-      "android/signin/signin_manager_android.cc",
-      "android/signin/signin_manager_android.h",
       "android/signin/signin_metrics_utils.cc",
       "android/signin/unified_consent_service_bridge.cc",
       "android/signin/web_signin_bridge.cc",
@@ -3255,8 +3253,6 @@ static_library("browser") {
       "sharing/sms/sms_fetch_request_handler.h",
       "shell_integration_android.cc",
       "signin/identity_services_provider_android.cc",
-      "signin/signin_manager_android_factory.cc",
-      "signin/signin_manager_android_factory.h",
       "ssl/chrome_security_state_client.cc",
       "ssl/chrome_security_state_client.h",
       "ssl/chrome_security_state_model_delegate.cc",
@@ -3271,8 +3267,6 @@ static_library("browser") {
       "sync/glue/synced_window_delegate_android.h",
       "sync/glue/synced_window_delegates_getter_android.cc",
       "sync/glue/synced_window_delegates_getter_android.h",
-      "sync/sync_error_infobar_delegate_android.cc",
-      "sync/sync_error_infobar_delegate_android.h",
       "sync/sync_service_android_bridge.cc",
       "sync/sync_service_android_bridge.h",
       "sync/trusted_vault_client_android.cc",
@@ -6143,10 +6137,6 @@ static_library("browser") {
       "signin/logout_tab_helper.h",
       "signin/process_dice_header_delegate_impl.cc",
       "signin/process_dice_header_delegate_impl.h",
-      "signin/signin_manager.cc",
-      "signin/signin_manager.h",
-      "signin/signin_manager_factory.cc",
-      "signin/signin_manager_factory.h",
     ]
     if (is_win) {
       sources += [
diff --git a/chrome/browser/signin/identity_services_provider_android.cc b/chrome/browser/signin/identity_services_provider_android.cc
--- a/chrome/browser/signin/identity_services_provider_android.cc
+++ b/chrome/browser/signin/identity_services_provider_android.cc
@@ -6,7 +6,6 @@
 #include "chrome/browser/profiles/profile_android.h"
 #include "chrome/browser/signin/identity_manager_factory.h"
 #include "chrome/browser/signin/services/android/jni_headers/IdentityServicesProvider_jni.h"
-#include "chrome/browser/signin/signin_manager_android_factory.h"
 #include "components/signin/public/identity_manager/identity_manager.h"
 
 using base::android::JavaParamRef;
@@ -29,11 +28,3 @@ JNI_IdentityServicesProvider_GetAccountTrackerService(
       IdentityManagerFactory::GetForProfile(profile);
   return identity_manager->LegacyGetAccountTrackerServiceJavaObject();
 }
-
-static ScopedJavaLocalRef<jobject>
-JNI_IdentityServicesProvider_GetSigninManager(
-    JNIEnv* env,
-    const JavaParamRef<jobject>& j_profile_android) {
-  Profile* profile = ProfileAndroid::FromProfileAndroid(j_profile_android);
-  return SigninManagerAndroidFactory::GetJavaObjectForProfile(profile);
-}
diff --git a/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/IdentityServicesProvider.java b/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/IdentityServicesProvider.java
--- a/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/IdentityServicesProvider.java
+++ b/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/IdentityServicesProvider.java
@@ -61,23 +61,9 @@ public class IdentityServicesProvider {
         return result;
     }
 
-    /**
-     * Getter for {@link SigninManager} instance for given profile.
-     * @param profile The profile to get regarding sign-in manager.
-     * @return a {@link SigninManager} instance.
-     */
-    @MainThread
-    public SigninManager getSigninManager(Profile profile) {
-        ThreadUtils.assertOnUiThread();
-        SigninManager result = IdentityServicesProviderJni.get().getSigninManager(profile);
-        assert result != null;
-        return result;
-    }
-
     @NativeMethods
     public interface Natives {
         IdentityManager getIdentityManager(Profile profile);
         AccountTrackerService getAccountTrackerService(Profile profile);
-        SigninManager getSigninManager(Profile profile);
     }
 }
diff --git a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmImportSyncDataDialogCoordinator.java b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmImportSyncDataDialogCoordinator.java
--- a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmImportSyncDataDialogCoordinator.java
+++ b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmImportSyncDataDialogCoordinator.java
@@ -13,7 +13,6 @@ import androidx.annotation.MainThread;
 
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.chrome.browser.profiles.Profile;
-import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
 import org.chromium.components.browser_ui.settings.ManagedPreferencesUtils;
 import org.chromium.components.browser_ui.widget.RadioButtonWithDescription;
 import org.chromium.ui.modaldialog.DialogDismissalCause;
@@ -80,11 +79,7 @@ public class ConfirmImportSyncDataDialogCoordinator {
         mKeepSeparateOption =
                 mConfirmImportSyncDataView.findViewById(R.id.sync_keep_separate_choice);
 
-        boolean isCurrentAccountManaged =
-                IdentityServicesProvider.get()
-                        .getSigninManager(Profile.getLastUsedRegularProfile())
-                        .getManagementDomain()
-                != null;
+        boolean isCurrentAccountManaged = false;
         mModel = new PropertyModel.Builder(ModalDialogProperties.ALL_KEYS)
                          .with(ModalDialogProperties.CANCEL_ON_TOUCH_OUTSIDE, true)
                          .with(ModalDialogProperties.POSITIVE_BUTTON_TEXT,
diff --git a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmSyncDataStateMachine.java b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmSyncDataStateMachine.java
--- a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmSyncDataStateMachine.java
+++ b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/ConfirmSyncDataStateMachine.java
@@ -175,9 +175,6 @@ public class ConfirmSyncDataStateMachine implements ConfirmImportSyncDataDialogC
     }
 
     private void requestNewAccountManagementStatus() {
-        IdentityServicesProvider.get()
-                .getSigninManager(Profile.getLastUsedRegularProfile())
-                .isAccountManaged(mNewAccountName, this::setIsNewAccountManaged);
     }
 
     private void setIsNewAccountManaged(Boolean isManaged) {
@@ -193,17 +190,8 @@ public class ConfirmSyncDataStateMachine implements ConfirmImportSyncDataDialogC
         assert mNewAccountManaged != null;
         assert mState == State.AFTER_NEW_ACCOUNT_DIALOG;
 
-        if (mNewAccountManaged) {
-            // Show 'logging into managed account' dialog
-            // This will call back into onConfirm on success.
-            mDelegate.showSignInToManagedAccountDialog(this,
-                    IdentityServicesProvider.get()
-                            .getSigninManager(Profile.getLastUsedRegularProfile())
-                            .extractDomainName(mNewAccountName));
-        } else {
-            mDelegate.dismissAllDialogs();
-            progress();
-        }
+        mDelegate.dismissAllDialogs();
+        progress();
     }
 
     private void showProgressDialog() {
diff --git a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SignOutDialogFragment.java b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SignOutDialogFragment.java
--- a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SignOutDialogFragment.java
+++ b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SignOutDialogFragment.java
@@ -19,7 +19,6 @@ import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.profiles.ProfileAccountManagementMetrics;
 import org.chromium.chrome.browser.signin.services.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.services.SigninManager;
 import org.chromium.chrome.browser.signin.services.SigninMetricsUtils;
 import org.chromium.components.signin.GAIAServiceType;
 
@@ -67,12 +66,6 @@ public class SignOutDialogFragment
             mGaiaServiceType =
                     getArguments().getInt(SHOW_GAIA_SERVICE_TYPE_EXTRA, mGaiaServiceType);
         }
-        String domain = IdentityServicesProvider.get()
-                                .getSigninManager(Profile.getLastUsedRegularProfile())
-                                .getManagementDomain();
-        if (domain != null) {
-            return createDialogForManagedAccount(domain);
-        }
 
         return createDialog();
     }
@@ -108,12 +101,6 @@ public class SignOutDialogFragment
         if (which == AlertDialog.BUTTON_POSITIVE) {
             SigninMetricsUtils.logProfileAccountManagementMenu(
                     ProfileAccountManagementMetrics.SIGNOUT_SIGNOUT, mGaiaServiceType);
-            SigninManager signinManager = IdentityServicesProvider.get().getSigninManager(
-                    Profile.getLastUsedRegularProfile());
-            if (signinManager.getManagementDomain() == null) {
-                RecordHistogram.recordBooleanHistogram(
-                        "Signin.UserRequestedWipeDataOnSignout", mWipeUserData.isChecked());
-            }
             SignOutDialogListener targetFragment = (SignOutDialogListener) getTargetFragment();
             targetFragment.onSignOutClicked(mWipeUserData != null && mWipeUserData.isChecked());
         }
diff --git a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SigninPromoController.java b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SigninPromoController.java
--- a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SigninPromoController.java
+++ b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/SigninPromoController.java
@@ -89,20 +89,7 @@ public class SigninPromoController {
      * @param accessPoint The access point for which the impression limit is being checked.
      */
     public static boolean canShowSyncPromo(@AccessPoint int accessPoint) {
-        switch (accessPoint) {
-            case SigninAccessPoint.BOOKMARK_MANAGER:
-                return canShowBookmarkPromo();
-            case SigninAccessPoint.NTP_CONTENT_SUGGESTIONS:
-                return canShowNTPPromo();
-            case SigninAccessPoint.RECENT_TABS:
-                // There is no impression limit or dismiss button in Recent Tabs promo.
-                return true;
-            case SigninAccessPoint.SETTINGS:
-                return canShowSettingsPromo();
-            default:
-                assert false : "Unexpected value for access point: " + accessPoint;
-                return false;
-        }
+        return false;
     }
 
     /**
diff --git a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/account_picker/AccountPickerDelegateImpl.java b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/account_picker/AccountPickerDelegateImpl.java
--- a/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/account_picker/AccountPickerDelegateImpl.java
+++ b/chrome/browser/signin/ui/android/java/src/org/chromium/chrome/browser/signin/ui/account_picker/AccountPickerDelegateImpl.java
@@ -41,7 +41,6 @@ public class AccountPickerDelegateImpl implements WebSigninBridge.Listener, Acco
     private final Tab mCurrentTab;
     private final WebSigninBridge.Factory mWebSigninBridgeFactory;
     private final String mContinueUrl;
-    private final SigninManager mSigninManager;
     private final IdentityManager mIdentityManager;
     private @Nullable WebSigninBridge mWebSigninBridge;
     private Callback<GoogleServiceAuthError> mOnSignInErrorCallback;
@@ -61,8 +60,6 @@ public class AccountPickerDelegateImpl implements WebSigninBridge.Listener, Acco
         mCurrentTab = currentTab;
         mWebSigninBridgeFactory = webSigninBridgeFactory;
         mContinueUrl = continueUrl;
-        mSigninManager = IdentityServicesProvider.get().getSigninManager(
-                Profile.getLastUsedRegularProfile());
         mIdentityManager = IdentityServicesProvider.get().getIdentityManager(
                 Profile.getLastUsedRegularProfile());
     }
@@ -87,26 +84,11 @@ public class AccountPickerDelegateImpl implements WebSigninBridge.Listener, Acco
             // if user retries the sign-in from the error screen, we need to sign out the user
             // first before signing in again.
             destroyWebSigninBridge();
-            // TODO(https://crbug.com/1133752): Revise sign-out reason
-            mSigninManager.signOut(SignoutReason.ABORT_SIGNIN);
         }
         mOnSignInErrorCallback = onSignInErrorCallback;
         AccountInfoServiceProvider.get().getAccountInfoByEmail(accountEmail).then(accountInfo -> {
             mWebSigninBridge = mWebSigninBridgeFactory.create(
                     Profile.getLastUsedRegularProfile(), accountInfo, this);
-            mSigninManager.signin(AccountUtils.createAccountFromName(accountEmail),
-                    new SigninManager.SignInCallback() {
-                        @Override
-                        public void onSignInComplete() {
-                            // After the sign-in is finished in Chrome, we still need to wait for
-                            // WebSigninBridge to be called to redirect to the continue url.
-                        }
-
-                        @Override
-                        public void onSignInAborted() {
-                            AccountPickerDelegateImpl.this.destroyWebSigninBridge();
-                        }
-                    });
         });
     }
 
diff --git a/chrome/browser/sync/sync_service_factory.cc b/chrome/browser/sync/sync_service_factory.cc
--- a/chrome/browser/sync/sync_service_factory.cc
+++ b/chrome/browser/sync/sync_service_factory.cc
@@ -78,7 +78,7 @@
 #include "chrome/browser/sync/wifi_configuration_sync_service_factory.h"
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
 
-namespace {
+/*namespace {
 
 std::unique_ptr<KeyedService> BuildSyncService(
     content::BrowserContext* context) {
@@ -175,7 +175,7 @@ std::unique_ptr<KeyedService> BuildSyncService(
   return sync_service;
 }
 
-}  // anonymous namespace
+}*/  // anonymous namespace
 
 // static
 SyncServiceFactory* SyncServiceFactory::GetInstance() {
@@ -260,7 +260,7 @@ SyncServiceFactory::~SyncServiceFactory() = default;
 
 KeyedService* SyncServiceFactory::BuildServiceInstanceFor(
     content::BrowserContext* context) const {
-  return BuildSyncService(context).release();
+  return nullptr;
 }
 
 bool SyncServiceFactory::ServiceIsNULLWhileTesting() const {
@@ -302,9 +302,3 @@ SyncServiceFactory::GetAllSyncServices() {
   }
   return sync_services;
 }
-
-// static
-BrowserContextKeyedServiceFactory::TestingFactory
-SyncServiceFactory::GetDefaultFactory() {
-  return base::BindRepeating(&BuildSyncService);
-}
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -278,9 +278,6 @@ CHAR_LIMIT guidelines:
       <message name="IDS_SIGN_IN_TO_CHROME" desc="Title for the button to sign in to Chrome using one's Google account. [CHAR_LIMIT=27]">
         Sign in to Chrome
       </message>
-      <message name="IDS_PREFS_MANAGE_SYNC_SETTINGS_CONTENT_DESCRIPTION" is_accessibility_with_no_ui="true" desc="The accessibility text to read when the 'Manage Sync Settings' page is opened from the sign-in page. This text is attached to the 'Navigate Up' button shown at the top of the screen. The first two sentences describe the screen that is currently shown to the user, while 'Navigate up' is a description for the button this text is attached to. 'Navigate up' should match TC ID 6794660482873516081.">
-        You are currently customizing your Sync settings. To finish turning on sync, tap the Confirm button near the bottom of the screen. Navigate up
-      </message>
       <message name="IDS_SIGNIN_PREF_SUMMARY" desc="Summary for the entry in Settings to sign in to Chrome, explaining benefits of signing in.">
         Sync and personalize across devices
       </message>
@@ -336,15 +333,6 @@ CHAR_LIMIT guidelines:
       <message name="IDS_PRELOAD_PAGES_SUMMARY" desc="Summary for a checkbox in Settings that controls pages preloading and informs the user about the data shared by this feature.">
         Preloads pages that Chrome thinks you might visit. To do this, Chrome may use cookies, if you allow cookies, and may encrypt and send pages through Google to hide your identity from sites.
       </message>
-      <message name="IDS_PRIVACY_SYNC_AND_SERVICES_LINK_LEGACY" desc="The text for Privacy preferences that is shown after all preference rows.">
-        For more settings that relate to privacy, security, and data collection, see <ph name="BEGIN_LINK">&lt;link&gt;</ph>Sync and Google services<ph name="END_LINK">&lt;/link&gt;</ph>
-      </message>
-      <message name="IDS_PRIVACY_SYNC_AND_SERVICES_LINK_SYNC_ON" desc="The text for Privacy preferences that is shown after all preference rows. This version of the text is shown if Sync has been turned on.">
-        For more settings that relate to privacy, security, and data collection, see <ph name="BEGIN_LINK1">&lt;link1&gt;</ph>Sync<ph name="END_LINK1">&lt;/link1&gt;</ph> and <ph name="BEGIN_LINK2">&lt;link2&gt;</ph>Google services<ph name="END_LINK2">&lt;/link2&gt;</ph>
-      </message>
-      <message name="IDS_PRIVACY_SYNC_AND_SERVICES_LINK_SYNC_OFF" desc="The text for Privacy preferences that is shown after all preference rows. This version of the text is shown if Sync hasn't been turned on.">
-        For more settings that relate to privacy, security, and data collection, see <ph name="BEGIN_LINK">&lt;link&gt;</ph>Google services<ph name="END_LINK">&lt;/link&gt;</ph>
-      </message>
 
       <!-- Metrics settings -->
       <message name="IDS_PREFS_METRICS_SETTINGS" desc="Title for the page that allows the user to control how much usage data Chrome uploads. [CHAR_LIMIT=32]">
diff --git a/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java b/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
--- a/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
+++ b/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
@@ -131,13 +131,6 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
     }
 
     protected boolean hasFeatures(Account account, String[] features) {
-        if (hasGetAccountsPermission()) {
-            try {
-                return mAccountManager.hasFeatures(account, features, null, null).getResult();
-            } catch (AuthenticatorException | IOException | OperationCanceledException e) {
-                Log.e(TAG, "Error while checking features: ", e);
-            }
-        }
         return false;
     }
 
@@ -178,32 +171,10 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
     public void updateCredentials(
             Account account, Activity activity, final Callback<Boolean> callback) {
         ThreadUtils.assertOnUiThread();
-        if (!hasManageAccountsPermission()) {
-            if (callback != null) {
-                ThreadUtils.postOnUiThread(callback.bind(false));
-            }
-            return;
+        if (callback != null) {
+            ThreadUtils.postOnUiThread(callback.bind(false));
         }
-
-        AccountManagerCallback<Bundle> realCallback = future -> {
-            Bundle bundle = null;
-            try {
-                bundle = future.getResult();
-            } catch (AuthenticatorException | IOException e) {
-                Log.e(TAG, "Error while update credentials: ", e);
-            } catch (OperationCanceledException e) {
-                Log.w(TAG, "Updating credentials was cancelled.");
-            }
-            boolean success =
-                    bundle != null && bundle.getString(AccountManager.KEY_ACCOUNT_TYPE) != null;
-            if (callback != null) {
-                callback.onResult(success);
-            }
-        };
-        // Android 4.4 throws NullPointerException if null is passed
-        Bundle emptyOptions = new Bundle();
-        mAccountManager.updateCredentials(
-                account, "android", emptyOptions, activity, realCallback, null);
+        return;
     }
 
     @Nullable
diff --git a/net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java b/net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java
--- a/net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java
+++ b/net/android/java/src/org/chromium/net/HttpNegotiateAuthenticator.java
@@ -98,54 +98,8 @@ public class HttpNegotiateAuthenticator {
 
         @Override
         public void run(AccountManagerFuture<Account[]> future) {
-            Account[] accounts;
-            try {
-                accounts = future.getResult();
-            } catch (OperationCanceledException | AuthenticatorException | IOException e) {
-                Log.w(TAG, "ERR_UNEXPECTED: Error while attempting to retrieve accounts.", e);
-                HttpNegotiateAuthenticatorJni.get().setResult(mRequestData.nativeResultObject,
-                        HttpNegotiateAuthenticator.this, NetError.ERR_UNEXPECTED, null);
-                return;
-            }
-
-            if (accounts.length == 0) {
-                Log.w(TAG, "ERR_MISSING_AUTH_CREDENTIALS: No account provided for the kerberos "
-                                + "authentication. Please verify the configuration policies and "
-                                + "that the CONTACTS runtime permission is granted. ");
-                HttpNegotiateAuthenticatorJni.get().setResult(mRequestData.nativeResultObject,
-                        HttpNegotiateAuthenticator.this, NetError.ERR_MISSING_AUTH_CREDENTIALS,
-                        null);
-                return;
-            }
-
-            if (accounts.length > 1) {
-                Log.w(TAG, "ERR_MISSING_AUTH_CREDENTIALS: Found %d accounts eligible for the "
-                                + "kerberos authentication. Please fix the configuration by "
-                                + "providing a single account.",
-                        accounts.length);
-                HttpNegotiateAuthenticatorJni.get().setResult(mRequestData.nativeResultObject,
-                        HttpNegotiateAuthenticator.this, NetError.ERR_MISSING_AUTH_CREDENTIALS,
-                        null);
-                return;
-            }
-
-            if (lacksPermission(ContextUtils.getApplicationContext(),
-                        "android.permission.USE_CREDENTIALS", true)) {
-                // Protecting the AccountManager#getAuthToken call.
-                // API  < 23 Requires the USE_CREDENTIALS permission or throws an exception.
-                // API >= 23 USE_CREDENTIALS permission is removed
-                Log.e(TAG, "ERR_MISCONFIGURED_AUTH_ENVIRONMENT: USE_CREDENTIALS permission not "
-                                + "granted. Aborting authentication.");
-                HttpNegotiateAuthenticatorJni.get().setResult(mRequestData.nativeResultObject,
-                        HttpNegotiateAuthenticator.this,
-                        NetError.ERR_MISCONFIGURED_AUTH_ENVIRONMENT, null);
-                return;
-            }
-            mRequestData.account = accounts[0];
-            mRequestData.accountManager.getAuthToken(mRequestData.account,
-                    mRequestData.authTokenType, mRequestData.options, true /* notifyAuthFailure */,
-                    new GetTokenCallback(mRequestData),
-                    new Handler(ThreadUtils.getUiThreadLooper()));
+            // account-based authentication removed for privacy-violations concerns
+            return;
         }
     }
 
@@ -158,42 +112,8 @@ public class HttpNegotiateAuthenticator {
 
         @Override
         public void run(AccountManagerFuture<Bundle> future) {
-            Bundle result;
-            try {
-                result = future.getResult();
-            } catch (OperationCanceledException | AuthenticatorException | IOException e) {
-                Log.w(TAG, "ERR_UNEXPECTED: Error while attempting to obtain a token.", e);
-                HttpNegotiateAuthenticatorJni.get().setResult(mRequestData.nativeResultObject,
-                        HttpNegotiateAuthenticator.this, NetError.ERR_UNEXPECTED, null);
-                return;
-            }
-
-            if (result.containsKey(AccountManager.KEY_INTENT)) {
-                final Context appContext = ContextUtils.getApplicationContext();
-
-                // We wait for a broadcast that should be sent once the user is done interacting
-                // with the notification
-                // TODO(dgn) We currently hang around if the notification is swiped away, until
-                // a LOGIN_ACCOUNTS_CHANGED_ACTION filter is received. It might be for something
-                // unrelated then we would wait again here. Maybe we should limit the number of
-                // retries in some way?
-                BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
-
-                    @Override
-                    public void onReceive(Context context, Intent intent) {
-                        appContext.unregisterReceiver(this);
-                        mRequestData.accountManager.getAuthToken(mRequestData.account,
-                                mRequestData.authTokenType, mRequestData.options,
-                                true /* notifyAuthFailure */, new GetTokenCallback(mRequestData),
-                                null);
-                    }
-
-                };
-                appContext.registerReceiver(broadcastReceiver,
-                        new IntentFilter(AccountManager.LOGIN_ACCOUNTS_CHANGED_ACTION));
-            } else {
-                processResult(result, mRequestData);
-            }
+            // account-based authentication removed for privacy-violations concerns
+            return;
         }
     }
 
diff --git a/remoting/android/java/src/org/chromium/chromoting/base/OAuthTokenFetcher.java b/remoting/android/java/src/org/chromium/chromoting/base/OAuthTokenFetcher.java
--- a/remoting/android/java/src/org/chromium/chromoting/base/OAuthTokenFetcher.java
+++ b/remoting/android/java/src/org/chromium/chromoting/base/OAuthTokenFetcher.java
@@ -93,7 +93,6 @@ public class OAuthTokenFetcher {
 
     /** Begins fetching a token. Should be called on the main thread. */
     public void fetch() {
-        fetchImpl(null);
     }
 
     /**
@@ -102,7 +101,6 @@ public class OAuthTokenFetcher {
      * @param expiredToken A previously-fetched token which has expired.
      */
     public void clearAndFetch(String expiredToken) {
-        fetchImpl(expiredToken);
     }
 
     private void fetchImpl(final String expiredToken) {
-- 
2.20.1

