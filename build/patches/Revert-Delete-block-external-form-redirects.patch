From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Thu, 16 Jun 2022 23:23:43 +0200
Subject: Revert "Delete block-external-form-redirects"

This reverts commit b710cefb53b558a8bcd884f6baf0229ba4225721.

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 chrome/browser/about_flags.cc                 |  7 ++++
 chrome/browser/flag-metadata.json             |  5 +++
 chrome/browser/flag_descriptions.cc           |  6 +++
 chrome/browser/flag_descriptions.h            |  3 ++
 components/external_intents/android/BUILD.gn  | 12 +++++-
 .../android/external_intents_features.cc      | 35 ++++++++++++++++
 .../android/external_intents_features.h       | 17 ++++++++
 .../ExternalIntentsFeatures.java              | 42 +++++++++++++++++++
 .../ExternalNavigationHandler.java            | 19 +++++++++
 .../ExternalNavigationHandlerTest.java        | 11 +++--
 10 files changed, 151 insertions(+), 6 deletions(-)
 create mode 100644 components/external_intents/android/external_intents_features.cc
 create mode 100644 components/external_intents/android/external_intents_features.h
 create mode 100644 components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java

diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -222,6 +222,7 @@
 #include "components/browser_ui/photo_picker/android/features.h"
 #include "components/content_creation/notes/core/note_features.h"
 #include "components/content_creation/reactions/core/reactions_features.h"
+#include "components/external_intents/android/external_intents_features.h"
 #include "components/translate/content/android/translate_message.h"
 #include "components/webapps/browser/features.h"
 #else  // BUILDFLAG(IS_ANDROID)
@@ -7014,6 +7015,12 @@ const FeatureEntry kFeatureEntries[] = {
 #endif  // BUILDFLAG(ENABLE_PAINT_PREVIEW) && BUILDFLAG(IS_ANDROID)
 
 #if BUILDFLAG(IS_ANDROID)
+    {"block-external-form-redirects-no-gesture",
+     flag_descriptions::kIntentBlockExternalFormRedirectsNoGestureName,
+     flag_descriptions::kIntentBlockExternalFormRedirectsNoGestureDescription,
+     kOsAndroid,
+     FEATURE_VALUE_TYPE(
+         external_intents::kIntentBlockExternalFormRedirectsNoGesture)},
     {"recover-from-never-save-android",
      flag_descriptions::kRecoverFromNeverSaveAndroidName,
      flag_descriptions::kRecoverFromNeverSaveAndroidDescription, kOsAndroid,
diff --git a/chrome/browser/flag-metadata.json b/chrome/browser/flag-metadata.json
--- a/chrome/browser/flag-metadata.json
+++ b/chrome/browser/flag-metadata.json
@@ -582,6 +582,11 @@
     "owners": [ "ioanap" ],
     "expiry_milestone": 104
   },
+  {
+    "name": "block-external-form-redirects-no-gesture",
+    "owners": [ "jochen", "tedchoc" ],
+    "expiry_milestone": 89
+  },
   {
     "name": "block-insecure-private-network-requests",
     "owners": [ "titouan", "chrome-security-owp-team@google.com" ],
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -3358,6 +3358,12 @@ const char kInstantStartName[] = "Instant start";
 const char kInstantStartDescription[] =
     "Show start surface before native library is loaded.";
 
+const char kIntentBlockExternalFormRedirectsNoGestureName[] =
+    "Block intents from form submissions without user gesture";
+const char kIntentBlockExternalFormRedirectsNoGestureDescription[] =
+    "Require a user gesture that triggered a form submission in order to "
+    "allow for redirecting to an external intent.";
+
 const char kInterestFeedV2Name[] = "Interest Feed v2";
 const char kInterestFeedV2Description[] =
     "Show content suggestions on the New Tab Page and Start Surface using the "
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -1906,6 +1906,9 @@ extern const char kInstanceSwitcherDescription[];
 extern const char kInstantStartName[];
 extern const char kInstantStartDescription[];
 
+extern const char kIntentBlockExternalFormRedirectsNoGestureName[];
+extern const char kIntentBlockExternalFormRedirectsNoGestureDescription[];
+
 extern const char kInterestFeedV2Name[];
 extern const char kInterestFeedV2Description[];
 
diff --git a/components/external_intents/android/BUILD.gn b/components/external_intents/android/BUILD.gn
--- a/components/external_intents/android/BUILD.gn
+++ b/components/external_intents/android/BUILD.gn
@@ -7,6 +7,7 @@ import("//build/config/android/rules.gni")
 android_library("java") {
   sources = [
     "java/src/org/chromium/components/external_intents/AuthenticatorNavigationInterceptor.java",
+    "java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java",
     "java/src/org/chromium/components/external_intents/ExternalIntentsSwitches.java",
     "java/src/org/chromium/components/external_intents/ExternalNavigationDelegate.java",
     "java/src/org/chromium/components/external_intents/ExternalNavigationHandler.java",
@@ -46,11 +47,18 @@ android_resources("java_resources") {
 }
 
 generate_jni("jni_headers") {
-  sources = [ "java/src/org/chromium/components/external_intents/InterceptNavigationDelegateImpl.java" ]
+  sources = [
+    "java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java",
+    "java/src/org/chromium/components/external_intents/InterceptNavigationDelegateImpl.java",
+  ]
 }
 
 static_library("android") {
-  sources = [ "intercept_navigation_delegate_impl.cc" ]
+  sources = [
+    "external_intents_features.cc",
+    "external_intents_features.h",
+    "intercept_navigation_delegate_impl.cc",
+  ]
 
   deps = [
     ":jni_headers",
diff --git a/components/external_intents/android/external_intents_features.cc b/components/external_intents/android/external_intents_features.cc
new file mode 100644
--- /dev/null
+++ b/components/external_intents/android/external_intents_features.cc
@@ -0,0 +1,35 @@
+// Copyright 2020 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "components/external_intents/android/external_intents_features.h"
+
+#include <jni.h>
+#include <stddef.h>
+#include <string>
+
+#include "base/android/jni_string.h"
+#include "base/notreached.h"
+#include "components/external_intents/android/jni_headers/ExternalIntentsFeatures_jni.h"
+
+namespace external_intents {
+
+namespace {
+
+// Array of features exposed through the Java ExternalIntentsFeatures API.
+const base::Feature* kFeaturesExposedToJava[] = {
+    &kIntentBlockExternalFormRedirectsNoGesture,
+};
+
+}  // namespace
+
+// Alphabetical:
+const base::Feature kIntentBlockExternalFormRedirectsNoGesture{
+    "IntentBlockExternalFormRedirectsNoGesture",
+    base::FEATURE_DISABLED_BY_DEFAULT};
+
+static jlong JNI_ExternalIntentsFeatures_GetFeature(JNIEnv* env, jint ordinal) {
+  return reinterpret_cast<jlong>(kFeaturesExposedToJava[ordinal]);
+}
+
+}  // namespace external_intents
diff --git a/components/external_intents/android/external_intents_features.h b/components/external_intents/android/external_intents_features.h
new file mode 100644
--- /dev/null
+++ b/components/external_intents/android/external_intents_features.h
@@ -0,0 +1,17 @@
+// Copyright 2020 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef COMPONENTS_EXTERNAL_INTENTS_ANDROID_EXTERNAL_INTENTS_FEATURES_H_
+#define COMPONENTS_EXTERNAL_INTENTS_ANDROID_EXTERNAL_INTENTS_FEATURES_H_
+
+#include "base/feature_list.h"
+
+namespace external_intents {
+
+// Alphabetical:
+extern const base::Feature kIntentBlockExternalFormRedirectsNoGesture;
+
+}  // namespace external_intents
+
+#endif  // COMPONENTS_EXTERNAL_INTENTS_ANDROID_EXTERNAL_INTENTS_FEATURES_H_
diff --git a/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java b/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java
new file mode 100644
--- /dev/null
+++ b/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalIntentsFeatures.java
@@ -0,0 +1,42 @@
+// Copyright 2021 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+package org.chromium.components.external_intents;
+
+import org.chromium.base.Features;
+import org.chromium.base.annotations.JNINamespace;
+import org.chromium.base.annotations.NativeMethods;
+
+/**
+ * Java accessor for base/feature_list.h state.
+ *
+ * This class provides methods to access values of feature flags registered in
+ * |kFeaturesExposedToJava| in components/external_intents/android/external_intents_feature_list.cc.
+ *
+ */
+@JNINamespace("external_intents")
+public class ExternalIntentsFeatures extends Features {
+    public static final String INTENT_BLOCK_EXTERNAL_FORM_REDIRECT_NO_GESTURE_NAME =
+            "IntentBlockExternalFormRedirectsNoGesture";
+
+    public static final ExternalIntentsFeatures INTENT_BLOCK_EXTERNAL_FORM_REDIRECT_NO_GESTURE =
+            new ExternalIntentsFeatures(0, INTENT_BLOCK_EXTERNAL_FORM_REDIRECT_NO_GESTURE_NAME);
+
+    private final int mOrdinal;
+
+    private ExternalIntentsFeatures(int ordinal, String name) {
+        super(name);
+        mOrdinal = ordinal;
+    }
+
+    @Override
+    protected long getFeaturePointer() {
+        return ExternalIntentsFeaturesJni.get().getFeature(mOrdinal);
+    }
+
+    @NativeMethods
+    interface Natives {
+        long getFeature(int ordinal);
+    }
+}
diff --git a/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalNavigationHandler.java b/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalNavigationHandler.java
--- a/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalNavigationHandler.java
+++ b/components/external_intents/android/java/src/org/chromium/components/external_intents/ExternalNavigationHandler.java
@@ -653,6 +653,12 @@ public class ExternalNavigationHandler {
         return false;
     }
 
+    /** Wrapper of check against the feature to support overriding for testing. */
+    @VisibleForTesting
+    boolean blockExternalFormRedirectsWithoutGesture() {
+        return ExternalIntentsFeatures.INTENT_BLOCK_EXTERNAL_FORM_REDIRECT_NO_GESTURE.isEnabled();
+    }
+
     /**
      * http://crbug.com/149218: We want to show the intent picker for ordinary links, providing
      * the link is not an incoming intent from another application, unless it's a redirect.
@@ -700,6 +706,19 @@ public class ExternalNavigationHandler {
             return false;
         }
 
+        // http://crbug.com/839751: Require user gestures for form submits to external
+        //                          protocols.
+        // TODO(tedchoc): Turn this on by default once we verify this change does
+        //                not break the world.
+        if (isRedirectFromFormSubmit && !incomingIntentRedirect && !params.hasUserGesture()
+                && blockExternalFormRedirectsWithoutGesture()) {
+            if (DEBUG) {
+                Log.i(TAG,
+                        "Incoming form intent attempting to redirect without "
+                                + "user gesture");
+            }
+            return false;
+        }
         // http://crbug/331571 : Do not override a navigation started from user typing.
         if (params.getRedirectHandler() != null
                 && params.getRedirectHandler().isNavigationFromUserTyping()) {
diff --git a/components/external_intents/android/javatests/src/org/chromium/components/external_intents/ExternalNavigationHandlerTest.java b/components/external_intents/android/javatests/src/org/chromium/components/external_intents/ExternalNavigationHandlerTest.java
--- a/components/external_intents/android/javatests/src/org/chromium/components/external_intents/ExternalNavigationHandlerTest.java
+++ b/components/external_intents/android/javatests/src/org/chromium/components/external_intents/ExternalNavigationHandlerTest.java
@@ -328,14 +328,12 @@ public class ExternalNavigationHandlerTest {
                 .withPageTransition(PageTransition.FORM_SUBMIT)
                 .withIsRedirect(true)
                 .withHasUserGesture(false)
-                .expecting(OverrideUrlLoadingResultType.OVERRIDE_WITH_EXTERNAL_INTENT,
-                        START_OTHER_ACTIVITY);
+                .expecting(OverrideUrlLoadingResultType.NO_OVERRIDE, IGNORE);
         checkUrl("http://youtube.com://")
                 .withPageTransition(PageTransition.FORM_SUBMIT)
                 .withIsRedirect(true)
                 .withHasUserGesture(false)
-                .expecting(OverrideUrlLoadingResultType.OVERRIDE_WITH_EXTERNAL_INTENT,
-                        START_OTHER_ACTIVITY);
+                .expecting(OverrideUrlLoadingResultType.NO_OVERRIDE, IGNORE);
     }
 
     @Test
@@ -2603,6 +2601,11 @@ public class ExternalNavigationHandlerTest {
                     && !packageName.equals(INVALID_WEBAPK_PACKAGE_NAME);
         }
 
+        @Override
+        public boolean blockExternalFormRedirectsWithoutGesture() {
+            return true;
+        }
+
         @Override
         protected boolean canLaunchIncognitoIntent(Intent intent, Context context) {
             mStartActivityInIncognitoIntent = intent;
--
2.25.1
