From: Wengling Chen <feiyu2817@gmail.com>
Date: Sat, 2 Nov 2019 09:22:31 +0100
Subject: Remove dependency on com.google.android.gms.auth

---
 chrome/android/BUILD.gn                       |  1 -
 .../browser/signin/services/android/BUILD.gn  |  1 -
 .../browser/signin/services/SigninHelper.java | 19 --------
 components/background_task_scheduler/BUILD.gn |  1 -
 .../signin/core/browser/android/BUILD.gn      |  1 -
 .../signin/SystemAccountManagerDelegate.java  | 21 +--------
 content/public/android/BUILD.gn               |  3 --
 .../content/browser/sms/SmsProviderGms.java   | 24 +---------
 .../content/browser/sms/Wrappers.java         | 34 +-------------
 content/test/BUILD.gn                         |  1 -
 remoting/android/client_java_tmpl.gni         |  1 -
 third_party/android_deps/BUILD.gn             | 47 -------------------
 12 files changed, 4 insertions(+), 150 deletions(-)

diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -276,7 +276,6 @@ android_library("chrome_java") {
     ":partner_location_descriptor_proto_java",
     ":update_proto_java",
     ":usage_stats_proto_java",
-    "$google_play_services_package:google_play_services_auth_base_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
     "$google_play_services_package:google_play_services_cast_framework_java",
diff --git a/chrome/browser/signin/services/android/BUILD.gn b/chrome/browser/signin/services/android/BUILD.gn
--- a/chrome/browser/signin/services/android/BUILD.gn
+++ b/chrome/browser/signin/services/android/BUILD.gn
@@ -29,7 +29,6 @@ android_library("java") {
   ]
   deps = [
     ":java_resources",
-    "$google_play_services_package:google_play_services_auth_base_java",
     "//base:base_java",
     "//base:jni_java",
     "//chrome/browser/preferences:java",
diff --git a/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/SigninHelper.java b/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/SigninHelper.java
--- a/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/SigninHelper.java
+++ b/chrome/browser/signin/services/android/java/src/org/chromium/chrome/browser/signin/services/SigninHelper.java
@@ -10,10 +10,6 @@ import android.util.Pair;
 
 import androidx.annotation.VisibleForTesting;
 
-import com.google.android.gms.auth.AccountChangeEvent;
-import com.google.android.gms.auth.GoogleAuthException;
-import com.google.android.gms.auth.GoogleAuthUtil;
-
 import org.chromium.base.ApplicationState;
 import org.chromium.base.ApplicationStatus;
 import org.chromium.base.ContextUtils;
@@ -55,21 +51,6 @@ public class SigninHelper implements ApplicationStatus.ApplicationStateListener
             implements SigninHelper.AccountChangeEventChecker {
         @Override
         public List<String> getAccountChangeEvents(Context context, int index, String accountName) {
-            try {
-                List<AccountChangeEvent> accountChangeEvents =
-                        GoogleAuthUtil.getAccountChangeEvents(context, index, accountName);
-                List<String> changedNames = new ArrayList<>(accountChangeEvents.size());
-                for (AccountChangeEvent event : accountChangeEvents) {
-                    if (event.getChangeType() == GoogleAuthUtil.CHANGE_TYPE_ACCOUNT_RENAMED_TO) {
-                        changedNames.add(event.getChangeData());
-                    } else {
-                        changedNames.add(null);
-                    }
-                }
-                return changedNames;
-            } catch (IOException | GoogleAuthException e) {
-                Log.w(TAG, "Failed to get change events", e);
-            }
             return new ArrayList<>(0);
         }
     }
diff --git a/components/background_task_scheduler/BUILD.gn b/components/background_task_scheduler/BUILD.gn
--- a/components/background_task_scheduler/BUILD.gn
+++ b/components/background_task_scheduler/BUILD.gn
@@ -121,7 +121,6 @@ if (is_android) {
 
     deps = [
       ":background_task_scheduler_task_ids_java",
-      "$google_play_services_package:google_play_services_auth_base_java",
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
       "$google_play_services_package:google_play_services_gcm_java",
diff --git a/components/signin/core/browser/android/BUILD.gn b/components/signin/core/browser/android/BUILD.gn
--- a/components/signin/core/browser/android/BUILD.gn
+++ b/components/signin/core/browser/android/BUILD.gn
@@ -14,7 +14,6 @@ generate_jni("jni_headers") {
 
 android_library("java") {
   deps = [
-    "$google_play_services_package:google_play_services_auth_base_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
     "//base:base_java",
diff --git a/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java b/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
--- a/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
+++ b/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
@@ -26,9 +26,6 @@ import android.os.SystemClock;
 
 import androidx.annotation.Nullable;
 
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.GoogleApiAvailability;
-
 import org.chromium.base.ApiCompatibilityUtils;
 import org.chromium.base.Callback;
 import org.chromium.base.ContextUtils;
@@ -86,17 +83,7 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
     }
 
     protected void checkCanUseGooglePlayServices() throws AccountManagerDelegateException {
-        Context context = ContextUtils.getApplicationContext();
-        final int resultCode =
-                ChromiumPlayServicesAvailability.getGooglePlayServicesConnectionResult(context);
-        if (resultCode == ConnectionResult.SUCCESS) {
-            return;
-        }
-
-        throw new GmsAvailabilityException(
-                String.format("Can't use Google Play Services: %s",
-                        GoogleApiAvailability.getInstance().getErrorString(resultCode)),
-                resultCode);
+        throw new GmsAvailabilityException("Can't use Google Play Services", 1);
     }
 
     @Override
@@ -182,11 +169,7 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
 
     @Override
     public boolean isGooglePlayServicesAvailable() {
-        // TODO(http://crbug.com/577190): Remove StrictMode override.
-        try (StrictModeContext ignored = StrictModeContext.allowDiskWrites()) {
-            return ChromiumPlayServicesAvailability.isGooglePlayServicesAvailable(
-                    ContextUtils.getApplicationContext());
-        }
+        return false;
     }
 
     protected boolean hasGetAccountsPermission() {
diff --git a/content/public/android/BUILD.gn b/content/public/android/BUILD.gn
--- a/content/public/android/BUILD.gn
+++ b/content/public/android/BUILD.gn
@@ -139,7 +139,6 @@ android_library("content_main_dex_java") {
 android_library("content_full_java") {
   deps = [
     ":content_main_dex_java",
-    "$google_play_services_package:google_play_services_auth_api_phone_java",
     "$google_play_services_package:google_play_services_base_java",
     "$google_play_services_package:google_play_services_basement_java",
     "$google_play_services_package:google_play_services_tasks_java",
@@ -308,8 +307,6 @@ android_library("content_full_java") {
     "java/src/org/chromium/content/browser/selection/SmartSelectionMetricsLogger.java",
     "java/src/org/chromium/content/browser/selection/SmartSelectionProvider.java",
     "java/src/org/chromium/content/browser/sms/SmsProviderGms.java",
-    "java/src/org/chromium/content/browser/sms/SmsUserConsentReceiver.java",
-    "java/src/org/chromium/content/browser/sms/SmsVerificationReceiver.java",
     "java/src/org/chromium/content/browser/sms/Wrappers.java",
     "java/src/org/chromium/content/browser/webcontents/WebContentsImpl.java",
     "java/src/org/chromium/content/browser/webcontents/WebContentsObserverProxy.java",
diff --git a/content/public/android/java/src/org/chromium/content/browser/sms/SmsProviderGms.java b/content/public/android/java/src/org/chromium/content/browser/sms/SmsProviderGms.java
--- a/content/public/android/java/src/org/chromium/content/browser/sms/SmsProviderGms.java
+++ b/content/public/android/java/src/org/chromium/content/browser/sms/SmsProviderGms.java
@@ -30,8 +30,6 @@ public class SmsProviderGms {
     private final long mSmsProviderGmsAndroid;
 
     private final @GmsBackend int mBackend;
-    private SmsUserConsentReceiver mUserConsentReceiver;
-    private SmsVerificationReceiver mVerificationReceiver;
 
     private Wrappers.WebOTPServiceContext mContext;
     private WindowAndroid mWindow;
@@ -42,19 +40,6 @@ public class SmsProviderGms {
         mBackend = backend;
 
         mContext = new Wrappers.WebOTPServiceContext(ContextUtils.getApplicationContext());
-
-        // For AUTO, create both receivers since we may need to fallback to using the user consent
-        // backend when verification backend is not available.
-        if (mBackend == GmsBackend.AUTO || mBackend == GmsBackend.VERIFICATION) {
-            mVerificationReceiver = new SmsVerificationReceiver(this, mContext);
-        }
-
-        if (mBackend == GmsBackend.AUTO || mBackend == GmsBackend.USER_CONSENT) {
-            mUserConsentReceiver = new SmsUserConsentReceiver(this, mContext);
-        }
-
-        assert (mVerificationReceiver != null || mUserConsentReceiver != null);
-        Log.i(TAG, "construction successfull %s, %s", mVerificationReceiver, mUserConsentReceiver);
     }
 
     // Methods that are called by native implementation
@@ -66,8 +51,6 @@ public class SmsProviderGms {
 
     @CalledByNative
     private void destroy() {
-        if (mVerificationReceiver != null) mVerificationReceiver.destroy();
-        if (mUserConsentReceiver != null) mUserConsentReceiver.destroy();
     }
 
     @CalledByNative
@@ -76,10 +59,8 @@ public class SmsProviderGms {
         switch (mBackend) {
             case GmsBackend.AUTO:
             case GmsBackend.VERIFICATION:
-                mVerificationReceiver.listen(window);
                 break;
             case GmsBackend.USER_CONSENT:
-                mUserConsentReceiver.listen(window);
                 break;
         }
     }
@@ -97,7 +78,6 @@ public class SmsProviderGms {
 
         if (mBackend == GmsBackend.AUTO) {
             Log.d(TAG, "Retry using user consent API.");
-            mUserConsentReceiver.listen(mWindow);
         } else {
             onNotAvailable();
         }
@@ -126,9 +106,7 @@ public class SmsProviderGms {
         if (mClient != null) {
             return mClient;
         }
-        mClient = new Wrappers.SmsRetrieverClientWrapper(
-                mUserConsentReceiver != null ? mUserConsentReceiver.createClient() : null,
-                mVerificationReceiver != null ? mVerificationReceiver.createClient() : null);
+        mClient = new Wrappers.SmsRetrieverClientWrapper();
 
         return mClient;
     }
diff --git a/content/public/android/java/src/org/chromium/content/browser/sms/Wrappers.java b/content/public/android/java/src/org/chromium/content/browser/sms/Wrappers.java
--- a/content/public/android/java/src/org/chromium/content/browser/sms/Wrappers.java
+++ b/content/public/android/java/src/org/chromium/content/browser/sms/Wrappers.java
@@ -10,9 +10,6 @@ import android.content.ContextWrapper;
 import android.content.Intent;
 import android.content.IntentFilter;
 
-import com.google.android.gms.auth.api.phone.SmsCodeBrowserClient;
-import com.google.android.gms.auth.api.phone.SmsCodeRetriever;
-import com.google.android.gms.auth.api.phone.SmsRetrieverClient;
 import com.google.android.gms.tasks.Task;
 
 class Wrappers {
@@ -23,16 +20,9 @@ class Wrappers {
      * Wraps com.google.android.gms.auth.api.phone.SmsRetrieverClient.
      */
     static class SmsRetrieverClientWrapper {
-        // Used for user consent flow.
-        private final SmsRetrieverClient mSmsRetrieverClient;
-        // Used for browser code flow.
-        private final SmsCodeBrowserClient mSmsCodeBrowserClient;
         private WebOTPServiceContext mContext;
 
-        public SmsRetrieverClientWrapper(
-                SmsRetrieverClient smsRetrieverClient, SmsCodeBrowserClient smsCodeBrowserClient) {
-            mSmsRetrieverClient = smsRetrieverClient;
-            mSmsCodeBrowserClient = smsCodeBrowserClient;
+        public SmsRetrieverClientWrapper() {
         }
 
         public void setContext(WebOTPServiceContext context) {
@@ -42,14 +32,6 @@ class Wrappers {
         public WebOTPServiceContext getContext() {
             return mContext;
         }
-
-        public Task<Void> startSmsCodeBrowserRetriever() {
-            return mSmsCodeBrowserClient.startSmsCodeRetriever();
-        }
-
-        public Task<Void> startSmsUserConsent(String senderAddress) {
-            return mSmsRetrieverClient.startSmsUserConsent(senderAddress);
-        }
     }
 
     /**
@@ -64,25 +46,11 @@ class Wrappers {
             super(context);
         }
 
-        public SmsVerificationReceiver getRegisteredVerificationReceiver() {
-            return (SmsVerificationReceiver) mVerificationReceiver;
-        }
-
-        public SmsUserConsentReceiver getRegisteredUserConsentReceiver() {
-            return (SmsUserConsentReceiver) mUserConsentReceiver;
-        }
-
         // ---------------------------------------------------------------------
         // Context overrides:
 
         @Override
         public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter) {
-            if (filter.hasAction(SmsCodeRetriever.SMS_CODE_RETRIEVED_ACTION)) {
-                mVerificationReceiver = receiver;
-            } else {
-                mUserConsentReceiver = receiver;
-            }
-
             return super.registerReceiver(receiver, filter);
         }
 
diff --git a/content/test/BUILD.gn b/content/test/BUILD.gn
--- a/content/test/BUILD.gn
+++ b/content/test/BUILD.gn
@@ -2630,7 +2630,6 @@ if (is_android) {
     testonly = true
     sources = content_java_sources_needing_jni
     deps = [
-      "$google_play_services_package:google_play_services_auth_api_phone_java",
       "$google_play_services_package:google_play_services_base_java",
       "$google_play_services_package:google_play_services_basement_java",
       "$google_play_services_package:google_play_services_tasks_java",
diff --git a/remoting/android/client_java_tmpl.gni b/remoting/android/client_java_tmpl.gni
--- a/remoting/android/client_java_tmpl.gni
+++ b/remoting/android/client_java_tmpl.gni
@@ -104,7 +104,6 @@ template("remoting_android_client_java_tmpl") {
 
     if (defined(invoker.play_services_package)) {
       deps += [
-        "${invoker.play_services_package}:google_play_services_auth_base_java",
         "${invoker.play_services_package}:google_play_services_base_java",
         "${invoker.play_services_package}:google_play_services_basement_java",
       ]
diff --git a/third_party/android_deps/BUILD.gn b/third_party/android_deps/BUILD.gn
--- a/third_party/android_deps/BUILD.gn
+++ b/third_party/android_deps/BUILD.gn
@@ -1155,53 +1155,6 @@ java_prebuilt("com_android_tools_build_jetifier_jetifier_processor_java") {
   ]
 }
 
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_auth_java") {
-  aar_path = "libs/com_google_android_gms_play_services_auth/play-services-auth-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_auth/com_google_android_gms_play_services_auth.info"
-  deps = [
-    ":androidx_fragment_fragment_java",
-    ":androidx_loader_loader_java",
-    ":google_play_services_auth_api_phone_java",
-    ":google_play_services_auth_base_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_auth_api_phone_java") {
-  aar_path = "libs/com_google_android_gms_play_services_auth_api_phone/play-services-auth-api-phone-17.5.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_auth_api_phone/com_google_android_gms_play_services_auth_api_phone.info"
-  deps = [
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
-# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
-android_aar_prebuilt("google_play_services_auth_base_java") {
-  aar_path = "libs/com_google_android_gms_play_services_auth_base/play-services-auth-base-17.0.0.aar"
-  info_path = "libs/com_google_android_gms_play_services_auth_base/com_google_android_gms_play_services_auth_base.info"
-  deps = [
-    ":androidx_collection_collection_java",
-    ":google_play_services_base_java",
-    ":google_play_services_basement_java",
-    ":google_play_services_tasks_java",
-  ]
-
-  # Removing drawables from GMS .aars as they are unused bloat.
-  strip_drawables = true
-}
-
 # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
 android_aar_prebuilt("google_play_services_base_java") {
   aar_path = "libs/com_google_android_gms_play_services_base/play-services-base-17.1.0.aar"
-- 
2.17.1

