From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Sat, 10 Nov 2018 17:20:21 +0100
Subject: Disable promos displayed in bookmarks manager

Remove personalized signin promo view from
bookmarks, never reach signin thresholds.
---
 ...rsonalized_signin_promo_view_bookmarks.xml | 30 -----------
 .../bookmarks/BookmarkItemsAdapter.java       | 23 +-------
 .../bookmarks/BookmarkPromoHeader.java        | 52 +------------------
 .../ReorderBookmarkItemsAdapter.java          | 19 +------
 .../browser/signin/SigninPromoController.java | 21 +-------
 5 files changed, 7 insertions(+), 138 deletions(-)
 delete mode 100644 chrome/android/java/res/layout/personalized_signin_promo_view_bookmarks.xml

diff --git a/chrome/android/java/res/layout/personalized_signin_promo_view_bookmarks.xml b/chrome/android/java/res/layout/personalized_signin_promo_view_bookmarks.xml
deleted file mode 100644
--- a/chrome/android/java/res/layout/personalized_signin_promo_view_bookmarks.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright 2017 The Chromium Authors. All rights reserved.
-     Use of this source code is governed by a BSD-style license that can be
-     found in the LICENSE file. -->
-
-<org.chromium.chrome.browser.signin.PersonalizedSigninPromoView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/signin_promo_view_container"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_margin="16dp"
-    android:background="@drawable/hairline_border_card_background"
-    android:gravity="center_horizontal"
-    android:orientation="vertical"
-    android:paddingBottom="12dp"
-    android:paddingTop="14dp">
-
-    <FrameLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="12dp"
-        android:layout_marginEnd="12dp"
-        android:layout_marginStart="12dp">
-
-        <include layout="@layout/personalized_signin_promo_view_header"/>
-    </FrameLayout>
-
-    <include layout="@layout/personalized_signin_promo_view_body"/>
-
-</org.chromium.chrome.browser.signin.PersonalizedSigninPromoView>
\ No newline at end of file
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkItemsAdapter.java
@@ -60,7 +60,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
 
     private BookmarkDelegate mDelegate;
     private Context mContext;
-    private BookmarkPromoHeader mPromoHeaderManager;
     private String mSearchText;
     private BookmarkId mCurrentFolder;
 
@@ -219,9 +218,9 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
 
         switch (viewType) {
             case ViewType.PERSONALIZED_SIGNIN_PROMO:
-                return mPromoHeaderManager.createPersonalizedSigninPromoHolder(parent);
+                return null;
             case ViewType.SYNC_PROMO:
-                return mPromoHeaderManager.createSyncPromoHolder(parent);
+                return null;
             case ViewType.FOLDER:
                 BookmarkFolderRow folder = (BookmarkFolderRow) LayoutInflater.from(
                         parent.getContext()).inflate(R.layout.bookmark_folder_row, parent, false);
@@ -242,8 +241,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
     public void onBindViewHolder(ViewHolder holder, int position) {
         switch (holder.getItemViewType()) {
             case ViewType.PERSONALIZED_SIGNIN_PROMO:
-                PersonalizedSigninPromoView view = (PersonalizedSigninPromoView) holder.itemView;
-                mPromoHeaderManager.setupPersonalizedSigninPromo(view);
                 break;
             case ViewType.SYNC_PROMO:
                 break;
@@ -262,7 +259,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
     public void onViewRecycled(ViewHolder holder) {
         switch (holder.getItemViewType()) {
             case ViewType.PERSONALIZED_SIGNIN_PROMO:
-                mPromoHeaderManager.detachPersonalizePromoView();
                 break;
             default:
                 // Other view holders don't have special recycling code.
@@ -298,7 +294,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
             }
         };
 
-        mPromoHeaderManager = new BookmarkPromoHeader(mContext, promoHeaderChangeAction);
         populateTopLevelFoldersList();
         notifyDataSetChanged();
     }
@@ -309,7 +304,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
         mDelegate.removeUIObserver(this);
         mDelegate.getModel().removeObserver(mBookmarkModelObserver);
         mDelegate = null;
-        mPromoHeaderManager.destroy();
     }
 
     @Override
@@ -389,19 +383,6 @@ class BookmarkItemsAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
         if (currentUIState == BookmarkUIState.STATE_SEARCHING) return;
 
         assert currentUIState == BookmarkUIState.STATE_FOLDER : "Unexpected UI state";
-
-        switch (mPromoHeaderManager.getPromoState()) {
-            case BookmarkPromoHeader.PromoState.PROMO_NONE:
-                return;
-            case BookmarkPromoHeader.PromoState.PROMO_SIGNIN_PERSONALIZED:
-                mPromoHeaderSection.add(ViewType.PERSONALIZED_SIGNIN_PROMO);
-                return;
-            case BookmarkPromoHeader.PromoState.PROMO_SYNC:
-                mPromoHeaderSection.add(ViewType.SYNC_PROMO);
-                return;
-            default:
-                assert false : "Unexpected value for promo state!";
-        }
     }
 
     private void populateTopLevelFoldersList() {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/BookmarkPromoHeader.java
@@ -20,7 +20,6 @@ import org.chromium.chrome.R;
 import org.chromium.chrome.browser.preferences.ChromePreferenceKeys;
 import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
 import org.chromium.chrome.browser.signin.IdentityServicesProvider;
-import org.chromium.chrome.browser.signin.PersonalizedSigninPromoView;
 import org.chromium.chrome.browser.signin.ProfileDataCache;
 import org.chromium.chrome.browser.signin.SigninManager;
 import org.chromium.chrome.browser.signin.SigninManager.SignInStateObserver;
@@ -124,19 +123,6 @@ class BookmarkPromoHeader implements AndroidSyncSettingsObserver, SignInStateObs
         return mPromoState;
     }
 
-    /**
-     * @return Personalized signin promo header {@link ViewHolder} instance that can be used with
-     *         {@link RecyclerView}.
-     */
-    // TODO(crbug.com/160194): Clean up after bookmark reordering launches.
-    ViewHolder createPersonalizedSigninPromoHolder(ViewGroup parent) {
-        View view = LayoutInflater.from(mContext).inflate(
-                R.layout.personalized_signin_promo_view_bookmarks, parent, false);
-
-        // ViewHolder is abstract and it cannot be instantiated directly.
-        return new ViewHolder(view) {};
-    }
-
     /**
      * @return Sync promo header {@link ViewHolder} instance that can be used with
      *         {@link RecyclerView}.
@@ -149,40 +135,6 @@ class BookmarkPromoHeader implements AndroidSyncSettingsObserver, SignInStateObs
         return new ViewHolder(view) {};
     }
 
-    /**
-     * Configures the personalized signin promo and records promo impressions.
-     * @param view The view to be configured.
-     */
-    void setupPersonalizedSigninPromo(PersonalizedSigninPromoView view) {
-        SigninPromoUtil.setupPromoViewFromCache(mSigninPromoController, mProfileDataCache, view,
-                this::setPersonalizedSigninPromoDeclined);
-    }
-
-    /**
-     * Detaches the previously configured {@link PersonalizedSigninPromoView}.
-     */
-    void detachPersonalizePromoView() {
-        if (mSigninPromoController != null) mSigninPromoController.detach();
-    }
-
-    /**
-     * Saves that the personalized signin promo was declined and updates the UI.
-     */
-    private void setPersonalizedSigninPromoDeclined() {
-        SharedPreferencesManager.getInstance().writeBoolean(
-                ChromePreferenceKeys.PREF_PERSONALIZED_SIGNIN_PROMO_DECLINED, true);
-        mPromoState = calculatePromoState();
-        triggerPromoUpdate();
-    }
-
-    /**
-     * @return Whether the user declined the personalized signin promo.
-     */
-    private boolean wasPersonalizedSigninPromoDeclined() {
-        return SharedPreferencesManager.getInstance().readBoolean(
-                ChromePreferenceKeys.PREF_PERSONALIZED_SIGNIN_PROMO_DECLINED, false);
-    }
-
     private @PromoState int calculatePromoState() {
         if (sPromoStateForTests != null) {
             return sPromoStateForTests;
@@ -195,8 +147,7 @@ class BookmarkPromoHeader implements AndroidSyncSettingsObserver, SignInStateObs
         if (!ChromeSigninController.get().isSignedIn()) {
             boolean impressionLimitReached = !SigninPromoController.hasNotReachedImpressionLimit(
                     SigninAccessPoint.BOOKMARK_MANAGER);
-            if (!mSignInManager.isSignInAllowed() || impressionLimitReached
-                    || wasPersonalizedSigninPromoDeclined()) {
+            if (!mSignInManager.isSignInAllowed() || impressionLimitReached) {
                 return PromoState.PROMO_NONE;
             }
             return PromoState.PROMO_SIGNIN_PERSONALIZED;
@@ -248,7 +199,6 @@ class BookmarkPromoHeader implements AndroidSyncSettingsObserver, SignInStateObs
     }
 
     private void triggerPromoUpdate() {
-        detachPersonalizePromoView();
         mPromoHeaderChangeAction.run();
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/ReorderBookmarkItemsAdapter.java b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/ReorderBookmarkItemsAdapter.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/ReorderBookmarkItemsAdapter.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/bookmarks/ReorderBookmarkItemsAdapter.java
@@ -188,8 +188,6 @@ class ReorderBookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkIte
         assert mDelegate != null;
 
         switch (viewType) {
-            case ViewType.PERSONALIZED_SIGNIN_PROMO:
-                return mPromoHeaderManager.createPersonalizedSigninPromoHolder(parent);
             case ViewType.SYNC_PROMO:
                 return mPromoHeaderManager.createSyncPromoHolder(parent);
             case ViewType.FOLDER:
@@ -204,10 +202,7 @@ class ReorderBookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkIte
 
     @Override
     public void onBindViewHolder(ViewHolder holder, int position) {
-        if (holder.getItemViewType() == ViewType.PERSONALIZED_SIGNIN_PROMO) {
-            PersonalizedSigninPromoView view = (PersonalizedSigninPromoView) holder.itemView;
-            mPromoHeaderManager.setupPersonalizedSigninPromo(view);
-        } else if (!(holder.getItemViewType() == ViewType.SYNC_PROMO)) {
+        if (!(holder.getItemViewType() == ViewType.SYNC_PROMO)) {
             BookmarkRow row = ((BookmarkRow) holder.itemView);
             BookmarkId id = getIdByPosition(position);
             row.setBookmarkId(id, getLocationFromPosition(position));
@@ -231,13 +226,6 @@ class ReorderBookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkIte
 
     @Override
     public void onViewRecycled(ViewHolder holder) {
-        switch (holder.getItemViewType()) {
-            case ViewType.PERSONALIZED_SIGNIN_PROMO:
-                mPromoHeaderManager.detachPersonalizePromoView();
-                break;
-            default:
-                // Other view holders don't have special recycling code.
-        }
     }
 
     /**
@@ -406,9 +394,6 @@ class ReorderBookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkIte
                 case BookmarkPromoHeader.PromoState.PROMO_NONE:
                     mPromoHeaderType = ViewType.INVALID_PROMO;
                     break;
-                case BookmarkPromoHeader.PromoState.PROMO_SIGNIN_PERSONALIZED:
-                    mPromoHeaderType = ViewType.PERSONALIZED_SIGNIN_PROMO;
-                    break;
                 case BookmarkPromoHeader.PromoState.PROMO_SYNC:
                     mPromoHeaderType = ViewType.SYNC_PROMO;
                     break;
@@ -573,4 +558,4 @@ class ReorderBookmarkItemsAdapter extends DragReorderableListAdapter<BookmarkIte
     private void clearHighlight() {
         mHighlightedBookmark = null;
     }
-}
\ No newline at end of file
+}
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninPromoController.java b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninPromoController.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninPromoController.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninPromoController.java
@@ -70,25 +70,8 @@ public class SigninPromoController {
      */
     public static boolean hasNotReachedImpressionLimit(@AccessPoint int accessPoint) {
         SharedPreferencesManager preferencesManager = SharedPreferencesManager.getInstance();
-        switch (accessPoint) {
-            case SigninAccessPoint.BOOKMARK_MANAGER:
-                return preferencesManager.readInt(
-                               ChromePreferenceKeys.SIGNIN_PROMO_IMPRESSIONS_COUNT_BOOKMARKS)
-                        < MAX_IMPRESSIONS_BOOKMARKS;
-            case SigninAccessPoint.NTP_CONTENT_SUGGESTIONS:
-                // There is no impression limit for NTP content suggestions.
-                return true;
-            case SigninAccessPoint.RECENT_TABS:
-                // There is no impression limit for Recent Tabs.
-                return true;
-            case SigninAccessPoint.SETTINGS:
-                return preferencesManager.readInt(
-                               ChromePreferenceKeys.SIGNIN_PROMO_IMPRESSIONS_COUNT_SETTINGS)
-                        < MAX_IMPRESSIONS_SETTINGS;
-            default:
-                assert false : "Unexpected value for access point: " + accessPoint;
-                return false;
-        }
+        // never show anything
+        return true;
     }
 
     /**
-- 
2.17.1

