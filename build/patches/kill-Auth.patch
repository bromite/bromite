From: thermatk <thermatk@thermatk.com>
Date: Fri, 22 Jun 2018 17:06:15 +0200
Subject: kill Auth

---
 .../signin/SystemAccountManagerDelegate.java  | 52 ++-----------------
 1 file changed, 4 insertions(+), 48 deletions(-)

diff --git a/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java b/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
--- a/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
+++ b/components/signin/public/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
@@ -26,9 +26,6 @@ import android.os.SystemClock;
 
 import androidx.annotation.Nullable;
 
-import com.google.android.gms.auth.GoogleAuthException;
-import com.google.android.gms.auth.GoogleAuthUtil;
-import com.google.android.gms.auth.GooglePlayServicesAvailabilityException;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GoogleApiAvailability;
 
@@ -120,14 +117,7 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
         // so don't report any accounts if Google Play Services are out of date.
         checkCanUseGooglePlayServices();
 
-        if (!hasGetAccountsPermission()) {
-            return new Account[] {};
-        }
-        long now = SystemClock.elapsedRealtime();
-        Account[] accounts = mAccountManager.getAccountsByType(GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE);
-        long elapsed = SystemClock.elapsedRealtime() - now;
-        recordElapsedTimeHistogram("Signin.AndroidGetAccountsTime_AccountManager", elapsed);
-        return accounts;
+        return new Account[] {};
     }
 
     @Override
@@ -135,30 +125,12 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
             throws AuthException {
         assert !ThreadUtils.runningOnUiThread();
         assert AccountUtils.GOOGLE_ACCOUNT_TYPE.equals(account.type);
-        try {
-            return new AccessTokenData(GoogleAuthUtil.getTokenWithNotification(
-                    ContextUtils.getApplicationContext(), account, authTokenScope, null));
-        } catch (GoogleAuthException ex) {
-            // This case includes a UserRecoverableNotifiedException, but most clients will have
-            // their own retry mechanism anyway.
-            throw new AuthException(AuthException.NONTRANSIENT,
-                    "Error while getting token for scope '" + authTokenScope + "'", ex);
-        } catch (IOException ex) {
-            throw new AuthException(AuthException.TRANSIENT, ex);
-        }
+        throw new AuthException(AuthException.NONTRANSIENT,
+                    "Error while getting token for scope '" + authTokenScope + "'");
     }
 
     @Override
     public void invalidateAuthToken(String authToken) throws AuthException {
-        try {
-            GoogleAuthUtil.clearToken(ContextUtils.getApplicationContext(), authToken);
-        } catch (GooglePlayServicesAvailabilityException ex) {
-            throw new AuthException(AuthException.NONTRANSIENT, ex);
-        } catch (GoogleAuthException ex) {
-            throw new AuthException(AuthException.NONTRANSIENT, ex);
-        } catch (IOException ex) {
-            throw new AuthException(AuthException.TRANSIENT, ex);
-        }
     }
 
     @Override
@@ -192,17 +164,6 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
     @SuppressLint("MissingPermission")
     @Override
     public void createAddAccountIntent(Callback<Intent> callback) {
-        AccountManagerCallback<Bundle> accountManagerCallback = accountManagerFuture -> {
-            try {
-                Bundle bundle = accountManagerFuture.getResult();
-                callback.onResult(bundle.getParcelable(AccountManager.KEY_INTENT));
-            } catch (OperationCanceledException | IOException | AuthenticatorException e) {
-                Log.e(TAG, "Error while creating an intent to add an account: ", e);
-                callback.onResult(null);
-            }
-        };
-        mAccountManager.addAccount(GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE, null, null, null, null,
-                accountManagerCallback, null);
     }
 
     // No permission is needed on 23+ and Chrome always has MANAGE_ACCOUNTS permission on lower APIs
@@ -220,12 +181,7 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
     @Nullable
     @Override
     public String getAccountGaiaId(String accountEmail) {
-        try {
-            return GoogleAuthUtil.getAccountId(ContextUtils.getApplicationContext(), accountEmail);
-        } catch (IOException | GoogleAuthException ex) {
-            Log.e(TAG, "SystemAccountManagerDelegate.getAccountGaiaId", ex);
-            return null;
-        }
+        return null;
     }
 
     @Override
-- 
2.17.1

