From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Mon, 8 Aug 2022 02:35:35 +0200
Subject: Re-introduce modal dialog flag to close all tabs

Revert "[Tab Management] Cleanup close all tabs modal dialog flags"

This reverts commit 614a998c5af5dcd36baffa6d65090c0b8decb03f.

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 .../tab_management/CloseAllTabsDialog.java    |  6 +++++
 .../CloseAllTabsDialogTest.java               |  3 +++
 .../CloseAllTabsDialogUnitTest.java           | 23 +++++++++++++++++++
 chrome/browser/about_flags.cc                 |  7 ++++++
 chrome/browser/flag_descriptions.cc           |  5 ++++
 chrome/browser/flag_descriptions.h            |  3 +++
 .../flags/android/chrome_feature_list.cc      |  4 ++++
 .../flags/android/chrome_feature_list.h       |  1 +
 .../browser/flags/ChromeFeatureList.java      |  1 +
 9 files changed, 53 insertions(+)

diff --git a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialog.java b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialog.java
--- a/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialog.java
+++ b/chrome/android/features/tab_ui/java/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialog.java
@@ -9,6 +9,7 @@ import android.content.Context;
 import org.chromium.base.metrics.RecordHistogram;
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.base.supplier.Supplier;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.tab_ui.R;
 import org.chromium.ui.modaldialog.DialogDismissalCause;
 import org.chromium.ui.modaldialog.ModalDialogManager;
@@ -30,6 +31,11 @@ public class CloseAllTabsDialog {
     public static void show(Context context,
             Supplier<ModalDialogManager> modalDialogManagerSupplier, Runnable onCloseAll,
             boolean isIncognito) {
+        if (!ChromeFeatureList.isEnabled(ChromeFeatureList.CLOSE_ALL_TABS_MODAL_DIALOG)) {
+            onCloseAll.run();
+            return;
+        }
+
         assert modalDialogManagerSupplier.hasValue();
         final ModalDialogManager manager = modalDialogManagerSupplier.get();
 
diff --git a/chrome/android/features/tab_ui/javatests/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogTest.java b/chrome/android/features/tab_ui/javatests/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogTest.java
--- a/chrome/android/features/tab_ui/javatests/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogTest.java
+++ b/chrome/android/features/tab_ui/javatests/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogTest.java
@@ -28,11 +28,13 @@ import org.chromium.base.test.params.ParameterSet;
 import org.chromium.base.test.params.ParameterizedRunner;
 import org.chromium.base.test.util.CommandLineFlags;
 import org.chromium.base.test.util.Restriction;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.flags.ChromeSwitches;
 import org.chromium.chrome.browser.tabmodel.TabModelSelector;
 import org.chromium.chrome.browser.ui.appmenu.AppMenuTestSupport;
 import org.chromium.chrome.test.ChromeJUnit4RunnerDelegate;
 import org.chromium.chrome.test.ChromeTabbedActivityTestRule;
+import org.chromium.chrome.test.util.browser.Features.EnableFeatures;
 import org.chromium.content_public.browser.test.util.TestThreadUtils;
 import org.chromium.ui.test.util.UiRestriction;
 
@@ -44,6 +46,7 @@ import java.util.List;
  */
 @RunWith(ParameterizedRunner.class)
 @UseRunnerDelegate(ChromeJUnit4RunnerDelegate.class)
+@EnableFeatures({ChromeFeatureList.CLOSE_ALL_TABS_MODAL_DIALOG})
 @CommandLineFlags.Add({ChromeSwitches.DISABLE_FIRST_RUN_EXPERIENCE})
 public class CloseAllTabsDialogTest {
     @ParameterAnnotations.ClassParameter
diff --git a/chrome/android/features/tab_ui/junit/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogUnitTest.java b/chrome/android/features/tab_ui/junit/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogUnitTest.java
--- a/chrome/android/features/tab_ui/junit/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogUnitTest.java
+++ b/chrome/android/features/tab_ui/junit/src/org/chromium/chrome/browser/tasks/tab_management/CloseAllTabsDialogUnitTest.java
@@ -25,9 +25,11 @@ import org.mockito.Mockito;
 import org.mockito.MockitoAnnotations;
 import org.robolectric.annotation.Config;
 
+import org.chromium.base.FeatureList;
 import org.chromium.base.metrics.UmaRecorder;
 import org.chromium.base.metrics.UmaRecorderHolder;
 import org.chromium.base.test.BaseRobolectricTestRunner;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.tab_ui.R;
 import org.chromium.ui.modaldialog.DialogDismissalCause;
 import org.chromium.ui.modaldialog.ModalDialogManager;
@@ -135,6 +137,7 @@ public class CloseAllTabsDialogUnitTest {
     @Test
     @SmallTest
     public void testDialog() {
+        enableFeature(true);
         final boolean isIncognito = false;
         CloseAllTabsDialog.show(mContext, this::getModalDialogManager,
                 () -> { mRunnableCalled = true; }, isIncognito);
@@ -148,6 +151,7 @@ public class CloseAllTabsDialogUnitTest {
     @Test
     @SmallTest
     public void testDismissButton() {
+        enableFeature(true);
         final boolean isIncognito = true;
         CloseAllTabsDialog.show(mContext, this::getModalDialogManager,
                 () -> { mRunnableCalled = true; }, isIncognito);
@@ -161,6 +165,7 @@ public class CloseAllTabsDialogUnitTest {
     @Test
     @SmallTest
     public void testDismissNoButton() {
+        enableFeature(true);
         final boolean isIncognito = false;
         CloseAllTabsDialog.show(mContext, this::getModalDialogManager,
                 () -> { mRunnableCalled = true; }, isIncognito);
@@ -171,4 +176,22 @@ public class CloseAllTabsDialogUnitTest {
         assertFalse(mRunnableCalled);
         verifyDismissed(false, isIncognito);
     }
+
+    @Test
+    @SmallTest
+    public void testDialogInactive() {
+        enableFeature(false);
+        final boolean isIncognito = false;
+        CloseAllTabsDialog.show(mContext, this::getModalDialogManager,
+                () -> { mRunnableCalled = true; }, isIncognito);
+
+        assertNull(mMockModalDialogManager.getDialogModel());
+        assertTrue(mRunnableCalled);
+    }
+
+    private void enableFeature(boolean enable) {
+        FeatureList.TestValues values = new FeatureList.TestValues();
+        values.addFeatureFlagOverride(ChromeFeatureList.CLOSE_ALL_TABS_MODAL_DIALOG, enable);
+        FeatureList.setTestValues(values);
+    }
 }
diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -8731,6 +8731,13 @@ const FeatureEntry kFeatureEntries[] = {
      FEATURE_VALUE_TYPE(features::kWaylandScreenCoordinatesEnabled)},
 #endif
 
+#if BUILDFLAG(IS_ANDROID)
+    {"close-all-tabs-modal-dialog",
+     flag_descriptions::kCloseAllTabsModalDialogName,
+     flag_descriptions::kCloseAllTabsModalDialogDescription, kOsAndroid,
+     FEATURE_VALUE_TYPE(chrome::android::kCloseAllTabsModalDialog)},
+#endif  // BUILDFLAG(IS_ANDROID)
+
 #if !BUILDFLAG(IS_ANDROID)
     {"enable-tailored-security-desktop-notice",
      flag_descriptions::kTailoredSecurityDesktopNoticeName,
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -3390,6 +3390,11 @@ const char kEnableCbdSignOutDescription[] =
     "Enable additional affordance to sign out when clearing browsing data and "
     "ensure consistent behavior for all signed-in users.";
 
+const char kCloseAllTabsModalDialogName[] = "Close all tabs modal dialog";
+const char kCloseAllTabsModalDialogDescription[] =
+    "Shows a confirmation modal dialog when clicking 'Close all tabs' in the"
+    "app menu.";
+
 const char kCloseTabSuggestionsName[] = "Suggest to close Tabs";
 const char kCloseTabSuggestionsDescription[] =
     "Suggests to the user to close Tabs that haven't been used beyond a "
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -379,6 +379,9 @@ extern const char kContextMenuSearchAndShopWithGoogleLensDescription[];
 extern const char kClientStorageAccessContextAuditingName[];
 extern const char kClientStorageAccessContextAuditingDescription[];
 
+extern const char kCloseAllTabsModalDialogName[];
+extern const char kCloseAllTabsModalDialogDescription[];
+
 extern const char kClosedTabCacheName[];
 extern const char kClosedTabCacheDescription[];
 
diff --git a/chrome/browser/flags/android/chrome_feature_list.cc b/chrome/browser/flags/android/chrome_feature_list.cc
--- a/chrome/browser/flags/android/chrome_feature_list.cc
+++ b/chrome/browser/flags/android/chrome_feature_list.cc
@@ -179,6 +179,7 @@ const base::Feature* const kFeaturesExposedToJava[] = {
     &kBackgroundThreadPool,
     &kBulkTabRestore,
     &kCastDeviceFilter,
+    &kCloseAllTabsModalDialog,
     &kCloseTabSuggestions,
     &kBookmarksExportUseSaf,
     &kCriticalPersistedTabData,
@@ -501,6 +502,9 @@ const base::Feature kBulkTabRestore{"BulkTabRestore",
 const base::Feature kConditionalTabStripAndroid{
     "ConditionalTabStripAndroid", base::FEATURE_DISABLED_BY_DEFAULT};
 
+const base::Feature kCloseAllTabsModalDialog{"CloseAllTabsModalDialog",
+                                             base::FEATURE_ENABLED_BY_DEFAULT};
+
 // Used in downstream code.
 const base::Feature kCastDeviceFilter{"CastDeviceFilter",
                                       base::FEATURE_DISABLED_BY_DEFAULT};
diff --git a/chrome/browser/flags/android/chrome_feature_list.h b/chrome/browser/flags/android/chrome_feature_list.h
--- a/chrome/browser/flags/android/chrome_feature_list.h
+++ b/chrome/browser/flags/android/chrome_feature_list.h
@@ -32,6 +32,7 @@ extern const base::Feature kAppMenuMobileSiteOption;
 extern const base::Feature kAppToWebAttribution;
 extern const base::Feature kBackgroundThreadPool;
 extern const base::Feature kBulkTabRestore;
+extern const base::Feature kCloseAllTabsModalDialog;
 extern const base::Feature kCloseTabSuggestions;
 extern const base::Feature kCriticalPersistedTabData;
 extern const base::Feature kCommerceCoupons;
diff --git a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
--- a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
+++ b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
@@ -261,6 +261,7 @@ public abstract class ChromeFeatureList {
     public static final String CCT_RESIZABLE_90_MAXIMUM_HEIGHT = "CCTResizable90MaximumHeight";
     public static final String CCT_RESIZABLE_ALLOW_RESIZE_BY_USER_GESTURE =
             "CCTResizableAllowResizeByUserGesture";
+    public static final String CLOSE_ALL_TABS_MODAL_DIALOG = "CloseAllTabsModalDialog";
     public static final String CCT_RESIZABLE_FOR_FIRST_PARTIES = "CCTResizableForFirstParties";
     public static final String CCT_RESIZABLE_FOR_THIRD_PARTIES = "CCTResizableForThirdParties";
     public static final String CCT_RESOURCE_PREFETCH = "CCTResourcePrefetch";
--
2.25.1
